{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  const canvasWidth = width - 2 * dim.main.padding;\n  const canvasHeight = height - 2 * dim.main.padding;\n  var root = hierarchy(recipe);\n\n  const desc = a => a.descendants();\n\n  root = root.each(function (d) {\n    if (d.height == root.height + 1) {\n      var posYAdd = [];\n      var descend = desc(d);\n      descend.shift();\n      descend.forEach(a => 'vessel' in a.data ? posYAdd.push(a.posHeight) : null);\n      d.vesselSiblings.forEach(b => b.data.order < d.data.order ? posYAdd.push(b.posHeight) : null);\n      posYAdd.push(posYAdd.length * dim.vessel.shape.marginHeight);\n      d.posY = sum(posYAdd);\n      d.posX = dim.vessel.shape.width * .5 + (posYAdd.length - 1) * (dim.vessel.shape.width + dim.vessel.shape.marginWidth * 2);\n    }\n  });\n  var flows = [];\n  descends.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessels, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this));\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vessel\n    }, void 0, false));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","scaleLinear","Vessels","Plot","recipe","width","height","color","dim","canvasWidth","main","padding","canvasHeight","root","desc","a","descendants","each","d","posYAdd","descend","shift","forEach","data","push","posHeight","vesselSiblings","b","order","length","vessel","shape","marginHeight","posY","posX","marginWidth","flows","descends","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA4BC,SAA5B,EAAuCC,cAAvC,QAA6D,IAA7D;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,CAAD,KAAyC;AAEpD,QAAMC,WAAW,GAAGJ,KAAK,GAAG,IAAEG,GAAG,CAACE,IAAJ,CAASC,OAAvC;AACA,QAAMC,YAAY,GAAGN,MAAM,GAAG,IAAEE,GAAG,CAACE,IAAJ,CAASC,OAAzC;AAGA,MAAIE,IAAI,GAAGd,SAAS,CAACK,MAAD,CAApB;;AAEA,QAAMU,IAAI,GAAIC,CAAD,IAAOA,CAAC,CAACC,WAAF,EAApB;;AAEAH,EAAAA,IAAI,GAAGA,IAAI,CAACI,IAAL,CACL,UAASC,CAAT,EAAW;AACT,QAAGA,CAAC,CAACZ,MAAF,IAAYO,IAAI,CAACP,MAAL,GAAY,CAA3B,EAA6B;AAC3B,UAAIa,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAGN,IAAI,CAACI,CAAD,CAAlB;AACAE,MAAAA,OAAO,CAACC,KAAR;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgBP,CAAC,IAAK,YAAYA,CAAC,CAACQ,IAAf,GAAuBJ,OAAO,CAACK,IAAR,CAAaT,CAAC,CAACU,SAAf,CAAvB,GAAmD,IAAxE;AACAP,MAAAA,CAAC,CAACQ,cAAF,CAAiBJ,OAAjB,CAAyBK,CAAC,IAAKA,CAAC,CAACJ,IAAF,CAAOK,KAAP,GAAeV,CAAC,CAACK,IAAF,CAAOK,KAAvB,GAAgCT,OAAO,CAACK,IAAR,CAAaG,CAAC,CAACF,SAAf,CAAhC,GAA4D,IAA1F;AACAN,MAAAA,OAAO,CAACK,IAAR,CAAcL,OAAO,CAACU,MAAT,GAAkBrB,GAAG,CAACsB,MAAJ,CAAWC,KAAX,CAAiBC,YAAhD;AACAd,MAAAA,CAAC,CAACe,IAAF,GAASnC,GAAG,CAACqB,OAAD,CAAZ;AACAD,MAAAA,CAAC,CAACgB,IAAF,GAAU1B,GAAG,CAACsB,MAAJ,CAAWC,KAAX,CAAiB1B,KAAjB,GAAuB,EAAxB,GAA+B,CAACc,OAAO,CAACU,MAAR,GAAe,CAAhB,KAAsBrB,GAAG,CAACsB,MAAJ,CAAWC,KAAX,CAAiB1B,KAAjB,GAA0BG,GAAG,CAACsB,MAAJ,CAAWC,KAAX,CAAiBI,WAAjB,GAA6B,CAA7E,CAAxC;AACD;AACF,GAZI,CAAP;AAmBA,MAAIC,KAAK,GAAG,EAAZ;AAEAC,EAAAA,QAAQ,CAACf,OAAT,CAAiB,CAACP,CAAD,EAAGuB,CAAH,KAAS;AACxB,UAAMR,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,CAACN,IAAP,eACE,QAAC,OAAD;AACE,MAAA,CAAC,EAAET,CADL;AAEE,MAAA,CAAC,EAAEuB,CAFL;AAGE,MAAA,GAAG,EAAE9B,GAHP;AAIE,MAAA,KAAK,EAAED;AAJT;AAAA;AAAA;AAAA;AAAA,YADF;AASA6B,IAAAA,KAAK,CAACZ,IAAN,eACE;AAAA,gBACGM;AADH,qBADF;AAKD,GAhBD;AAmBA,sBACI;AAAA,cACGM;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD,CAvDD;;KAAMjC,I;AAyDN,eAAeA,IAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  const canvasWidth = width - 2*dim.main.padding;\n  const canvasHeight = height - 2*dim.main.padding;\n\n\n  var root = hierarchy(recipe);\n\n  const desc = (a) => a.descendants()\n\n  root = root.each(\n    function(d){\n      if(d.height == root.height+1){\n        var posYAdd = []\n        var descend = desc(d)\n        descend.shift()\n        descend.forEach(a => ('vessel' in a.data) ? posYAdd.push(a.posHeight) : null)\n        d.vesselSiblings.forEach(b => (b.data.order < d.data.order) ? posYAdd.push(b.posHeight) : null)\n        posYAdd.push((posYAdd.length)*(dim.vessel.shape.marginHeight))\n        d.posY = sum(posYAdd)\n        d.posX = (dim.vessel.shape.width*.5) + ((posYAdd.length-1) * (dim.vessel.shape.width + (dim.vessel.shape.marginWidth*2)))\n      }\n    }\n  )\n\n\n\n\n\n  var flows = []\n\n  descends.forEach((a,i) => {\n    const vessel = []\n    vessel.push(\n      <Vessels\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    flows.push(\n      <>\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g>\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}