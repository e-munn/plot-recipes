{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/actions/actions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport '../../../css/plot.css';\n\nconst Action = ({\n  root,\n  color,\n  dim,\n  a,\n  b,\n  j,\n  focusG,\n  setFocusG\n}) => {\n  _s();\n\n  const [focus, setFocus] = useState(0);\n  const statesIng = [{\n    \"textposX\": b.data.pX + 30,\n    \"dotposX\": b.data.pX - dim.a.width / 2 + 20,\n    \"dotColor\": color.orange2,\n    \"posXTransform\": 'translate(18px, 0px)'\n  }, {\n    \"textposX\": b.data.pX + 12,\n    \"dotposX\": b.data.pX - dim.a.width / 2,\n    \"dotColor\": color.orange1,\n    \"posXTransform\": 'translate(0px, 0px)'\n  }];\n\n  const label = /*#__PURE__*/_jsxDEV(\"text\", {\n    className: 'plot-text',\n    x: statesIng[focus].textposX,\n    y: b.data.pY,\n    style: {\n      textTransform: 'capitalize'\n    },\n    fill: `${color.orange2}`,\n    textAnchor: 'start',\n    fontSize: dim.a.font.size,\n    fontWeight: dim.a.font.weight,\n    alignmentBaseline: 'hanging',\n    children: b.data.action\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n\n  const aHeight = b.data.action_amt * dim.a.amtScale;\n\n  const shape = /*#__PURE__*/_jsxDEV(\"rect\", {\n    x: statesIng[focus].dotposX,\n    y: b.data.pY - dim.a.width / 2,\n    width: dim.a.width,\n    height: aHeight + dim.a.width,\n    fill: `${statesIng[focus].dotColor}`,\n    rx: dim.a.width / 2\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  const dot = /*#__PURE__*/_jsxDEV(\"circle\", {\n    className: 'name',\n    r: 4,\n    cx: b.data.pX + 20,\n    cy: b.data.pY,\n    fill: `${color.orange3}`\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    onClick: () => setFocus(1 - focus),\n    children: [shape, label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Action, \"86TzMMaejrO3PqfxMnmA1uNahYY=\");\n\n_c = Action;\nexport default Action;\n\nvar _c;\n\n$RefreshReg$(_c, \"Action\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/actions/actions.js"],"names":["React","useState","useEffect","useRef","select","max","sum","hierarchy","linkHorizontal","easeSin","easeCubicIn","easeCubicOut","transition","Action","root","color","dim","a","b","j","focusG","setFocusG","focus","setFocus","statesIng","data","pX","width","orange2","orange1","label","textposX","pY","textTransform","font","size","weight","action","aHeight","action_amt","amtScale","shape","dotposX","dotColor","dot","orange3"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport '../../../css/plot.css'\n\n\nconst Action = ({ root, color, dim, a, b, j, focusG, setFocusG }) => {\n\n  const [focus, setFocus] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX - dim.a.width/2 + 20,\n      \"dotColor\": color.orange2,\n      \"posXTransform\": 'translate(18px, 0px)'\n\n    },\n    {\n      \"textposX\": b.data.pX + 12,\n      \"dotposX\":  b.data.pX - dim.a.width/2,\n      \"dotColor\": color.orange1,\n      \"posXTransform\": 'translate(0px, 0px)'\n      \n    }\n  ]\n\n  const label = (\n    <text\n      className={'plot-text'}\n      key={'ingredient' + b + j}\n      x={ statesIng[focus].textposX }\n      y={ b.data.pY }\n      style={{textTransform:'capitalize'}}\n      fill={`${color.orange2}`}\n      textAnchor={'start'}\n      fontSize={dim.a.font.size}\n      fontWeight={dim.a.font.weight}\n      alignmentBaseline={'hanging'}\n      >\n      {/* { b.data.stepOrder} */}\n      { b.data.action}\n\n    </text>\n  )\n\n  const aHeight = b.data.action_amt * dim.a.amtScale\n\n  const shape = (\n    <rect\n      key={'ingredient' + b + j}\n      x={ statesIng[focus].dotposX }\n      y={ b.data.pY - dim.a.width/2 }\n      width={ dim.a.width }\n      height={ aHeight + dim.a.width }\n      fill={`${statesIng[focus].dotColor}`}\n      rx={dim.a.width/2}\n      >\n    </rect>\n  )\n\n  const dot = (\n    <circle\n      className={'name'}\n      key={'ingredient' + b + j}\n      r={4}\n      cx={ b.data.pX + 20}\n      cy={ b.data.pY }\n      fill={`${color.orange3}`}\n      >\n    </circle>\n\n  )\n\n  return (\n    <g\n      onClick={ () => setFocus(1-focus) }\n      >\n      {shape}\n      {label}\n      {/* {dot} */}\n\n    </g>\n\n  );\n};\n\nexport default Action;\n"]},"metadata":{},"sourceType":"module"}