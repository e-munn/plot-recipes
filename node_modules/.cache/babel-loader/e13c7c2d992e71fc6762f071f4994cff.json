{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  // const canvasWidth = width - 2*dim.m.padding;\n  // const canvasHeight = height - 2*dim.m.padding;\n  var root = hierarchy(recipe.recipe[0]);\n  const testTree = tree().size([300, 600])(root);\n\n  const desc = a => a.descendants();\n\n  root.each((d, i) => {\n    d.order = i;\n  });\n  var diffAdd = 0;\n  var diffPosY = 0;\n  var pY = [0, 0];\n  root.eachAfter(function (d) {\n    if ('vessel' in d.data) {\n      if (d.depth == 0) {\n        diffPosY += 120;\n        d.data.diffPosY = diffPosY;\n        d.data.diffMax = diffAdd - 10;\n      } else {\n        d.data.diffMax = diffAdd;\n        diffAdd = 0;\n        diffPosY += dim.v.marginBottom;\n        d.data.diffPosY = diffPosY;\n      }\n    } else {\n      if ('action' in d.data) {\n        diffPosY += d.data.action_amt * dim.a.amtScale;\n        d.data.diffPosY = diffPosY;\n        diffAdd += d.data.action_amt * dim.a.amtScale;\n        d.data.diff = diffAdd;\n      } else if ('ingredient' in d.data) {\n        diffPosY += dim.i.height;\n        d.data.diffPosY = diffPosY;\n        diffAdd += dim.i.height;\n        d.data.diff = diffAdd;\n      }\n    }\n  });\n  root.count();\n  root.each(d => {\n    d.vesselSibs = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n  root.each(function (d, i) {\n    if (d.depth == 0) {\n      d.pHeight = 40;\n    } else if ('vessel' in d.data) {\n      d.actions = d.children.filter(a => \"action\" in a.data).map(b => b.data.action_amt);\n      d.numIng = d.children.filter(a => \"ingredient\" in a.data).length;\n      d.numShove = d.parent.children.filter(a => \"vessel\" in a.data).filter(a => d.data.vorder > a.data.vorder).length;\n    }\n  });\n  var allVessels = root.descendants().filter(d => 'vessel' in d.data);\n  root.each(function (d) {\n    if (d.depth == 0) {\n      d.posY = 1000;\n      d.posX = 10;\n    } else if ('vessel' in d.data) {\n      d.posX = d.parent.posX + d.numShove * dim.v.shove;\n      var posYAdd = [];\n      allVessels.forEach(function (a) {\n        if (d.data.vorder < a.data.vorder) {\n          posYAdd.push(dim.v.marginBottom + (sum(a.actions) * dim.a.amtScale + a.numIng * dim.i.height));\n        }\n      });\n\n      if (d.numShove !== 0) {\n        posYAdd.push(-d.data.diffMax, -dim.v.textSize);\n      }\n\n      d.posY = sum(posYAdd);\n    } else {\n      d.posX = d.parent.posX;\n      d.posY = d.parent.posY + d.data.diff;\n    }\n  }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = [];\n  allVessels.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessel, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this));\n    const ingredientNodes = [];\n    a.children.forEach((b, j) => {\n      if ('ingredient' in b.data) {\n        ingredientNodes.push( /*#__PURE__*/_jsxDEV(IngredientNode, {\n          color: color,\n          dim: dim,\n          a: a,\n          b: b,\n          j: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    const actionNodes = [];\n    a.children.forEach((b, j) => {\n      if ('action' in b.data) {\n        actionNodes.push( /*#__PURE__*/_jsxDEV(Action, {\n          color: color,\n          dim: dim,\n          a: a,\n          b: b,\n          j: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [actionNodes, vessel]\n    }, void 0, true));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    transform: `translate(${0}, ${100})`,\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","each","tree","scaleLinear","Vessel","IngredientNode","Action","Plot","recipe","width","height","color","dim","root","testTree","size","desc","a","descendants","d","i","order","diffAdd","diffPosY","pY","eachAfter","data","depth","diffMax","v","marginBottom","action_amt","amtScale","diff","count","vesselSibs","parent","children","filter","pHeight","actions","map","b","numIng","length","numShove","vorder","allVessels","posY","posX","shove","posYAdd","forEach","push","textSize","flows","vessel","ingredientNodes","j","actionNodes"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  // const canvasWidth = width - 2*dim.m.padding;\n  // const canvasHeight = height - 2*dim.m.padding;\n\n  var root = hierarchy(recipe.recipe[0]);\n\n  const testTree = tree().size([300, 600])(root)\n\n  const desc = (a) => a.descendants()\n  root.each((d, i) => { d.order = i })\n\n  var diffAdd = 0\n  var diffPosY = 0\n\n  var pY = [0, 0]\n\n\n  root.eachAfter(\n    function(d){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          diffPosY += 120\n          d.data.diffPosY = diffPosY\n          d.data.diffMax = diffAdd - 10\n        } else {\n          d.data.diffMax = diffAdd\n          diffAdd = 0\n          diffPosY += dim.v.marginBottom\n          d.data.diffPosY = diffPosY\n        }\n      } else {\n        if ('action' in d.data){\n          diffPosY += d.data.action_amt * dim.a.amtScale\n          d.data.diffPosY = diffPosY\n\n          diffAdd += d.data.action_amt * dim.a.amtScale\n          d.data.diff = diffAdd\n        } else if ('ingredient' in d.data){\n          diffPosY += dim.i.height\n          d.data.diffPosY = diffPosY\n\n          diffAdd += dim.i.height\n          d.data.diff = diffAdd\n        }\n      }\n    }\n  )\n\n  root.count()\n  root.each(d => { d.vesselSibs = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n  root.each(\n    function(d, i){\n      if (d.depth == 0){\n        d.pHeight = 40\n      }\n      else if ('vessel' in d.data){\n        d.actions = d.children.filter(a => (\"action\" in a.data)).map(b => b.data.action_amt)\n        d.numIng = d.children.filter(a => (\"ingredient\" in a.data)).length\n        d.numShove = d.parent.children.filter(a => (\"vessel\" in a.data)).filter(a => (d.data.vorder > a.data.vorder)).length\n      }\n    }\n  )\n\n  var allVessels = root.descendants().filter(d =>'vessel' in d.data)\n\n  root.each(function(d){\n    if (d.depth == 0){\n      d.posY = 1000\n      d.posX = 10\n    }\n    else if ('vessel' in d.data) {\n\n      d.posX = d.parent.posX + (d.numShove * dim.v.shove)\n\n      var posYAdd = []\n\n      allVessels.forEach(\n        function(a){\n          if(d.data.vorder < a.data.vorder){\n            posYAdd.push(dim.v.marginBottom + ((sum(a.actions) * dim.a.amtScale) + (a.numIng * dim.i.height)))\n          }\n        }\n      )\n      if (d.numShove !== 0) {\n        posYAdd.push(-d.data.diffMax, -dim.v.textSize)\n      }\n      d.posY = sum(posYAdd)\n\n    } else {\n      d.posX = d.parent.posX\n      d.posY = d.parent.posY + d.data.diff\n    }\n  })\n\n\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = []\n\n  allVessels.forEach((a,i) => {\n\n    const vessel = []\n    vessel.push(\n      <Vessel\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    const ingredientNodes = []\n\n    a.children.forEach((b,j) => {\n      if ('ingredient' in b.data) {\n        ingredientNodes.push(\n          <IngredientNode\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n          />)\n        }\n      })\n\n    const actionNodes = []\n\n    a.children.forEach((b,j) => {\n      if ('action' in b.data) {\n        actionNodes.push(\n          <Action\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n          />)\n        }\n      })\n\n    flows.push(\n      <>\n        {/* {ingredientNodes} */}\n        {actionNodes}\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g\n        transform={`translate(${0}, ${100})`}\n        >\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}