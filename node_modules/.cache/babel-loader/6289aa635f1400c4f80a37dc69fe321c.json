{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor'];\nexport var createFix = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor\n  } = _ref;\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 - 2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n\n  return typed('fix', {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number | BigNumber': function numberNumberBigNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    },\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number | BigNumber': function ComplexNumberBigNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? x.ceil(n) : x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, this, true);\n    },\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(x, n) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, i => this(i, n), true);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/node_modules/mathjs/lib/esm/function/arithmetic/fix.js"],"names":["factory","deepMap","createAlgorithm14","name","dependencies","createFix","_ref","typed","Complex","_Complex","matrix","ceil","floor","algorithm14","number","x","numberNumberBigNumber","n","re","Math","im","ComplexNumberBigNumber","BigNumber","isNegative","BigNumberNumberBigNumber","Fraction","s","FractionNumberBigNumber","ArrayMatrix","ArrayMatrixNumberBigNumber","i","numberComplexBigNumberArray","y","valueOf"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,QAArB,EAA+B,MAA/B,EAAuC,OAAvC,CAAnB;AACA,OAAO,IAAIC,SAAS,GAAG,eAAeL,OAAO,CAACG,IAAD,EAAOC,YAAP,EAAsBE,IAAD,IAAU;AAC1E,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA,OAAO,EAAEC,QAFP;AAGFC,IAAAA,MAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMAN,IANJ;AAOA,MAAIO,WAAW,GAAGX,iBAAiB,CAAC;AAClCK,IAAAA;AADkC,GAAD,CAAnC;AAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,SAAOA,KAAK,CAAC,KAAD,EAAQ;AAClBO,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AACzB,aAAOA,CAAC,GAAG,CAAJ,GAAQH,KAAK,CAACG,CAAD,CAAb,GAAmBJ,IAAI,CAACI,CAAD,CAA9B;AACD,KAHiB;AAIlB,kCAA8B,SAASC,qBAAT,CAA+BD,CAA/B,EAAkCE,CAAlC,EAAqC;AACjE,aAAOF,CAAC,GAAG,CAAJ,GAAQH,KAAK,CAACG,CAAD,EAAIE,CAAJ,CAAb,GAAsBN,IAAI,CAACI,CAAD,EAAIE,CAAJ,CAAjC;AACD,KANiB;AAOlBT,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBO,CAAjB,EAAoB;AAC3B,aAAO,IAAIN,QAAJ,CAAaM,CAAC,CAACG,EAAF,GAAO,CAAP,GAAWC,IAAI,CAACP,KAAL,CAAWG,CAAC,CAACG,EAAb,CAAX,GAA8BC,IAAI,CAACR,IAAL,CAAUI,CAAC,CAACG,EAAZ,CAA3C,EAA4DH,CAAC,CAACK,EAAF,GAAO,CAAP,GAAWD,IAAI,CAACP,KAAL,CAAWG,CAAC,CAACK,EAAb,CAAX,GAA8BD,IAAI,CAACR,IAAL,CAAUI,CAAC,CAACK,EAAZ,CAA1F,CAAP;AACD,KATiB;AAUlB,mCAA+B,SAASC,sBAAT,CAAgCN,CAAhC,EAAmCE,CAAnC,EAAsC;AACnE,aAAO,IAAIR,QAAJ,CAAaM,CAAC,CAACG,EAAF,GAAO,CAAP,GAAWN,KAAK,CAACG,CAAC,CAACG,EAAH,EAAOD,CAAP,CAAhB,GAA4BN,IAAI,CAACI,CAAC,CAACG,EAAH,EAAOD,CAAP,CAA7C,EAAwDF,CAAC,CAACK,EAAF,GAAO,CAAP,GAAWR,KAAK,CAACG,CAAC,CAACK,EAAH,EAAOH,CAAP,CAAhB,GAA4BN,IAAI,CAACI,CAAC,CAACK,EAAH,EAAOH,CAAP,CAAxF,CAAP;AACD,KAZiB;AAalBK,IAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBP,CAAnB,EAAsB;AAC/B,aAAOA,CAAC,CAACQ,UAAF,KAAiBZ,IAAI,CAACI,CAAD,CAArB,GAA2BH,KAAK,CAACG,CAAD,CAAvC;AACD,KAfiB;AAgBlB,qCAAiC,SAASS,wBAAT,CAAkCT,CAAlC,EAAqCE,CAArC,EAAwC;AACvE,aAAOF,CAAC,CAACQ,UAAF,KAAiBZ,IAAI,CAACI,CAAD,EAAIE,CAAJ,CAArB,GAA8BL,KAAK,CAACG,CAAD,EAAIE,CAAJ,CAA1C;AACD,KAlBiB;AAmBlBQ,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBV,CAAlB,EAAqB;AAC7B,aAAOA,CAAC,CAACW,CAAF,GAAM,CAAN,GAAUX,CAAC,CAACJ,IAAF,EAAV,GAAqBI,CAAC,CAACH,KAAF,EAA5B;AACD,KArBiB;AAsBlB,oCAAgC,SAASe,uBAAT,CAAiCZ,CAAjC,EAAoCE,CAApC,EAAuC;AACrE,aAAOF,CAAC,CAACW,CAAF,GAAM,CAAN,GAAUX,CAAC,CAACJ,IAAF,CAAOM,CAAP,CAAV,GAAsBF,CAAC,CAACH,KAAF,CAAQK,CAAR,CAA7B;AACD,KAxBiB;AAyBlB,sBAAkB,SAASW,WAAT,CAAqBb,CAArB,EAAwB;AACxC;AACA,aAAOd,OAAO,CAACc,CAAD,EAAI,IAAJ,EAAU,IAAV,CAAd;AACD,KA5BiB;AA6BlB,0CAAsC,SAASc,0BAAT,CAAoCd,CAApC,EAAuCE,CAAvC,EAA0C;AAC9E;AACA,aAAOhB,OAAO,CAACc,CAAD,EAAIe,CAAC,IAAI,KAAKA,CAAL,EAAQb,CAAR,CAAT,EAAqB,IAArB,CAAd;AACD,KAhCiB;AAiClB,2CAAuC,SAASc,2BAAT,CAAqChB,CAArC,EAAwCiB,CAAxC,EAA2C;AAChF;AACA,aAAOnB,WAAW,CAACH,MAAM,CAACsB,CAAD,CAAP,EAAYjB,CAAZ,EAAe,IAAf,EAAqB,IAArB,CAAX,CAAsCkB,OAAtC,EAAP;AACD;AApCiB,GAAR,CAAZ;AAsCD,CArF4C,CAAtC","sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor'];\nexport var createFix = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor\n  } = _ref;\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 - 2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n\n  return typed('fix', {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number | BigNumber': function numberNumberBigNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    },\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number | BigNumber': function ComplexNumberBigNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? x.ceil(n) : x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, this, true);\n    },\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(x, n) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, i => this(i, n), true);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});"]},"metadata":{},"sourceType":"module"}