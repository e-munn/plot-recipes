{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\n\nconst IngredientNode = ({\n  root,\n  color,\n  dim,\n  a,\n  b,\n  j\n}) => {\n  _s();\n\n  const [focus, setFocus] = useState(0);\n  const focusRef = useRef();\n  useEffect(() => {}, [focus]);\n\n  const label = /*#__PURE__*/_jsxDEV(\"text\", {\n    className: 'plot-text',\n    x: b.data.pX + 12,\n    y: b.data.pY + 1,\n    style: {\n      textTransform: 'capitalize'\n    },\n    fill: `${color.blue2}`,\n    textAnchor: 'start',\n    fontSize: dim.i.font.size,\n    fontWeight: dim.i.font.weight,\n    alignmentBaseline: 'middle',\n    children: b.data.ingredient\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n\n  const dot = /*#__PURE__*/_jsxDEV(\"circle\", {\n    r: 4,\n    cx: b.data.pX,\n    cy: b.data.pY,\n    fill: `${color.blue1}`\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    // ref={ focusRef }\n    onClick: () => setFocus(1 - focus),\n    children: [label, dot]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientNode, \"oIK+yppMcll80QCr8NTv205DzgI=\");\n\n_c = IngredientNode;\nexport default IngredientNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientNode\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js"],"names":["React","useState","useEffect","useRef","select","max","sum","hierarchy","linkHorizontal","easeSin","easeCubicIn","easeCubicOut","transition","IngredientNode","root","color","dim","a","b","j","focus","setFocus","focusRef","label","data","pX","pY","textTransform","blue2","i","font","size","weight","ingredient","dot","blue1"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA4BC,SAA5B,EAAuCC,cAAvC,EAAuDC,OAAvD,EAAgEC,WAAhE,EAA6EC,YAA7E,EAA2FC,UAA3F,QAA6G,IAA7G;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,GAAf;AAAoBC,EAAAA,CAApB;AAAuBC,EAAAA,CAAvB;AAA0BC,EAAAA;AAA1B,CAAD,KAAmC;AAAA;;AAExD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMqB,QAAQ,GAAGnB,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAGf,CAHQ,EAGN,CAACkB,KAAD,CAHM,CAAT;;AAKA,QAAMG,KAAK,gBACT;AACE,IAAA,SAAS,EAAE,WADb;AAGE,IAAA,CAAC,EAAGL,CAAC,CAACM,IAAF,CAAOC,EAAP,GAAY,EAHlB;AAIE,IAAA,CAAC,EAAGP,CAAC,CAACM,IAAF,CAAOE,EAAP,GAAY,CAJlB;AAKE,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAC;AAAf,KALT;AAME,IAAA,IAAI,EAAG,GAAEZ,KAAK,CAACa,KAAM,EANvB;AAOE,IAAA,UAAU,EAAE,OAPd;AAQE,IAAA,QAAQ,EAAEZ,GAAG,CAACa,CAAJ,CAAMC,IAAN,CAAWC,IARvB;AASE,IAAA,UAAU,EAAEf,GAAG,CAACa,CAAJ,CAAMC,IAAN,CAAWE,MATzB;AAUE,IAAA,iBAAiB,EAAE,QAVrB;AAAA,cAcId,CAAC,CAACM,IAAF,CAAOS;AAdX,KAEO,eAAef,CAAf,GAAmBC,CAF1B;AAAA;AAAA;AAAA;AAAA,UADF;;AAoBA,QAAMe,GAAG,gBACP;AAEE,IAAA,CAAC,EAAE,CAFL;AAGE,IAAA,EAAE,EAAGhB,CAAC,CAACM,IAAF,CAAOC,EAHd;AAIE,IAAA,EAAE,EAAGP,CAAC,CAACM,IAAF,CAAOE,EAJd;AAKE,IAAA,IAAI,EAAG,GAAEX,KAAK,CAACoB,KAAM;AALvB,KACO,eAAejB,CAAf,GAAmBC,CAD1B;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,sBACE;AACE;AACA,IAAA,OAAO,EAAG,MAAME,QAAQ,CAAC,IAAED,KAAH,CAF1B;AAAA,eAIGG,KAJH,EAKGW,GALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArDD;;GAAMrB,c;;KAAAA,c;AAuDN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\n\n\nconst IngredientNode = ({ root, color, dim, a, b, j }) => {\n\n  const [focus, setFocus] = useState(0);\n\n  const focusRef = useRef();\n\n  useEffect(() => {\n    \n\n  }, [focus]);\n\n  const label = (\n    <text\n      className={'plot-text'}\n      key={'ingredient' + b + j}\n      x={ b.data.pX + 12}\n      y={ b.data.pY + 1}\n      style={{textTransform:'capitalize'}}\n      fill={`${color.blue2}`}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      fontWeight={dim.i.font.weight}\n      alignmentBaseline={'middle'}\n      >\n      {/* { b.data.stepOrder} */}\n\n      { b.data.ingredient}\n\n    </text>\n\n  )\n  const dot = (\n    <circle\n      key={'ingredient' + b + j}\n      r={4}\n      cx={ b.data.pX }\n      cy={ b.data.pY }\n      fill={`${color.blue1}`}\n      >\n    </circle>\n\n  )\n\n  return (\n    <g\n      // ref={ focusRef }\n      onClick={ () => setFocus(1-focus) }\n      >\n      {label}\n      {dot}\n    </g>\n\n  );\n};\n\nexport default IngredientNode;\n"]},"metadata":{},"sourceType":"module"}