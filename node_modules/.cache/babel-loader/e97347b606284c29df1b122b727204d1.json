{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\nimport '../../../css/plot.css';\n\nconst IngredientNode = ({\n  root,\n  color,\n  dim,\n  a,\n  b,\n  j,\n  setFocus\n}) => {\n  _s();\n\n  const focusRef = useRef();\n  const [done, setDone] = useState(0);\n  const statesIng = [{\n    \"textposX\": b.data.pX + 30,\n    \"dotposX\": b.data.pX + 20,\n    \"dotColor\": color.blue2,\n    \"posXTransform\": 'translate(18px, 0px)'\n  }, {\n    \"textposX\": b.data.pX + 10,\n    \"dotposX\": b.data.pX,\n    \"dotColor\": color.blue1,\n    \"posXTransform\": 'translate(0px, 0px)'\n  }];\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setDone(1),\n    onSwipedRight: () => setDone(0),\n    preventDefaultTouchmoveEvent: true\n  });\n\n  const label = /*#__PURE__*/_jsxDEV(\"text\", {\n    className: 'plot-text',\n    className: 'plot-animation',\n    x: b.data.pX + 10,\n    y: b.data.pY + 1 // style={{textTransform:'capitalize', filter:'url(#blur)'}}\n    ,\n    style: {\n      filter: 'url(#blur)'\n    } // opacity={.5}\n    ,\n    fill: `${statesIng[done].dotColor}`,\n    textAnchor: 'start',\n    fontSize: dim.i.font.size,\n    fontWeight: dim.i.font.weight,\n    alignmentBaseline: 'middle',\n    children: b.data.ingredient\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  const dot = /*#__PURE__*/_jsxDEV(\"circle\", {\n    className: 'plot-animation',\n    r: 4,\n    cx: b.data.pX,\n    cy: b.data.pY,\n    fill: `${statesIng[done].dotColor}`\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  const swipe = /*#__PURE__*/_jsxDEV(\"rect\", {\n    x: b.data.pX - 20,\n    y: b.data.pY - dim.i.font.size / 2 - 2,\n    width: 100,\n    height: dim.i.font.size + 4,\n    fill: 'transparent'\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"g\", { ...handlers,\n    className: 'plot-animation',\n    onClick: () => setFocus(ref),\n    style: {\n      transform: `${statesIng[done].posXTransform}`\n    },\n    children: [label, dot, swipe]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientNode, \"CVtLI7GLLYsy2JR/QAAlhs0rRBo=\", false, function () {\n  return [useSwipeable];\n});\n\n_c = IngredientNode;\nexport default IngredientNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientNode\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js"],"names":["React","useState","useEffect","useRef","select","max","sum","hierarchy","linkHorizontal","easeSin","easeCubicIn","easeCubicOut","transition","useSwipeable","IngredientNode","root","color","dim","a","b","j","setFocus","focusRef","done","setDone","statesIng","data","pX","blue2","blue1","handlers","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","label","pY","filter","dotColor","i","font","size","weight","ingredient","dot","swipe","ref","transform","posXTransform"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA4BC,SAA5B,EAAuCC,cAAvC,EAAuDC,OAAvD,EAAgEC,WAAhE,EAA6EC,YAA7E,EAA2FC,UAA3F,QAA6G,IAA7G;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,uBAAP;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,GAAf;AAAoBC,EAAAA,CAApB;AAAuBC,EAAAA,CAAvB;AAA0BC,EAAAA,CAA1B;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AAAA;;AAClE,QAAMC,QAAQ,GAAGnB,MAAM,EAAvB;AAEA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAMwB,SAAS,GAAG,CAChB;AACE,gBAAYN,CAAC,CAACO,IAAF,CAAOC,EAAP,GAAY,EAD1B;AAEE,eAAWR,CAAC,CAACO,IAAF,CAAOC,EAAP,GAAY,EAFzB;AAGE,gBAAYX,KAAK,CAACY,KAHpB;AAIE,qBAAiB;AAJnB,GADgB,EAOhB;AACE,gBAAYT,CAAC,CAACO,IAAF,CAAOC,EAAP,GAAY,EAD1B;AAEE,eAAWR,CAAC,CAACO,IAAF,CAAOC,EAFpB;AAGE,gBAAYX,KAAK,CAACa,KAHpB;AAIE,qBAAiB;AAJnB,GAPgB,CAAlB;AAeA,QAAMC,QAAQ,GAAGjB,YAAY,CAAC;AAC5BkB,IAAAA,YAAY,EAAE,MAAMP,OAAO,CAAC,CAAD,CADC;AAE5BQ,IAAAA,aAAa,EAAE,MAAMR,OAAO,CAAC,CAAD,CAFA;AAG5BS,IAAAA,4BAA4B,EAAE;AAHF,GAAD,CAA7B;;AAOA,QAAMC,KAAK,gBACT;AACE,IAAA,SAAS,EAAE,WADb;AAEE,IAAA,SAAS,EAAE,gBAFb;AAIE,IAAA,CAAC,EAAGf,CAAC,CAACO,IAAF,CAAOC,EAAP,GAAY,EAJlB;AAKE,IAAA,CAAC,EAAGR,CAAC,CAACO,IAAF,CAAOS,EAAP,GAAY,CALlB,CAME;AANF;AAOE,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAPT,CAQE;AARF;AASE,IAAA,IAAI,EAAG,GAAEX,SAAS,CAACF,IAAD,CAAT,CAAgBc,QAAS,EATpC;AAUE,IAAA,UAAU,EAAE,OAVd;AAWE,IAAA,QAAQ,EAAEpB,GAAG,CAACqB,CAAJ,CAAMC,IAAN,CAAWC,IAXvB;AAYE,IAAA,UAAU,EAAEvB,GAAG,CAACqB,CAAJ,CAAMC,IAAN,CAAWE,MAZzB;AAaE,IAAA,iBAAiB,EAAE,QAbrB;AAAA,cAiBItB,CAAC,CAACO,IAAF,CAAOgB;AAjBX,KAGO,eAAevB,CAAf,GAAmBC,CAH1B;AAAA;AAAA;AAAA;AAAA,UADF;;AAuBA,QAAMuB,GAAG,gBACP;AACE,IAAA,SAAS,EAAE,gBADb;AAIE,IAAA,CAAC,EAAE,CAJL;AAKE,IAAA,EAAE,EAAGxB,CAAC,CAACO,IAAF,CAAOC,EALd;AAME,IAAA,EAAE,EAAGR,CAAC,CAACO,IAAF,CAAOS,EANd;AAOE,IAAA,IAAI,EAAG,GAAEV,SAAS,CAACF,IAAD,CAAT,CAAgBc,QAAS;AAPpC,KAGO,eAAelB,CAAf,GAAmBC,CAH1B;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,QAAMwB,KAAK,gBACT;AAEE,IAAA,CAAC,EAAGzB,CAAC,CAACO,IAAF,CAAOC,EAAP,GAAY,EAFlB;AAGE,IAAA,CAAC,EAAGR,CAAC,CAACO,IAAF,CAAOS,EAAP,GAAYlB,GAAG,CAACqB,CAAJ,CAAMC,IAAN,CAAWC,IAAX,GAAgB,CAA5B,GAAgC,CAHtC;AAIE,IAAA,KAAK,EAAG,GAJV;AAKE,IAAA,MAAM,EAAGvB,GAAG,CAACqB,CAAJ,CAAMC,IAAN,CAAWC,IAAX,GAAkB,CAL7B;AAME,IAAA,IAAI,EAAG;AANT,KACO,eAAerB,CAAf,GAAmBC,CAD1B;AAAA;AAAA;AAAA;AAAA,UADF;;AAcA,sBACE,kBACMU,QADN;AAEE,IAAA,SAAS,EAAE,gBAFb;AAGE,IAAA,OAAO,EAAG,MAAMT,QAAQ,CAACwB,GAAD,CAH1B;AAIE,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAG,GAAGrB,SAAS,CAACF,IAAD,CAAT,CAAgBwB,aAAe;AAA/C,KAJT;AAAA,eAMGb,KANH,EAOGS,GAPH,EAQGC,KARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3FD;;GAAM9B,c;UAoBaD,Y;;;KApBbC,c;AA6FN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\nimport '../../../css/plot.css'\n\n\nconst IngredientNode = ({ root, color, dim, a, b, j, setFocus }) => {\n  const focusRef = useRef();\n\n  const [done, setDone] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX + 20,\n      \"dotColor\": color.blue2,\n      \"posXTransform\": 'translate(18px, 0px)'\n    },\n    {\n      \"textposX\": b.data.pX + 10,\n      \"dotposX\": b.data.pX,\n      \"dotColor\": color.blue1,\n      \"posXTransform\": 'translate(0px, 0px)'\n    }\n  ]\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setDone(1),\n    onSwipedRight: () => setDone(0),\n    preventDefaultTouchmoveEvent: true\n  });\n\n\n  const label = (\n    <text\n      className={'plot-text'}\n      className={'plot-animation'}\n      key={'ingredient' + b + j}\n      x={ b.data.pX + 10 }\n      y={ b.data.pY + 1 }\n      // style={{textTransform:'capitalize', filter:'url(#blur)'}}\n      style={{filter:'url(#blur)'}}\n      // opacity={.5}\n      fill={`${statesIng[done].dotColor}`}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      fontWeight={dim.i.font.weight}\n      alignmentBaseline={'middle'}\n      >\n      {/* { b.data.stepOrder} */}\n\n      { b.data.ingredient}\n\n    </text>\n\n  )\n  const dot = (\n    <circle\n      className={'plot-animation'}\n\n      key={'ingredient' + b + j}\n      r={4}\n      cx={ b.data.pX }\n      cy={ b.data.pY }\n      fill={`${statesIng[done].dotColor}`}\n      >\n    </circle>\n\n  )\n  const swipe = (\n    <rect\n      key={'ingredient' + b + j}\n      x={ b.data.pX - 20 }\n      y={ b.data.pY - dim.i.font.size/2 - 2}\n      width={ 100 }\n      height={ dim.i.font.size + 4}\n      fill={ 'transparent' }\n      >\n    </rect>\n  )\n\n\n\n  return (\n    <g\n      {...handlers}\n      className={'plot-animation'}\n      onClick={ () => setFocus(ref) }\n      style={{transform: `${ statesIng[done].posXTransform }`}}\n      >\n      {label}\n      {dot}\n      {swipe}\n\n    </g>\n\n  );\n};\n\nexport default IngredientNode;\n"]},"metadata":{},"sourceType":"module"}