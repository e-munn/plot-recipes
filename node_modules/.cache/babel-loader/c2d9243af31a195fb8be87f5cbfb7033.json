{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/actions/actions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport '../../../css/plot.css';\n\nconst Action = ({\n  root,\n  color,\n  dim,\n  a,\n  b,\n  j,\n  focusG,\n  setFocusG\n}) => {\n  _s();\n\n  const [focus, setFocus] = useState(0);\n  const statesIng = [{\n    \"textposX\": b.data.pX + 30,\n    \"dotposX\": b.data.pX - dim.a.width / 2 + 20,\n    \"dotColor\": color.orange2,\n    \"posXTransform\": 'translate(18px, 0px)'\n  }, {\n    \"textposX\": b.data.pX + 10,\n    \"dotposX\": b.data.pX - dim.a.width / 2,\n    \"dotColor\": color.orange1,\n    \"posXTransform\": 'translate(0px, 0px)'\n  }];\n\n  const label = /*#__PURE__*/_jsxDEV(\"text\", {\n    className: 'plot-text',\n    x: b.data.pX + 30,\n    y: b.data.pY // style={{textTransform:'capitalize'}}\n    ,\n    fill: `${color.orange2}`,\n    textAnchor: 'start',\n    fontSize: dim.a.font.size,\n    fontWeight: dim.a.font.weight,\n    alignmentBaseline: 'hanging',\n    children: b.data.action\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n\n  const aHeight = b.data.action_amt * dim.a.amtScale;\n\n  const shape = /*#__PURE__*/_jsxDEV(\"rect\", {\n    className: 'plot-animation',\n    x: b.data.pX - dim.a.width / 2 + 18,\n    y: b.data.pY - dim.a.width / 2,\n    width: dim.a.width,\n    height: aHeight + dim.a.width,\n    fill: `${statesIng[focus].dotColor}`,\n    rx: dim.a.width / 2\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this); // const dot = (\n  //   <circle\n  //     className={'name'}\n  //     key={'ingredient' + b + j}\n  //     r={4}\n  //     cx={ b.data.pX + 20}\n  //     cy={ b.data.pY }\n  //     fill={`${color.orange3}`}\n  //     >\n  //   </circle>\n  //\n  // )\n\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: 'plot-animation',\n    onClick: () => setFocus(1 - focus),\n    style: {\n      transform: `${statesIng[focus].posXTransform}`\n    },\n    children: [shape, label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Action, \"86TzMMaejrO3PqfxMnmA1uNahYY=\");\n\n_c = Action;\nexport default Action;\n\nvar _c;\n\n$RefreshReg$(_c, \"Action\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/actions/actions.js"],"names":["React","useState","useEffect","useRef","select","max","sum","hierarchy","linkHorizontal","easeSin","easeCubicIn","easeCubicOut","transition","Action","root","color","dim","a","b","j","focusG","setFocusG","focus","setFocus","statesIng","data","pX","width","orange2","orange1","label","pY","font","size","weight","action","aHeight","action_amt","amtScale","shape","dotColor","transform","posXTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport '../../../css/plot.css'\n\n\nconst Action = ({ root, color, dim, a, b, j, focusG, setFocusG }) => {\n\n  const [focus, setFocus] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX - dim.a.width/2 + 20,\n      \"dotColor\": color.orange2,\n      \"posXTransform\": 'translate(18px, 0px)'\n    },\n    {\n      \"textposX\": b.data.pX + 10,\n      \"dotposX\":  b.data.pX - dim.a.width/2,\n      \"dotColor\": color.orange1,\n      \"posXTransform\": 'translate(0px, 0px)'\n    }\n  ]\n\n  const label = (\n    <text\n      className={'plot-text'}\n      key={'ingredient' + b + j}\n      x={ b.data.pX + 30 }\n      y={ b.data.pY }\n      // style={{textTransform:'capitalize'}}\n      fill={`${color.orange2}`}\n      textAnchor={'start'}\n      fontSize={dim.a.font.size}\n      fontWeight={dim.a.font.weight}\n      alignmentBaseline={'hanging'}\n      >\n      {/* { b.data.stepOrder} */}\n      { b.data.action}\n\n    </text>\n  )\n\n  const aHeight = b.data.action_amt * dim.a.amtScale\n\n  const shape = (\n    <rect\n      className={'plot-animation'}\n      key={'ingredient' + b + j}\n      x={ b.data.pX - dim.a.width/2 + 18 }\n      y={ b.data.pY - dim.a.width/2 }\n      width={ dim.a.width }\n      height={ aHeight + dim.a.width }\n      fill={`${statesIng[focus].dotColor}`}\n      rx={dim.a.width/2}\n      >\n    </rect>\n  )\n\n  // const dot = (\n  //   <circle\n  //     className={'name'}\n  //     key={'ingredient' + b + j}\n  //     r={4}\n  //     cx={ b.data.pX + 20}\n  //     cy={ b.data.pY }\n  //     fill={`${color.orange3}`}\n  //     >\n  //   </circle>\n  //\n  // )\n\n  return (\n    <g\n      className={'plot-animation'}\n      onClick={ () => setFocus(1-focus) }\n      style={{transform: `${ statesIng[focus].posXTransform }`}}\n      >\n      {shape}\n      {label}\n      {/* {dot} */}\n\n    </g>\n\n  );\n};\n\nexport default Action;\n"]},"metadata":{},"sourceType":"module"}