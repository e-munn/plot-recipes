{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  const canvasWidth = width - 2 * dim.main.padding;\n  const canvasHeight = height - 2 * dim.main.padding; //\n  // var root2 = hierarchy(recipe);\n  // console.log(root2)\n\n  var root = hierarchy(recipe.recipe[0]);\n  const testTree = tree().size([300, 600])(root);\n\n  const desc = a => a.descendants(); // root.each((d, i) => { d.order = i })\n\n\n  root.count();\n  console.log(root);\n  root.each(d => {\n    d.vesselSibs = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n  root.each(function (d, i) {\n    if (d.depth == 0) {\n      console.log(i);\n      d.pHeight = 40;\n    } else if ('vessel' in d.data) {\n      // d.pHeight = (d.children.filter(a => !(\"vessel\" in a.data)).length) * 20\n      d.pHeight = 25;\n    }\n  });\n  root.each(function (d) {\n    if (d.depth == 0) {\n      d.posY = 1000;\n      d.posX = 100;\n    } else if ('vessel' in d.data) {\n      var posYAdd = []; // var descend = desc(d)\n      // descend.shift()\n      // descend.forEach(a => ('vessel' in a.data) ? posYAdd.push(a.pHeight) : null)\n\n      d.vesselSibs.forEach(b => d.data.vorder > b.data.vorder ? posYAdd.push(b.value * 30) : null); // posYAdd.push((posYAdd.length)*(dim.vessel.shape.marginHeight))\n\n      d.posY = sum(posYAdd);\n      d.posX = 10;\n    }\n  });\n  var allTest = testTree.descendants();\n  const tests = [];\n  allTest.forEach((a, i) => {\n    tests.push( /*#__PURE__*/_jsxDEV(\"text\", {\n      x: a.x,\n      y: a.y,\n      fill: 'black',\n      children: [a.order, a.data.vessel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this));\n  }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var allVessels = root.descendants().filter(d => 'vessel' in d.data); // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = [];\n  allVessels.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessels, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this));\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vessel\n    }, void 0, false));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    transform: `translate(${0}, ${100})`,\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","each","tree","scaleLinear","Vessels","Plot","recipe","width","height","color","dim","canvasWidth","main","padding","canvasHeight","root","testTree","size","desc","a","descendants","count","console","log","d","vesselSibs","parent","children","filter","data","i","depth","pHeight","posY","posX","posYAdd","forEach","b","vorder","push","value","allTest","tests","x","y","order","vessel","allVessels","flows"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  const canvasWidth = width - 2*dim.main.padding;\n  const canvasHeight = height - 2*dim.main.padding;\n  //\n  // var root2 = hierarchy(recipe);\n  // console.log(root2)\n\n\n  var root = hierarchy(recipe.recipe[0]);\n\n  const testTree = tree().size([300, 600])(root)\n\n\n\n  const desc = (a) => a.descendants()\n  // root.each((d, i) => { d.order = i })\n\n  root.count()\n  console.log(root)\n  root.each(d => { d.vesselSibs = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n\n\n  root.each(\n    function(d, i){\n      if (d.depth == 0){\n        console.log(i)\n        d.pHeight = 40\n      }\n      else if ('vessel' in d.data){\n        // d.pHeight = (d.children.filter(a => !(\"vessel\" in a.data)).length) * 20\n        d.pHeight = 25\n\n      }\n    }\n  )\n\n\n\n  root.each(function(d){\n    if (d.depth == 0){\n      d.posY = 1000\n      d.posX = 100\n\n    }\n    else if ('vessel' in d.data) {\n      var posYAdd = []\n      // var descend = desc(d)\n      // descend.shift()\n      // descend.forEach(a => ('vessel' in a.data) ? posYAdd.push(a.pHeight) : null)\n      d.vesselSibs.forEach(b => (d.data.vorder > b.data.vorder) ? posYAdd.push(b.value*30) : null)\n      // posYAdd.push((posYAdd.length)*(dim.vessel.shape.marginHeight))\n      d.posY = sum(posYAdd)\n      d.posX = 10\n\n    }\n  })\n\n\n\n\n  var allTest = testTree.descendants()\n\n\n  const tests = []\n  allTest.forEach((a, i) => {\n    tests.push(\n      <text\n        x={a.x}\n        y={a.y}\n        fill={'black'}\n      >\n        {a.order}\n        {a.data.vessel}\n\n    </text>\n    )\n\n\n  })\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var allVessels = root.descendants().filter(d =>'vessel' in d.data)\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = []\n\n  allVessels.forEach((a,i) => {\n    const vessel = []\n    vessel.push(\n      <Vessels\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n\n\n    flows.push(\n      <>\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g\n        transform={`translate(${0}, ${100})`}\n        >\n        {/* {tests} */}\n        {flows}\n\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}