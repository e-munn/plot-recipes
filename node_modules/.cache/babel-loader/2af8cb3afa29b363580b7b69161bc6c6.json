{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createMax } from '../../function/statistics/max.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'max';\nvar dependencies = ['typed', 'config', 'numeric', 'larger'];\nexport var createMaxTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    numeric,\n    larger\n  } = _ref;\n  var max = createMax({\n    typed,\n    config,\n    numeric,\n    larger\n  });\n  /**\n   * Attach a transform function to math.max\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function max\n   * from one-based to zero based\n   */\n\n  return typed('max', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return max.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/node_modules/mathjs/lib/esm/expression/transform/max.transform.js"],"names":["factory","errorTransform","createMax","lastDimToZeroBase","name","dependencies","createMaxTransform","_ref","typed","config","numeric","larger","max","any","args","apply","err","isTransformFunction"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,EAA+B,QAA/B,CAAnB;AACA,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAsBE,IAAD,IAAU;AACnF,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA,MAFE;AAGFC,IAAAA,OAHE;AAIFC,IAAAA;AAJE,MAKAJ,IALJ;AAMA,MAAIK,GAAG,GAAGV,SAAS,CAAC;AAClBM,IAAAA,KADkB;AAElBC,IAAAA,MAFkB;AAGlBC,IAAAA,OAHkB;AAIlBC,IAAAA;AAJkB,GAAD,CAAnB;AAMA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,SAAOH,KAAK,CAAC,KAAD,EAAQ;AAClB,cAAU,SAASK,GAAT,CAAaC,IAAb,EAAmB;AAC3BA,MAAAA,IAAI,GAAGX,iBAAiB,CAACW,IAAD,CAAxB;;AAEA,UAAI;AACF,eAAOF,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgBD,IAAhB,CAAP;AACD,OAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,cAAMf,cAAc,CAACe,GAAD,CAApB;AACD;AACF;AATiB,GAAR,CAAZ;AAWD,CAhCqD,EAgCnD;AACDC,EAAAA,mBAAmB,EAAE;AADpB,CAhCmD,CAA/C","sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createMax } from '../../function/statistics/max.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'max';\nvar dependencies = ['typed', 'config', 'numeric', 'larger'];\nexport var createMaxTransform = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    numeric,\n    larger\n  } = _ref;\n  var max = createMax({\n    typed,\n    config,\n    numeric,\n    larger\n  });\n  /**\n   * Attach a transform function to math.max\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function max\n   * from one-based to zero based\n   */\n\n  return typed('max', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return max.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"]},"metadata":{},"sourceType":"module"}