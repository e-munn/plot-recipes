{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  const canvasWidth = width - 2 * dim.main.padding;\n  const canvasHeight = height - 2 * dim.main.padding;\n  var root = hierarchy(recipe.recipe);\n  console.log(root);\n\n  const desc = a => a.descendants();\n\n  root = root.each(d => {\n    d.vesselSiblings = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n\n  const splits = a => {\n    var sp = a.split(' ');\n    return sp.length;\n  };\n\n  root = root.each(d => d.depth == 0 ? d.posHeight = dim.serve.height : 'vessel' in d.data ? d.posHeight = 100 : null);\n  root = root.each(function (d) {\n    if (d.depth == 0) {\n      d.posY = 500;\n    } else if ('vessel' in d.data) {\n      var posYAdd = [];\n      var descend = desc(d);\n      descend.shift();\n      descend.forEach(a => 'vessel' in a.data ? posYAdd.push(a.posHeight) : null);\n      d.posY = sum(posYAdd);\n      d.posX = 100;\n    }\n  }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var descends = root.descendants().filter(d => 'vessel' in d.data);\n  descends = descends.filter(d => d.depth !== 0);\n  var flows = [];\n  descends.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessels, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this));\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vessel\n    }, void 0, false));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","scaleLinear","Vessels","Plot","recipe","width","height","color","dim","canvasWidth","main","padding","canvasHeight","root","console","log","desc","a","descendants","each","d","vesselSiblings","parent","children","filter","data","splits","sp","split","length","depth","posHeight","serve","posY","posYAdd","descend","shift","forEach","push","posX","descends","flows","i","vessel"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA4BC,SAA5B,EAAuCC,cAAvC,QAA6D,IAA7D;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,CAAD,KAAyC;AAEpD,QAAMC,WAAW,GAAGJ,KAAK,GAAG,IAAEG,GAAG,CAACE,IAAJ,CAASC,OAAvC;AACA,QAAMC,YAAY,GAAGN,MAAM,GAAG,IAAEE,GAAG,CAACE,IAAJ,CAASC,OAAzC;AAGA,MAAIE,IAAI,GAAGd,SAAS,CAACK,MAAM,CAACA,MAAR,CAApB;AAGAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAGA,QAAMG,IAAI,GAAIC,CAAD,IAAOA,CAAC,CAACC,WAAF,EAApB;;AAEAL,EAAAA,IAAI,GAAGA,IAAI,CAACM,IAAL,CAAUC,CAAC,IAAI;AAAEA,IAAAA,CAAC,CAACC,cAAF,GAAoBD,CAAC,CAACE,MAAF,GAAWF,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBC,MAAlB,CAAyBP,CAAC,IAAK,YAAYA,CAAC,CAACQ,IAA7C,CAAX,GAAiE,MAArF;AAA8F,GAA/G,CAAP;;AAEA,QAAMC,MAAM,GAAIT,CAAD,IAAO;AACpB,QAAIU,EAAE,GAAGV,CAAC,CAACW,KAAF,CAAQ,GAAR,CAAT;AACA,WAAOD,EAAE,CAACE,MAAV;AACD,GAHD;;AAKAhB,EAAAA,IAAI,GAAGA,IAAI,CAACM,IAAL,CAAUC,CAAC,IAAKA,CAAC,CAACU,KAAF,IAAW,CAAZ,GAAiBV,CAAC,CAACW,SAAF,GAAcvB,GAAG,CAACwB,KAAJ,CAAU1B,MAAzC,GACrB,YAAYc,CAAC,CAACK,IAAf,GACEL,CAAC,CAACW,SAAF,GAAc,GADhB,GAEE,IAHK,CAAP;AAMAlB,EAAAA,IAAI,GAAGA,IAAI,CAACM,IAAL,CAAU,UAASC,CAAT,EAAW;AAC1B,QAAIA,CAAC,CAACU,KAAF,IAAW,CAAf,EAAiB;AACfV,MAAAA,CAAC,CAACa,IAAF,GAAS,GAAT;AACD,KAFD,MAGK,IAAI,YAAYb,CAAC,CAACK,IAAlB,EAAwB;AAC3B,UAAIS,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAGnB,IAAI,CAACI,CAAD,CAAlB;AACAe,MAAAA,OAAO,CAACC,KAAR;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgBpB,CAAC,IAAK,YAAYA,CAAC,CAACQ,IAAf,GAAuBS,OAAO,CAACI,IAAR,CAAarB,CAAC,CAACc,SAAf,CAAvB,GAAmD,IAAxE;AACAX,MAAAA,CAAC,CAACa,IAAF,GAASnC,GAAG,CAACoC,OAAD,CAAZ;AACAd,MAAAA,CAAC,CAACmB,IAAF,GAAS,GAAT;AACD;AACF,GAZM,CAAP,CA3BoD,CA2CpD;AACA;AACA;;AAGA,MAAIC,QAAQ,GAAG3B,IAAI,CAACK,WAAL,GAAmBM,MAAnB,CAA0BJ,CAAC,IAAG,YAAYA,CAAC,CAACK,IAA5C,CAAf;AACAe,EAAAA,QAAQ,GAAGA,QAAQ,CAAChB,MAAT,CAAgBJ,CAAC,IAAKA,CAAC,CAACU,KAAF,KAAY,CAAlC,CAAX;AAIA,MAAIW,KAAK,GAAG,EAAZ;AAEAD,EAAAA,QAAQ,CAACH,OAAT,CAAiB,CAACpB,CAAD,EAAGyB,CAAH,KAAS;AACxB,UAAMC,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,CAACL,IAAP,eACE,QAAC,OAAD;AACE,MAAA,CAAC,EAAErB,CADL;AAEE,MAAA,CAAC,EAAEyB,CAFL;AAGE,MAAA,GAAG,EAAElC,GAHP;AAIE,MAAA,KAAK,EAAED;AAJT;AAAA;AAAA;AAAA;AAAA,YADF;AASAkC,IAAAA,KAAK,CAACH,IAAN,eACE;AAAA,gBACGK;AADH,qBADF;AAKD,GAhBD;AAmBA,sBACI;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD,CA/ED;;KAAMtC,I;AAiFN,eAAeA,IAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  const canvasWidth = width - 2*dim.main.padding;\n  const canvasHeight = height - 2*dim.main.padding;\n\n\n  var root = hierarchy(recipe.recipe);\n\n\n  console.log(root)\n\n\n  const desc = (a) => a.descendants()\n\n  root = root.each(d => { d.vesselSiblings = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n  const splits = (a) => {\n    var sp = a.split(' ')\n    return sp.length\n  }\n\n  root = root.each(d => (d.depth == 0) ? d.posHeight = dim.serve.height :\n  ('vessel' in d.data) ?\n    d.posHeight = 100\n  : null)\n\n\n  root = root.each(function(d){\n    if (d.depth == 0){\n      d.posY = 500\n    }\n    else if ('vessel' in d.data) {\n      var posYAdd = []\n      var descend = desc(d)\n      descend.shift()\n      descend.forEach(a => ('vessel' in a.data) ? posYAdd.push(a.posHeight) : null)\n      d.posY = sum(posYAdd)\n      d.posX = 100\n    }\n  })\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  var descends = root.descendants().filter(d =>'vessel' in d.data)\n  descends = descends.filter(d => (d.depth !== 0))\n\n\n\n  var flows = []\n\n  descends.forEach((a,i) => {\n    const vessel = []\n    vessel.push(\n      <Vessels\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    flows.push(\n      <>\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g>\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}