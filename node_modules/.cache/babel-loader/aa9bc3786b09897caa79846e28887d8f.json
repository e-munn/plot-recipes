{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nvar name = 'unequal';\nvar dependencies = ['typed', 'config', 'equalScalar', 'matrix', 'DenseMatrix'];\nexport var createUnequal = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    equalScalar,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Test whether two values are unequal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * larger than the configured epsilon. The function cannot be used to compare\n   * values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.\n   * Strings are compared by their numerical value.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is unequal\n   * with everything except `null`, and `undefined` is unequal with everything\n   * except `undefined`.\n   *\n   * Syntax:\n   *\n   *    math.unequal(x, y)\n   *\n   * Examples:\n   *\n   *    math.unequal(2 + 2, 3)       // returns true\n   *    math.unequal(2 + 2, 4)       // returns false\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.unequal(a, b)           // returns false\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.unequal(c, d)           // returns [false, true, false]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.unequal(0, null)        // returns true\n   * See also:\n   *\n   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false\n   */\n\n  return typed('unequal', {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return _unequal(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, _unequal);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, _unequal, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, _unequal, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _unequal);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, _unequal, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _unequal, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, _unequal, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _unequal, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _unequal, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _unequal, true).valueOf();\n    }\n  });\n\n  function _unequal(x, y) {\n    return !equalScalar(x, y);\n  }\n});\nexport var createUnequalNumber = factory(name, ['typed', 'equalScalar'], _ref2 => {\n  var {\n    typed,\n    equalScalar\n  } = _ref2;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return !equalScalar(x, y);\n    }\n  });\n});","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/node_modules/mathjs/lib/esm/function/relational/unequal.js"],"names":["factory","createAlgorithm03","createAlgorithm07","createAlgorithm12","createAlgorithm14","createAlgorithm13","name","dependencies","createUnequal","_ref","typed","config","equalScalar","matrix","DenseMatrix","algorithm03","algorithm07","algorithm12","algorithm13","algorithm14","anyAny","x","y","undefined","_unequal","SparseMatrixSparseMatrix","SparseMatrixDenseMatrix","DenseMatrixSparseMatrix","DenseMatrixDenseMatrix","ArrayArray","valueOf","ArrayMatrix","MatrixArray","SparseMatrixAny","DenseMatrixAny","anySparseMatrix","anyDenseMatrix","ArrayAny","anyArray","createUnequalNumber","_ref2"],"mappings":"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","sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { createAlgorithm03 } from '../../type/matrix/utils/algorithm03.js';\nimport { createAlgorithm07 } from '../../type/matrix/utils/algorithm07.js';\nimport { createAlgorithm12 } from '../../type/matrix/utils/algorithm12.js';\nimport { createAlgorithm14 } from '../../type/matrix/utils/algorithm14.js';\nimport { createAlgorithm13 } from '../../type/matrix/utils/algorithm13.js';\nvar name = 'unequal';\nvar dependencies = ['typed', 'config', 'equalScalar', 'matrix', 'DenseMatrix'];\nexport var createUnequal = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    equalScalar,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = createAlgorithm03({\n    typed\n  });\n  var algorithm07 = createAlgorithm07({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = createAlgorithm12({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = createAlgorithm13({\n    typed\n  });\n  var algorithm14 = createAlgorithm14({\n    typed\n  });\n  /**\n   * Test whether two values are unequal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * larger than the configured epsilon. The function cannot be used to compare\n   * values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.\n   * Strings are compared by their numerical value.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is unequal\n   * with everything except `null`, and `undefined` is unequal with everything\n   * except `undefined`.\n   *\n   * Syntax:\n   *\n   *    math.unequal(x, y)\n   *\n   * Examples:\n   *\n   *    math.unequal(2 + 2, 3)       // returns true\n   *    math.unequal(2 + 2, 4)       // returns false\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.unequal(a, b)           // returns false\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.unequal(c, d)           // returns [false, true, false]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.unequal(0, null)        // returns true\n   * See also:\n   *\n   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false\n   */\n\n  return typed('unequal', {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return _unequal(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, _unequal);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, _unequal, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, _unequal, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _unequal);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, _unequal, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _unequal, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, _unequal, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _unequal, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _unequal, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _unequal, true).valueOf();\n    }\n  });\n\n  function _unequal(x, y) {\n    return !equalScalar(x, y);\n  }\n});\nexport var createUnequalNumber = factory(name, ['typed', 'equalScalar'], (_ref2) => {\n  var {\n    typed,\n    equalScalar\n  } = _ref2;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return !equalScalar(x, y);\n    }\n  });\n});"]},"metadata":{},"sourceType":"module"}