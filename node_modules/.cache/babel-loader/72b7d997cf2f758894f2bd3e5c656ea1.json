{"ast":null,"code":"import React, { useState } from \"react\";\nimport { min, sum, hierarchy } from 'd3';\nimport dim from '../../media/theme/dim.json';\nexport default function plotize(recipe) {\n  var root = hierarchy(recipe.recipe[0]); // root.each(\n  //   function(d, i){\n  //     if (d.depth == 0){\n  //     }\n  //     else if ('vessel' in d.data){\n  //       d.actions = d.children.filter(a => (\"action\" in a.data)).map(b => b.data.action_amt)\n  //       d.numIng = d.children.filter(a => (\"ingredient\" in a.data)).length\n  //       d.numShove = d.parent.children.filter(a => (\"vessel\" in a.data)).filter(a => (d.data.vorder > a.data.vorder)).length\n  //     }\n  //   }\n  // )\n\n  var pY = 0;\n  var pH = 0;\n  var pYMax = 0;\n  root.each(function (d) {\n    if ('vessel' in d.data) {\n      if (d.depth == 0) {\n        pY += pH;\n        d.data.pH = pH;\n        d.data.pY = pY;\n      } else {\n        pH = dim.v.padding1 + dim.v.padding2;\n        pH += sum(d.actions) * dim.a.amtScale + (d.numIng + d.actions.length) * dim.i.height;\n        pY = d.parent.data.pY + dim.v.gap;\n        pY += pH;\n        d.data.pY = pY;\n        d.data.pH = pH;\n\n        if (pY > pYMax) {\n          pYMax = pY;\n        }\n      }\n    }\n  });\n  pY = 0;\n  pH = 0;\n  var taskCount = 0;\n  root.each(function (d, i) {\n    if ('vessel' in d.data) {\n      if (d.depth == 0) {\n        pY = pYMax;\n        pY -= pH;\n        d.data.pH = pH;\n        d.data.pY = pYMax;\n      } else {\n        pH = dim.v.padding1 + dim.v.padding2;\n        pH += sum(d.actions) * dim.a.amtScale + (d.numIng + d.actions.length) * dim.i.height;\n        pY = d.parent.data.pY - dim.v.gap;\n        pY -= pH;\n        d.data.pY = pY;\n        d.data.pH = pH;\n      }\n    }\n  });\n  pY = 0;\n  pH = 0;\n  var taskCount = 0;\n  root.eachAfter(function (d, i) {\n    if ('vessel' in d.data) {\n      taskCount = 0;\n    } else if ('action' in d.data) {\n      d.data.stepOrder = i;\n      taskCount += dim.i.height;\n      pY = d.parent.data.pY + dim.v.padding1;\n      d.data.pY = pY + taskCount;\n      taskCount += d.data.action_amt * dim.a.amtScale;\n    } else if ('ingredient' in d.data) {\n      d.data.stepOrder = i;\n      pY = d.parent.data.pY + dim.v.padding1;\n      taskCount += dim.i.height;\n      d.data.pY = pY + taskCount;\n    }\n  });\n\n  const getLeafY = a => {\n    var leaves = a.leaves();\n    leaves = leaves.map(b => b.data.pY);\n    return min(leaves);\n  };\n\n  var pX = dim.m.margin.left;\n  root.each(function (d, i) {\n    if ('vessel' in d.data) {\n      if (d.depth == 0) {\n        d.data.pX = pX;\n      } else {\n        d.data.stepOrder = i;\n        pX = d.parent.data.pX;\n        var vesselSibs = d.parent.children.filter(a => \"vessel\" in a.data);\n        var numLess = vesselSibs.filter(b => getLeafY(b) < getLeafY(d)).length;\n        pX += numLess * dim.v.shove;\n        d.data.pX = pX;\n      }\n    } else {\n      if ('action' in d.data) {\n        pX = d.parent.data.pX;\n        d.data.pX = pX;\n      } else if ('ingredient' in d.data) {\n        pX = d.parent.data.pX;\n        d.data.pX = pX;\n      }\n    }\n  });\n  return [root, pYMax];\n}\n;","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plotize.js"],"names":["React","useState","min","sum","hierarchy","dim","plotize","recipe","root","pY","pH","pYMax","each","d","data","depth","v","padding1","padding2","actions","a","amtScale","numIng","length","i","height","parent","gap","taskCount","eachAfter","stepOrder","action_amt","getLeafY","leaves","map","b","pX","m","margin","left","vesselSibs","children","filter","numLess","shove"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { min, sum, hierarchy } from 'd3';\nimport dim from '../../media/theme/dim.json';\n\nexport default function plotize(recipe){\n\n  var root = hierarchy(recipe.recipe[0]);\n  // root.each(\n  //   function(d, i){\n  //     if (d.depth == 0){\n  //     }\n  //     else if ('vessel' in d.data){\n  //       d.actions = d.children.filter(a => (\"action\" in a.data)).map(b => b.data.action_amt)\n  //       d.numIng = d.children.filter(a => (\"ingredient\" in a.data)).length\n  //       d.numShove = d.parent.children.filter(a => (\"vessel\" in a.data)).filter(a => (d.data.vorder > a.data.vorder)).length\n  //     }\n  //   }\n  // )\n\n  var pY = 0\n  var pH = 0\n  var pYMax = 0\n  root.each(\n    function(d){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          pY += pH\n          d.data.pH = pH\n          d.data.pY = pY\n        } else {\n          pH = dim.v.padding1 + dim.v.padding2\n          pH += (sum(d.actions) * dim.a.amtScale) + ((d.numIng + d.actions.length) * dim.i.height)\n          pY = d.parent.data.pY + dim.v.gap\n          pY += pH\n          d.data.pY = pY\n          d.data.pH = pH\n          if ((pY) > pYMax){\n            pYMax = pY\n          }\n        }\n      }\n    }\n  )\n\n  pY = 0\n  pH = 0\n  var taskCount = 0\n  root.each(\n    function(d, i){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          pY = pYMax\n          pY -= pH\n          d.data.pH = pH\n          d.data.pY = pYMax\n        } else {\n\n          pH = dim.v.padding1 + dim.v.padding2\n          pH += (sum(d.actions) * dim.a.amtScale) + ((d.numIng + d.actions.length) * dim.i.height)\n          pY = d.parent.data.pY - dim.v.gap\n          pY -= pH\n          d.data.pY = pY\n          d.data.pH = pH\n\n        }\n      }\n    }\n  )\n\n  pY = 0\n  pH = 0\n  var taskCount = 0\n  root.eachAfter(\n    function(d, i){\n      if ('vessel' in d.data) {\n        taskCount = 0\n       }\n      else if ('action' in d.data) {\n        d.data.stepOrder=i\n        taskCount += dim.i.height\n        pY = d.parent.data.pY + dim.v.padding1\n        d.data.pY = pY + taskCount\n        taskCount += d.data.action_amt * dim.a.amtScale\n      } else if ('ingredient' in d.data) {\n        d.data.stepOrder=i\n        pY = d.parent.data.pY + dim.v.padding1\n        taskCount += dim.i.height\n        d.data.pY = pY + taskCount\n      }\n    }\n  )\n\n  const getLeafY = (a) => {\n    var leaves = a.leaves()\n    leaves = leaves.map(b => b.data.pY)\n    return min(leaves)\n  }\n\n  var pX = dim.m.margin.left\n  root.each(\n    function(d, i){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          d.data.pX = pX\n        } else {\n          d.data.stepOrder=i\n\n          pX = d.parent.data.pX\n          var vesselSibs = d.parent.children.filter(a => (\"vessel\" in a.data))\n          var numLess = vesselSibs.filter(b => (getLeafY(b) < getLeafY(d)) ).length\n          pX += numLess * dim.v.shove\n          d.data.pX = pX\n        }\n      } else {\n        if ('action' in d.data){\n          pX = d.parent.data.pX\n          d.data.pX = pX\n        } else if ('ingredient' in d.data){\n          pX = d.parent.data.pX\n          d.data.pX = pX\n        }\n      }\n    })\n\n    return [root, pYMax]\n\n};\n"]},"metadata":{},"sourceType":"module"}