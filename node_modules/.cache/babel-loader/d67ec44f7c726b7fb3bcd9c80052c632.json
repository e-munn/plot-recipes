{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/src/components/plot/ingredients/ingredientNode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\nimport '../../../css/plot.css';\n\nconst IngredientNode = ({\n  root,\n  color,\n  dim,\n  a,\n  b,\n  j,\n  focus,\n  setFocus\n}) => {\n  _s();\n\n  const [done, setDone] = useState(0);\n  const statesIng = [{\n    \"textposX\": b.data.pX + 30,\n    \"dotposX\": b.data.pX + 20,\n    \"dotColor\": color.blue2,\n    \"posXTransform\": 'translate(18px, 0px)'\n  }, {\n    \"textposX\": b.data.pX + 10,\n    \"dotposX\": b.data.pX,\n    \"dotColor\": color.blue1,\n    \"posXTransform\": 'translate(0px, 0px)'\n  }];\n  var texzt = b.data.ingredient + '<tspan>' + b.data.ing_amt + '</tspan>';\n\n  const label = /*#__PURE__*/_jsxDEV(\"text\", {\n    className: 'plot-animation-fill plot-text weight-2',\n    x: b.data.pX + 10,\n    y: b.data.pY + 1 // style={{filter:'url(#blur)'}}\n    ,\n    fill: `${statesIng[done].dotColor}`,\n    textAnchor: 'start',\n    fontSize: dim.i.font.size,\n    alignmentBaseline: 'middle',\n    children: [b.data.ingredient, /*#__PURE__*/_jsxDEV(\"tspan\", {\n      className: 'plot-text weight-3',\n      alignmentBaseline: 'middle',\n      fontSize: dim.i.font.amountSize,\n      fill: `${statesIng[done].dotColor}`,\n      children: ' - ' + b.data.ing_amt + ' ' + b.data.ing_unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, 'ilabel' + a + b + j, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  const label2 = /*#__PURE__*/_jsxDEV(\"text\", {\n    className: 'plot-animation-fill plot-text weight-2',\n    x: b.data.pX + 10,\n    y: b.data.pY + 1 // style={{filter:'url(#blur)'}}\n    ,\n    fill: `${statesIng[done].dotColor}`,\n    textAnchor: 'start',\n    fontSize: dim.i.font.size,\n    alignmentBaseline: 'middle',\n    children: [b.data.ingredient, /*#__PURE__*/_jsxDEV(\"tspan\", {\n      className: 'plot-text weight-3',\n      alignmentBaseline: 'middle',\n      fontSize: dim.i.font.amountSize,\n      fill: `${statesIng[done].dotColor}`,\n      children: ' - ' + b.data.ing_amt + ' ' + b.data.ing_unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, 'ilabel' + a + b + j, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this); // var length = label.textLength\n  //\n  //   const labelAmt = (\n  //     <text\n  //       className={'plot-text'}\n  //       className={'plot-animation-fill'}\n  //       key={'ilabel' + a + b + j}\n  //       x={ b.data.pX + 10 }\n  //       y={ b.data.pY + dim.i.font.size }\n  //       // style={{textTransform:'capitalize'}}\n  //       // style={{filter:'url(#blur)'}}\n  //       fill={`${statesIng[done].dotColor}`}\n  //       textAnchor={'start'}\n  //       fontSize={dim.i.font.amountSize}\n  //       fontWeight={dim.i.font.weight}\n  //       alignmentBaseline={'middle'}\n  //       >\n  //       {b.data.ing_amt + ' <tspan> ' + b.data.ing_amt + ' </tspan> ' }\n  //     </text>\n  //   )\n\n\n  const dot = /*#__PURE__*/_jsxDEV(\"circle\", {\n    className: 'plot-animation-fill',\n    r: dim.i.radius,\n    cx: b.data.pX,\n    cy: b.data.pY,\n    fill: `${statesIng[done].dotColor}` // fill={'none'}\n    // stroke={`${statesIng[done].dotColor}`}\n    // strokeWidth={2}\n\n  }, 'idot' + a + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n\n  const focusRef = useRef();\n\n  const swipe = /*#__PURE__*/_jsxDEV(\"rect\", {\n    x: b.data.pX - 20,\n    y: b.data.pY - dim.i.font.size / 2 - 5,\n    width: 110,\n    height: dim.i.font.size + 10,\n    fill: 'transparent' // fill={ 'blue' }\n    // opacity={ .3 }\n    ,\n    ref: focusRef,\n    onClick: () => setFocus([focusRef.current, b])\n  }, 'iswipe' + a + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setDone(1),\n    onSwipedRight: () => setDone(0)\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: 'plot-animation-move',\n    className: 'ingredient',\n    style: {\n      transform: `${statesIng[done].posXTransform}`\n    },\n    ...handlers,\n    children: [label, label2, dot, swipe]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientNode, \"AFGpRBGm3AKEnnsHSNYurafdPgI=\", false, function () {\n  return [useSwipeable];\n});\n\n_c = IngredientNode;\nexport default IngredientNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientNode\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/src/components/plot/ingredients/ingredientNode.js"],"names":["React","useState","useEffect","useRef","select","max","sum","hierarchy","linkHorizontal","easeSin","easeCubicIn","easeCubicOut","transition","useSwipeable","IngredientNode","root","color","dim","a","b","j","focus","setFocus","done","setDone","statesIng","data","pX","blue2","blue1","texzt","ingredient","ing_amt","label","pY","dotColor","i","font","size","amountSize","ing_unit","label2","dot","radius","focusRef","swipe","current","handlers","onSwipedLeft","onSwipedRight","transform","posXTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\nimport '../../../css/plot.css'\n\n\n\nconst IngredientNode = ({ root, color, dim, a, b, j, focus, setFocus }) => {\n\n\n  const [done, setDone] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX + 20,\n      \"dotColor\": color.blue2,\n      \"posXTransform\": 'translate(18px, 0px)'\n    },\n    {\n      \"textposX\": b.data.pX + 10,\n      \"dotposX\": b.data.pX,\n      \"dotColor\": color.blue1,\n      \"posXTransform\": 'translate(0px, 0px)'\n    }\n  ]\n\n\n  var texzt = b.data.ingredient + '<tspan>' + b.data.ing_amt + '</tspan>'\n  const label = (\n    <text\n      className={'plot-animation-fill plot-text weight-2'}\n      key={'ilabel' + a + b + j}\n      x={ b.data.pX + 10 }\n      y={ b.data.pY + 1 }\n      // style={{filter:'url(#blur)'}}\n      fill={`${statesIng[done].dotColor}`}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      alignmentBaseline={'middle'}\n      >\n      {/* { b.data.stepOrder} */}\n\n      { b.data.ingredient}\n      <tspan\n        className={'plot-text weight-3'}\n        alignmentBaseline={'middle'}\n        fontSize={dim.i.font.amountSize}\n        fill={`${statesIng[done].dotColor}`}\n        >\n        {' - ' + b.data.ing_amt + ' ' + b.data.ing_unit}\n      </tspan>\n\n\n    </text>\n  )\n\n  const label2 = (\n    <text\n      className={'plot-animation-fill plot-text weight-2'}\n      key={'ilabel' + a + b + j}\n      x={ b.data.pX + 10 }\n      y={ b.data.pY + 1 }\n      // style={{filter:'url(#blur)'}}\n      fill={`${statesIng[done].dotColor}`}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      alignmentBaseline={'middle'}\n      >\n      {/* { b.data.stepOrder} */}\n\n      { b.data.ingredient}\n      <tspan\n        className={'plot-text weight-3'}\n        alignmentBaseline={'middle'}\n        fontSize={dim.i.font.amountSize}\n        fill={`${statesIng[done].dotColor}`}\n        >\n        {' - ' + b.data.ing_amt + ' ' + b.data.ing_unit}\n      </tspan>\n\n\n    </text>\n  )\n\n\n\n  // var length = label.textLength\n  //\n  //   const labelAmt = (\n  //     <text\n  //       className={'plot-text'}\n  //       className={'plot-animation-fill'}\n  //       key={'ilabel' + a + b + j}\n  //       x={ b.data.pX + 10 }\n  //       y={ b.data.pY + dim.i.font.size }\n  //       // style={{textTransform:'capitalize'}}\n  //       // style={{filter:'url(#blur)'}}\n  //       fill={`${statesIng[done].dotColor}`}\n  //       textAnchor={'start'}\n  //       fontSize={dim.i.font.amountSize}\n  //       fontWeight={dim.i.font.weight}\n  //       alignmentBaseline={'middle'}\n  //       >\n  //       {b.data.ing_amt + ' <tspan> ' + b.data.ing_amt + ' </tspan> ' }\n  //     </text>\n  //   )\n\n  const dot = (\n    <circle\n      className={'plot-animation-fill'}\n      key={'idot' + a + b + j}\n      r={dim.i.radius }\n      cx={ b.data.pX }\n      cy={ b.data.pY }\n      fill={`${statesIng[done].dotColor}`}\n      // fill={'none'}\n\n      // stroke={`${statesIng[done].dotColor}`}\n      // strokeWidth={2}\n\n\n      >\n    </circle>\n\n  )\n  const focusRef = useRef();\n\n  const swipe = (\n    <rect\n      key={'iswipe' + a + b + j}\n      x={ b.data.pX - 20 }\n      y={ b.data.pY - dim.i.font.size/2 - 5}\n      width={ 110 }\n      height={ dim.i.font.size + 10}\n      fill={ 'transparent' }\n      // fill={ 'blue' }\n      // opacity={ .3 }\n      ref={ focusRef }\n      onClick={ () => setFocus([focusRef.current, b]) }\n      >\n    </rect>\n  )\n\n\n\n\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setDone(1),\n    onSwipedRight: () => setDone(0)\n  });\n\n\n  return (\n    <g\n      className={'plot-animation-move'}\n      className={'ingredient'}\n      style={{transform: `${ statesIng[done].posXTransform }`}}\n      {...handlers}\n      >\n      {label}\n      {label2}\n\n      {dot}\n      {swipe}\n\n    </g>\n\n  );\n};\n\nexport default IngredientNode;\n"]},"metadata":{},"sourceType":"module"}