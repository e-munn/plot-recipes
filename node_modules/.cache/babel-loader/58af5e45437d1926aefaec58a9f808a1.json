{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/vessels/vessels.js\";\nimport React, { useRef } from 'react';\nimport { select, linkVertical } from 'd3';\nimport '../../../css/plot.css';\n\nconst Vessel = ({\n  a,\n  i,\n  dim,\n  color\n}) => {\n  const shape = /*#__PURE__*/_jsxDEV(\"rect\", {\n    className: 'vesselShape',\n    width: dim.v.s.width,\n    height: a.data.pH,\n    x: a.data.pX,\n    y: a.data.pY,\n    transform: `translate(${dim.v.s.width * -.5}, ${0})`,\n    fill: `${color.background}`,\n    stroke: `${color.green1}`,\n    strokeWidth: dim.v.s.stroke,\n    rx: dim.v.s.width * .5\n  }, 'c' + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n\n  const label = /*#__PURE__*/_jsxDEV(\"text\", {\n    className: 'plot-text vessel',\n    x: a.data.pX - 2,\n    y: a.data.pY + 5,\n    fill: `${color.green2}`,\n    fontSize: dim.v.textSize,\n    alignmentBaseline: 'hanging',\n    children: a.data.vessel\n  }, 'c' + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n\n  const labelBack = /*#__PURE__*/_jsxDEV(\"rect\", {\n    x: a.data.pX - 2,\n    y: a.data.pY + 2,\n    width: 12,\n    height: dim.v.textSize + 2,\n    fill: `${color.background}`,\n    stroke: 'none',\n    children: a.data.vessel\n  }, 'c' + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  const transfer = /*#__PURE__*/_jsxDEV(\"path\", {\n    stroke: `${color.transfer}`,\n    strokeWidth: 5,\n    fill: 'none',\n    strokeDasharray: '5 5',\n    d: linkVertical()({\n      source: [a.data.pX, a.data.pY + a.data.pH],\n      target: [a.parent.data.pX, a.parent.data.pY]\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [transfer, shape, labelBack, label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Vessel;\nexport default Vessel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vessel\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/vessels/vessels.js"],"names":["React","useRef","select","linkVertical","Vessel","a","i","dim","color","shape","v","s","width","data","pH","pX","pY","background","green1","stroke","label","green2","textSize","vessel","labelBack","transfer","source","target","parent"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\n\nimport { select, linkVertical } from 'd3';\nimport '../../../css/plot.css'\n\n\n\nconst Vessel = ({ a, i, dim, color }) => {\n\n  const shape = (\n    <rect\n      className={'vesselShape'}\n      key={'c' + i}\n      width={ dim.v.s.width }\n      height={ a.data.pH }\n      x={ a.data.pX }\n      y={ a.data.pY }\n      transform={`translate(${dim.v.s.width*-.5}, ${0})`}\n      fill={ `${color.background}` }\n      stroke={  `${color.green1}` }\n      strokeWidth={ dim.v.s.stroke }\n      rx={ dim.v.s.width * .5 }\n      >\n    </rect>\n  )\n\n\n  const label = (\n    <text\n      className={'plot-text vessel'}\n      key={'c' + i}\n      x={ a.data.pX - 2 }\n      y={ a.data.pY + 5 }\n      fill={ `${color.green2}` }\n      fontSize={dim.v.textSize}\n      alignmentBaseline={'hanging'}\n      >\n        {a.data.vessel}\n    </text>\n  )\n\n\n  const labelBack = (\n    <rect\n      key={'c' + i}\n      x={ a.data.pX - 2 }\n      y={ a.data.pY + 2 }\n      width={ 12 }\n      height={ dim.v.textSize + 2 }\n      fill={ `${color.background}` }\n      stroke={ 'none' }\n      >\n        {a.data.vessel}\n    </rect>\n  )\n\n\n\n  const transfer = (\n    <path\n      stroke={ `${color.transfer}` }\n      strokeWidth={5}\n      fill={'none'}\n      strokeDasharray={'5 5'}\n      d={\n        linkVertical()({\n          source: [a.data.pX, a.data.pY + a.data.pH],\n          target: [a.parent.data.pX, a.parent.data.pY]\n        })\n        }\n      >\n    </path>\n  )\n\n\n  return (\n      <g>\n\n        {transfer}\n        {shape}\n        {labelBack}\n\n        {label}\n\n\n        {/* {dot} */}\n      </g>\n  );\n};\n\nexport default Vessel;\n"]},"metadata":{},"sourceType":"module"}