{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef, useState } from 'react';\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\nimport color from '../../media/theme/colors.json';\nimport dim from '../../media/theme/dim.json';\n\nconst Plot = ({\n  recipe,\n  width,\n  height\n}) => {\n  var root = recipe;\n  var allVessels = root.descendants().filter(d => 'vessel' in d.data).filter(d => d.depth !== 0);\n  var flows = [];\n  allVessels.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessel, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this));\n    const ingredientNodes = [];\n    a.children.forEach((b, j) => {\n      if ('ingredient' in b.data) {\n        ingredientNodes.push( /*#__PURE__*/_jsxDEV(IngredientNode, {\n          color: color,\n          dim: dim,\n          a: a,\n          b: b,\n          j: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    const actionNodes = [];\n    a.children.forEach((b, j) => {\n      if ('action' in b.data) {\n        actionNodes.push( /*#__PURE__*/_jsxDEV(Action, {\n          color: color,\n          dim: dim,\n          a: a,\n          b: b,\n          j: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    flows.push( /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [ingredientNodes, actionNodes, vessel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    transform: `translate(${0}, ${50})`,\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","useState","Vessel","IngredientNode","Action","color","dim","Plot","recipe","width","height","root","allVessels","descendants","filter","d","data","depth","flows","forEach","a","i","vessel","push","ingredientNodes","children","b","j","actionNodes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAA6B;AAExC,MAAIC,IAAI,GAAGH,MAAX;AAEA,MAAII,UAAU,GAAGD,IAAI,CAACE,WAAL,GAAmBC,MAAnB,CAA0BC,CAAC,IAAK,YAAYA,CAAC,CAACC,IAA9C,EAAqDF,MAArD,CAA4DC,CAAC,IAAKA,CAAC,CAACE,KAAF,KAAY,CAA9E,CAAjB;AAEA,MAAIC,KAAK,GAAG,EAAZ;AAEAN,EAAAA,UAAU,CAACO,OAAX,CAAmB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAE1B,UAAMC,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,CAACC,IAAP,eACE,QAAC,MAAD;AACE,MAAA,CAAC,EAAEH,CADL;AAEE,MAAA,CAAC,EAAEC,CAFL;AAGE,MAAA,GAAG,EAAEf,GAHP;AAIE,MAAA,KAAK,EAAED;AAJT;AAAA;AAAA;AAAA;AAAA,YADF;AASA,UAAMmB,eAAe,GAAG,EAAxB;AAEAJ,IAAAA,CAAC,CAACK,QAAF,CAAWN,OAAX,CAAmB,CAACO,CAAD,EAAGC,CAAH,KAAS;AAC1B,UAAI,gBAAgBD,CAAC,CAACV,IAAtB,EAA4B;AAC1BQ,QAAAA,eAAe,CAACD,IAAhB,eACE,QAAC,cAAD;AACE,UAAA,KAAK,EAAElB,KADT;AAEE,UAAA,GAAG,EAAEC,GAFP;AAGE,UAAA,CAAC,EAAEc,CAHL;AAIE,UAAA,CAAC,EAAEM,CAJL;AAKE,UAAA,CAAC,EAAEC;AALL;AAAA;AAAA;AAAA;AAAA,gBADF;AAQC;AACF,KAXH;AAaA,UAAMC,WAAW,GAAG,EAApB;AAEAR,IAAAA,CAAC,CAACK,QAAF,CAAWN,OAAX,CAAmB,CAACO,CAAD,EAAGC,CAAH,KAAS;AAC1B,UAAI,YAAYD,CAAC,CAACV,IAAlB,EAAwB;AACtBY,QAAAA,WAAW,CAACL,IAAZ,eACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAElB,KADT;AAEE,UAAA,GAAG,EAAEC,GAFP;AAGE,UAAA,CAAC,EAAEc,CAHL;AAIE,UAAA,CAAC,EAAEM,CAJL;AAKE,UAAA,CAAC,EAAEC;AALL;AAAA;AAAA;AAAA;AAAA,gBADF;AAQC;AACF,KAXH;AAaAT,IAAAA,KAAK,CAACK,IAAN,eACE;AAAA,iBACGC,eADH,EAEGI,WAFH,EAGGN,MAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GAjDD;AAoDA,sBACI;AAAG,IAAA,SAAS,EAAG,aAAY,CAAE,KAAI,EAAG,GAApC;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD,CAjED;;KAAMX,I;AAmEN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\nimport color from '../../media/theme/colors.json';\nimport dim from '../../media/theme/dim.json';\n\nconst Plot = ({recipe, width, height}) => {\n\n  var root = recipe\n\n  var allVessels = root.descendants().filter(d => ('vessel' in d.data)).filter(d => (d.depth !== 0))\n\n  var flows = []\n\n  allVessels.forEach((a,i) => {\n\n    const vessel = []\n    vessel.push(\n      <Vessel\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    const ingredientNodes = []\n\n    a.children.forEach((b,j) => {\n      if ('ingredient' in b.data) {\n        ingredientNodes.push(\n          <IngredientNode\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n          />)\n        }\n      })\n\n    const actionNodes = []\n\n    a.children.forEach((b,j) => {\n      if ('action' in b.data) {\n        actionNodes.push(\n          <Action\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n          />)\n        }\n      })\n\n    flows.push(\n      <g>\n        {ingredientNodes}\n        {actionNodes}\n        {vessel}\n      </g>\n    )\n  })\n\n\n  return (\n      <g transform={`translate(${0}, ${50})`}>\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}