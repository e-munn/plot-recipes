{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  const canvasWidth = width - 2 * dim.main.padding;\n  const canvasHeight = height - 2 * dim.main.padding;\n  var root = hierarchy(recipe);\n\n  const desc = a => a.descendants();\n\n  root = root.each(d => {\n    d.vesselSiblings = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n\n  const splits = a => {\n    var sp = a.split(' ');\n    return sp.length;\n  };\n\n  root = root.each(d => d.depth == 1 ? d.posHeight = dim.serve.height : 'vessel' in d.data ? d.posHeight = dim.vessel.shape.label + 1 * ((dim.vessel.action.radius + dim.vessel.action.margin) * 2) + d.children.filter(a => \"ingredient\" in a.data).length * (dim.ingredient.strokeWidth + 2 * dim.ingredient.nodeMargin + dim.ingredient.nodeHeight) + 2 * dim.vessel.shape.paddingHeight + dim.vessel.shape.textHeight * splits(d.data.vessel) : null);\n\n  const nodePosX = a => {\n    return a.posX + (dim.ingredient.marginLeft + a.data.order * dim.ingredient.offset);\n  };\n\n  const nodePosY = a => {\n    var labels = a.parent.data.vessel.split(' ');\n    var labelLength = labels.length;\n    return a.posY + dim.ingredient.nodeHeight * .5 + a.data.order * (dim.ingredient.strokeWidth + dim.ingredient.nodeHeight + 2 * dim.ingredient.nodeMargin) + dim.vessel.shape.textHeight * labelLength + a.parent.data.preactions.length * 2 * (dim.vessel.action.radius + dim.vessel.action.margin) + dim.vessel.shape.label;\n  };\n\n  root = root.each(function (d) {\n    if (d.depth == 1) {\n      var posYAdd = [];\n      var descend = desc(d);\n      descend.shift();\n      descend.forEach(a => 'vessel' in d.data ? posYAdd.push(a.posHeight) : null);\n      d.posY = sum(posYAdd);\n    } else if ('vessel' in d.data) {\n      var posYAdd = [];\n      var descend = desc(d);\n      descend.shift();\n      descend.forEach(a => 'vessel' in a.data ? posYAdd.push(a.posHeight) : null);\n      d.vesselSiblings.forEach(b => b.data.order < d.data.order ? posYAdd.push(b.posHeight) : null);\n      posYAdd.push(posYAdd.length * dim.vessel.shape.marginHeight);\n      d.posY = sum(posYAdd);\n      d.posX = dim.vessel.shape.width * .5 + (posYAdd.length - 1) * (dim.vessel.shape.width + dim.vessel.shape.marginWidth * 2);\n    } else if ('ingredient' in d.data) {\n      d.posY = d.parent.posY;\n      d.posX = d.parent.posX;\n    }\n  }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var descends = root.descendants().filter(d => 'vessel' in d.data).sort((a, b) => a.data.order - b.data.order);\n  descends = descends.filter(d => d.depth !== 1);\n  var flows = [];\n  descends.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessels, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this));\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vessel\n    }, void 0, false));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","scaleLinear","Vessels","Plot","recipe","width","height","color","dim","canvasWidth","main","padding","canvasHeight","root","desc","a","descendants","each","d","vesselSiblings","parent","children","filter","data","splits","sp","split","length","depth","posHeight","serve","vessel","shape","label","action","radius","margin","ingredient","strokeWidth","nodeMargin","nodeHeight","paddingHeight","textHeight","nodePosX","posX","marginLeft","order","offset","nodePosY","labels","labelLength","posY","preactions","posYAdd","descend","shift","forEach","push","b","marginHeight","marginWidth","descends","sort","flows","i"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  const canvasWidth = width - 2*dim.main.padding;\n  const canvasHeight = height - 2*dim.main.padding;\n\n\n  var root = hierarchy(recipe);\n\n  const desc = (a) => a.descendants()\n\n  root = root.each(d => { d.vesselSiblings = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n  const splits = (a) => {\n    var sp = a.split(' ')\n    return sp.length\n  }\n\n  root = root.each(d => (d.depth == 1) ? d.posHeight = dim.serve.height :\n  ('vessel' in d.data) ?\n    d.posHeight = ( dim.vessel.shape.label ) + ( (1) * ((dim.vessel.action.radius + dim.vessel.action.margin)*2)) +\n    ( d.children.filter(a => (\"ingredient\" in a.data)).length * ((dim.ingredient.strokeWidth) + (2*dim.ingredient.nodeMargin) + dim.ingredient.nodeHeight) ) +\n    ( 2 * dim.vessel.shape.paddingHeight ) + (dim.vessel.shape.textHeight * splits(d.data.vessel))\n  : null)\n\n\n  const nodePosX = (a) => {\n    return a.posX + (dim.ingredient.marginLeft + a.data.order * dim.ingredient.offset)\n  }\n\n  const nodePosY = (a) => {\n    var labels = a.parent.data.vessel.split(' ');\n    var labelLength = labels.length\n    return a.posY + (dim.ingredient.nodeHeight*.5) + ((a.data.order) * ((dim.ingredient.strokeWidth) + dim.ingredient.nodeHeight + (2*dim.ingredient.nodeMargin))) +\n    (dim.vessel.shape.textHeight * labelLength) +\n    (a.parent.data.preactions.length * 2 * (dim.vessel.action.radius + dim.vessel.action.margin)) +\n    (dim.vessel.shape.label)\n  }\n\n\n  root = root.each(function(d){\n    if (d.depth == 1){\n      var posYAdd = []\n      var descend = desc(d)\n      descend.shift()\n      descend.forEach(a => ('vessel' in d.data) ? posYAdd.push(a.posHeight) : null)\n      d.posY = sum(posYAdd)\n    }\n    else if ('vessel' in d.data) {\n      var posYAdd = []\n      var descend = desc(d)\n      descend.shift()\n      descend.forEach(a => ('vessel' in a.data) ? posYAdd.push(a.posHeight) : null)\n      d.vesselSiblings.forEach(b => (b.data.order < d.data.order) ? posYAdd.push(b.posHeight) : null)\n      posYAdd.push((posYAdd.length)*(dim.vessel.shape.marginHeight))\n      d.posY = sum(posYAdd)\n      d.posX = (dim.vessel.shape.width*.5) + ((posYAdd.length-1) * (dim.vessel.shape.width + (dim.vessel.shape.marginWidth*2)))\n    } else if ('ingredient' in d.data) {\n      d.posY = d.parent.posY\n      d.posX = d.parent.posX\n    }\n  })\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  var descends = root.descendants().filter(d =>'vessel' in d.data).sort((a, b) => a.data.order - b.data.order )\n  descends = descends.filter(d => (d.depth !== 1))\n\n\n\n  var flows = []\n\n  descends.forEach((a,i) => {\n    const vessel = []\n    vessel.push(\n      <Vessels\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    flows.push(\n      <>\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g>\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}