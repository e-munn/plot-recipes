{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/src/components/lists/ingredientList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport dim from '../../media/theme/dim.json';\nimport color from '../../media/theme/colors.json';\n\nconst IngredientList = ({\n  ingredientList,\n  svgHeight\n}) => {\n  _s();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const listDisplay = [];\n  ingredientList.forEach((d, i) => {\n    listDisplay.push( /*#__PURE__*/_jsxDEV(\"text\", {\n      className: 'plot-animation-fill plot-text weight-2',\n      x: 40,\n      y: 12 + i * 20,\n      fill: color.blue2,\n      textAnchor: 'start',\n      fontSize: dim.i.font.size,\n      alignmentBaseline: 'middle',\n      children: [d.data.ingredient, /*#__PURE__*/_jsxDEV(\"tspan\", {\n        className: 'plot-text weight-3',\n        alignmentBaseline: 'middle',\n        fontSize: dim.i.font.amountSize,\n        fill: color.blue2,\n        children: ' - ' + d.data.ing_amt + ' ' + d.data.ing_unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this));\n  });\n  const dot = [];\n  ingredientList.forEach((d, i) => {\n    dot.push( /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: 20,\n      cy: 10 + i * 20,\n      r: dim.i.radius,\n      fill: color.blue2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this));\n  });\n  const [open, setOpen] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        setOpen(1 - open);\n      },\n      children: \"INGREDIENTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: windowWidth,\n      height: open * svgHeight,\n      children: [dot, listDisplay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientList, \"9R2yJsPMtCAK4BjnviPjBlsCiHM=\");\n\n_c = IngredientList;\nexport default IngredientList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientList\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/src/components/lists/ingredientList.js"],"names":["React","useRef","useState","useEffect","dim","color","IngredientList","ingredientList","svgHeight","windowWidth","setWindowWidth","window","innerWidth","listDisplay","forEach","d","i","push","blue2","font","size","data","ingredient","amountSize","ing_amt","ing_unit","dot","radius","open","setOpen"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAAA;;AAG1D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACS,MAAM,CAACC,UAAR,CAA9C;AAEA,QAAMC,WAAW,GAAG,EAApB;AAEAN,EAAAA,cAAc,CAACO,OAAf,CAAuB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAC9BH,IAAAA,WAAW,CAACI,IAAZ,eACE;AACE,MAAA,SAAS,EAAE,wCADb;AAEE,MAAA,CAAC,EAAG,EAFN;AAGE,MAAA,CAAC,EAAG,KAAKD,CAAC,GAAG,EAHf;AAIE,MAAA,IAAI,EAAEX,KAAK,CAACa,KAJd;AAKE,MAAA,UAAU,EAAE,OALd;AAME,MAAA,QAAQ,EAAEd,GAAG,CAACY,CAAJ,CAAMG,IAAN,CAAWC,IANvB;AAOE,MAAA,iBAAiB,EAAE,QAPrB;AAAA,iBASIL,CAAC,CAACM,IAAF,CAAOC,UATX,eAUE;AACE,QAAA,SAAS,EAAE,oBADb;AAGE,QAAA,iBAAiB,EAAE,QAHrB;AAIE,QAAA,QAAQ,EAAElB,GAAG,CAACY,CAAJ,CAAMG,IAAN,CAAWI,UAJvB;AAKE,QAAA,IAAI,EAAElB,KAAK,CAACa,KALd;AAAA,kBAOG,QAAQH,CAAC,CAACM,IAAF,CAAOG,OAAf,GAAyB,GAAzB,GAA+BT,CAAC,CAACM,IAAF,CAAOI;AAPzC;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD,GAvBD;AAyBA,QAAMC,GAAG,GAAG,EAAZ;AAEAnB,EAAAA,cAAc,CAACO,OAAf,CAAuB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAC9BU,IAAAA,GAAG,CAACT,IAAJ,eACE;AACE,MAAA,EAAE,EAAG,EADP;AAEE,MAAA,EAAE,EAAG,KAAKD,CAAC,GAAG,EAFhB;AAGE,MAAA,CAAC,EAAGZ,GAAG,CAACY,CAAJ,CAAMW,MAHZ;AAIE,MAAA,IAAI,EAAGtB,KAAK,CAACa;AAJf;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD;AAaE,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,CAAD,CAAhC;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,OAAO,EAAG,MAAM;AAAE2B,QAAAA,OAAO,CAAC,IAAID,IAAL,CAAP;AAAmB,OADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,KAAK,EAAEnB,WAAZ;AAAyB,MAAA,MAAM,EAAGmB,IAAI,GAAGpB,SAAzC;AAAA,iBACIkB,GADJ,EAEIb,WAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9DD;;GAAMP,c;;KAAAA,c;AAgEN,eAAeA,cAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport dim from '../../media/theme/dim.json';\nimport color from '../../media/theme/colors.json';\n\nconst IngredientList = ({ ingredientList, svgHeight }) => {\n\n\nconst [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\nconst listDisplay = [];\n\ningredientList.forEach((d,i) => {\n  listDisplay.push(\n    <text\n      className={'plot-animation-fill plot-text weight-2'}\n      x={ 40 }\n      y={ 12 + i * 20 }\n      fill={color.blue2}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      alignmentBaseline={'middle'}\n      >\n      { d.data.ingredient }\n      <tspan\n        className={'plot-text weight-3'}\n\n        alignmentBaseline={'middle'}\n        fontSize={dim.i.font.amountSize}\n        fill={color.blue2}\n        >\n        {' - ' + d.data.ing_amt + ' ' + d.data.ing_unit}\n      </tspan>\n    </text>\n  )\n})\n\nconst dot = [];\n\ningredientList.forEach((d,i) => {\n  dot.push(\n    <circle\n      cx={ 20 }\n      cy={ 10 + i * 20 }\n      r={ dim.i.radius }\n      fill={ color.blue2 }\n      >\n    </circle>\n  )\n})\n\n\n  const [open, setOpen] = useState(1);\n\n  return (\n    <div>\n      <div\n        onClick={ () => { setOpen(1 - open) } }\n        >\n        INGREDIENTS\n      </div>\n      <svg width={windowWidth} height={ open * svgHeight }>\n        { dot }\n        { listDisplay }\n      </svg>\n    </div>\n  );\n};\n\nexport default IngredientList;\n"]},"metadata":{},"sourceType":"module"}