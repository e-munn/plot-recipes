{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createMean } from '../../function/statistics/mean.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'mean';\nvar dependencies = ['typed', 'add', 'divide'];\nexport var createMeanTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    divide\n  } = _ref;\n  var mean = createMean({\n    typed,\n    add,\n    divide\n  });\n  /**\n   * Attach a transform function to math.mean\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function mean\n   * from one-based to zero based\n   */\n\n  return typed('mean', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return mean.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/node_modules/mathjs/lib/esm/expression/transform/mean.transform.js"],"names":["factory","errorTransform","createMean","lastDimToZeroBase","name","dependencies","createMeanTransform","_ref","typed","add","divide","mean","any","args","apply","err","isTransformFunction"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,CAAnB;AACA,OAAO,IAAIC,mBAAmB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAsBE,IAAD,IAAU;AACpF,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA,GAFE;AAGFC,IAAAA;AAHE,MAIAH,IAJJ;AAKA,MAAII,IAAI,GAAGT,UAAU,CAAC;AACpBM,IAAAA,KADoB;AAEpBC,IAAAA,GAFoB;AAGpBC,IAAAA;AAHoB,GAAD,CAArB;AAKA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,SAAOF,KAAK,CAAC,MAAD,EAAS;AACnB,cAAU,SAASI,GAAT,CAAaC,IAAb,EAAmB;AAC3BA,MAAAA,IAAI,GAAGV,iBAAiB,CAACU,IAAD,CAAxB;;AAEA,UAAI;AACF,eAAOF,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBD,IAAjB,CAAP;AACD,OAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,cAAMd,cAAc,CAACc,GAAD,CAApB;AACD;AACF;AATkB,GAAT,CAAZ;AAWD,CA9BsD,EA8BpD;AACDC,EAAAA,mBAAmB,EAAE;AADpB,CA9BoD,CAAhD","sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createMean } from '../../function/statistics/mean.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'mean';\nvar dependencies = ['typed', 'add', 'divide'];\nexport var createMeanTransform = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    add,\n    divide\n  } = _ref;\n  var mean = createMean({\n    typed,\n    add,\n    divide\n  });\n  /**\n   * Attach a transform function to math.mean\n   * Adds a property transform containing the transform function.\n   *\n   * This transform changed the last `dim` parameter of function mean\n   * from one-based to zero based\n   */\n\n  return typed('mean', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return mean.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"]},"metadata":{},"sourceType":"module"}