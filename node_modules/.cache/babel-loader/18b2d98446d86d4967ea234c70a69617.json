{"ast":null,"code":"// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber === true || false;\n}\nexport function isComplex(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && typeof x === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = typeof x;\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/node_modules/mathjs/lib/esm/utils/is.js"],"names":["isNumber","x","isBigNumber","constructor","prototype","isComplex","Object","getPrototypeOf","isFraction","isUnit","isString","isArray","Array","isMatrix","isCollection","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isFunction","isDate","Date","isRegExp","RegExp","isObject","isNull","isUndefined","undefined","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","typeOf","t","type"],"mappings":"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","sourcesContent":["// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber === true || false;\n}\nexport function isComplex(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && typeof x === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = typeof x;\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}"]},"metadata":{},"sourceType":"module"}