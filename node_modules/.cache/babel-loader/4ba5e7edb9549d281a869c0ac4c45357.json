{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createSum } from '../../function/statistics/sum.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\n/**\n * Attach a transform function to math.sum\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `dim` parameter of function mean\n * from one-based to zero based\n */\n\nvar name = 'sum';\nvar dependencies = ['typed', 'config', 'add', 'numeric'];\nexport var createSumTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    add,\n    numeric\n  } = _ref;\n  var sum = createSum({\n    typed,\n    config,\n    add,\n    numeric\n  });\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return sum.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/node_modules/mathjs/lib/esm/expression/transform/sum.transform.js"],"names":["factory","errorTransform","createSum","lastDimToZeroBase","name","dependencies","createSumTransform","_ref","typed","config","add","numeric","sum","any","args","apply","err","isTransformFunction"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,EAA2B,SAA3B,CAAnB;AACA,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAsBE,IAAD,IAAU;AACnF,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA,MAFE;AAGFC,IAAAA,GAHE;AAIFC,IAAAA;AAJE,MAKAJ,IALJ;AAMA,MAAIK,GAAG,GAAGV,SAAS,CAAC;AAClBM,IAAAA,KADkB;AAElBC,IAAAA,MAFkB;AAGlBC,IAAAA,GAHkB;AAIlBC,IAAAA;AAJkB,GAAD,CAAnB;AAMA,SAAOH,KAAK,CAACJ,IAAD,EAAO;AACjB,cAAU,SAASS,GAAT,CAAaC,IAAb,EAAmB;AAC3BA,MAAAA,IAAI,GAAGX,iBAAiB,CAACW,IAAD,CAAxB;;AAEA,UAAI;AACF,eAAOF,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgBD,IAAhB,CAAP;AACD,OAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,cAAMf,cAAc,CAACe,GAAD,CAApB;AACD;AACF;AATgB,GAAP,CAAZ;AAWD,CAxBqD,EAwBnD;AACDC,EAAAA,mBAAmB,EAAE;AADpB,CAxBmD,CAA/C","sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createSum } from '../../function/statistics/sum.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\n/**\n * Attach a transform function to math.sum\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `dim` parameter of function mean\n * from one-based to zero based\n */\n\nvar name = 'sum';\nvar dependencies = ['typed', 'config', 'add', 'numeric'];\nexport var createSumTransform = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    config,\n    add,\n    numeric\n  } = _ref;\n  var sum = createSum({\n    typed,\n    config,\n    add,\n    numeric\n  });\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return sum.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"]},"metadata":{},"sourceType":"module"}