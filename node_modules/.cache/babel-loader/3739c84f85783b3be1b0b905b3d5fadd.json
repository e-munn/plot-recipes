{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  // const canvasWidth = width - 2*dim.m.padding;\n  // const canvasHeight = height - 2*dim.m.padding;\n  var root = hierarchy(recipe.recipe[0]);\n\n  const desc = a => a.descendants();\n\n  root.each((d, i) => {\n    d.order = i;\n  });\n  root.count();\n  root.each(d => {\n    d.vesselSibs = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n  root.each(function (d, i) {\n    if (d.depth == 0) {\n      d.pHeight = 40;\n    } else if ('vessel' in d.data) {\n      d.actions = d.children.filter(a => \"action\" in a.data).map(b => b.data.action_amt);\n      d.numIng = d.children.filter(a => \"ingredient\" in a.data).length;\n      d.numShove = d.parent.children.filter(a => \"vessel\" in a.data).filter(a => d.data.vorder > a.data.vorder).length;\n    }\n  });\n  var pY = 0;\n  var pH = 0;\n  var pHpYMax = 0;\n  root.each(function (d) {\n    if ('vessel' in d.data) {\n      if (d.depth == 0) {\n        d.data.pY = pY;\n        pH += 20;\n        d.data.pH = pH;\n      } else {\n        pH = 20;\n        pH += sum(d.actions) * dim.a.amtScale + d.numIng * dim.i.height;\n        pY = d.parent.data.pY;\n        pY += pH;\n        d.data.pY = pY;\n        d.data.pH = pH;\n\n        if (pH + pY > pHpYMax) {\n          pHpYMax = pH + pY;\n        }\n      }\n    }\n  });\n  var pX = 0;\n  pY = 0;\n  pH = 0;\n  var taskCount = 0;\n  root.each(function (d) {\n    if ('vessel' in d.data) {\n      taskCount = 0;\n\n      if (d.depth == 0) {\n        d.data.pX = pX;\n        d.data.pY = pHpYMax;\n        pH += 20;\n        d.data.pH = pH;\n      } else {\n        pH = 20;\n        pH += sum(d.actions) * dim.a.amtScale + d.numIng * dim.i.height;\n        pY = d.parent.data.pY;\n        pY -= pH;\n        d.data.pY = pY;\n        d.data.pH = pH;\n      }\n    } else {\n      if ('action' in d.data) {\n        pX = d.parent.data.pX + 10;\n        d.data.pX = pX;\n        pY = d.parent.data.pY;\n        taskCount += d.data.action_amt * dim.a.amtScale;\n        d.data.pY = pY + taskCount;\n      } else if ('ingredient' in d.data) {\n        pX = d.parent.data.pX + 10;\n        d.data.pX = pX;\n        pY = d.parent.data.pY;\n        taskCount += dim.i.height;\n        d.data.pY = pY + taskCount;\n      }\n    }\n  });\n  var allVessels = root.descendants().filter(d => 'vessel' in d.data);\n  root.each(function (d) {\n    if (d.depth == 0) {\n      d.posY = 1000;\n      d.posX = 10;\n    } else if ('vessel' in d.data) {\n      d.posX = d.parent.posX + d.numShove * dim.v.shove;\n      var posYAdd = [];\n      allVessels.forEach(function (a) {\n        if (d.data.vorder < a.data.vorder) {\n          posYAdd.push(dim.v.marginBottom + (sum(a.actions) * dim.a.amtScale + a.numIng * dim.i.height));\n        }\n      });\n\n      if (d.numShove !== 0) {\n        posYAdd.push(-d.data.pY, -dim.v.textSize);\n      }\n\n      d.posY = sum(posYAdd);\n    } else {\n      d.posX = d.parent.posX + 10;\n      d.posY = d.parent.posY + d.data.diff;\n    }\n  }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = [];\n  allVessels.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessel, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this));\n    const ingredientNodes = [];\n    a.children.forEach((b, j) => {\n      if ('ingredient' in b.data) {\n        ingredientNodes.push( /*#__PURE__*/_jsxDEV(IngredientNode, {\n          color: color,\n          dim: dim,\n          a: a,\n          b: b,\n          j: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    const actionNodes = [];\n    a.children.forEach((b, j) => {\n      if ('action' in b.data) {\n        actionNodes.push( /*#__PURE__*/_jsxDEV(Action, {\n          color: color,\n          dim: dim,\n          a: a,\n          b: b,\n          j: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [ingredientNodes, actionNodes, vessel]\n    }, void 0, true));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    transform: `translate(${0}, ${100})`,\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","each","tree","scaleLinear","Vessel","IngredientNode","Action","Plot","recipe","width","height","color","dim","root","desc","a","descendants","d","i","order","count","vesselSibs","parent","children","filter","data","depth","pHeight","actions","map","b","action_amt","numIng","length","numShove","vorder","pY","pH","pHpYMax","amtScale","pX","taskCount","allVessels","posY","posX","v","shove","posYAdd","forEach","push","marginBottom","textSize","diff","flows","vessel","ingredientNodes","j","actionNodes"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  // const canvasWidth = width - 2*dim.m.padding;\n  // const canvasHeight = height - 2*dim.m.padding;\n\n  var root = hierarchy(recipe.recipe[0]);\n\n\n  const desc = (a) => a.descendants()\n  root.each((d, i) => { d.order = i })\n\n\n\n  root.count()\n  root.each(d => { d.vesselSibs = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n  root.each(\n    function(d, i){\n      if (d.depth == 0){\n        d.pHeight = 40\n      }\n      else if ('vessel' in d.data){\n        d.actions = d.children.filter(a => (\"action\" in a.data)).map(b => b.data.action_amt)\n        d.numIng = d.children.filter(a => (\"ingredient\" in a.data)).length\n        d.numShove = d.parent.children.filter(a => (\"vessel\" in a.data)).filter(a => (d.data.vorder > a.data.vorder)).length\n      }\n    }\n  )\n\n  var pY = 0\n  var pH = 0\n  var pHpYMax = 0\n  root.each(\n    function(d){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          d.data.pY = pY\n          pH += 20\n          d.data.pH = pH\n        } else {\n          pH = 20\n          pH += (sum(d.actions) * dim.a.amtScale) + (d.numIng * dim.i.height)\n          pY = d.parent.data.pY\n          pY += pH\n          d.data.pY = pY\n          d.data.pH = pH\n          if ((pH + pY) > pHpYMax){\n            pHpYMax = pH + pY\n          }\n        }\n      }\n    }\n  )\n\n  var pX = 0\n  pY = 0\n  pH = 0\n  var taskCount = 0\n  root.each(\n    function(d){\n      if ('vessel' in d.data) {\n        taskCount = 0\n        if (d.depth == 0) {\n          d.data.pX = pX\n\n          d.data.pY = pHpYMax\n          pH += 20\n          d.data.pH = pH\n        } else {\n          pH = 20\n          pH += (sum(d.actions) * dim.a.amtScale) + (d.numIng * dim.i.height)\n          pY = d.parent.data.pY\n          pY -= pH\n          d.data.pY = pY\n          d.data.pH = pH\n        }\n      } else {\n        if ('action' in d.data){\n          pX = d.parent.data.pX + 10\n          d.data.pX = pX\n\n          pY = d.parent.data.pY\n          taskCount += d.data.action_amt * dim.a.amtScale\n          d.data.pY = pY + taskCount\n        } else if ('ingredient' in d.data){\n          pX = d.parent.data.pX + 10\n          d.data.pX = pX\n\n\n          pY = d.parent.data.pY\n          taskCount += dim.i.height\n          d.data.pY = pY + taskCount\n        }\n      }\n    }\n  )\n\n  var allVessels = root.descendants().filter(d =>'vessel' in d.data)\n\n  root.each(function(d){\n    if (d.depth == 0){\n      d.posY = 1000\n      d.posX = 10\n    }\n    else if ('vessel' in d.data) {\n\n      d.posX = d.parent.posX + (d.numShove * dim.v.shove)\n\n      var posYAdd = []\n\n      allVessels.forEach(\n        function(a){\n          if(d.data.vorder < a.data.vorder){\n            posYAdd.push(dim.v.marginBottom + ((sum(a.actions) * dim.a.amtScale) + (a.numIng * dim.i.height)))\n          }\n        }\n      )\n      if (d.numShove !== 0) {\n        posYAdd.push(-d.data.pY, -dim.v.textSize)\n      }\n      d.posY = sum(posYAdd)\n\n    } else {\n      d.posX = d.parent.posX + 10\n      d.posY = d.parent.posY + d.data.diff\n    }\n  })\n\n\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = []\n\n  allVessels.forEach((a,i) => {\n\n    const vessel = []\n    vessel.push(\n      <Vessel\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    const ingredientNodes = []\n\n    a.children.forEach((b,j) => {\n      if ('ingredient' in b.data) {\n        ingredientNodes.push(\n          <IngredientNode\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n          />)\n        }\n      })\n\n    const actionNodes = []\n\n    a.children.forEach((b,j) => {\n      if ('action' in b.data) {\n        actionNodes.push(\n          <Action\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n          />)\n        }\n      })\n\n    flows.push(\n      <>\n        {ingredientNodes}\n        {actionNodes}\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g\n        transform={`translate(${0}, ${100})`}\n\n        >\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}