{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\nimport '../../../css/plot.css';\n\nconst IngredientNode = ({\n  root,\n  color,\n  dim,\n  a,\n  b,\n  j\n}) => {\n  _s();\n\n  const [done, setDone] = useState(0);\n  const statesIng = [{\n    \"textposX\": b.data.pX + 30,\n    \"dotposX\": b.data.pX + 20,\n    \"dotColor\": color.blue2,\n    \"posXTransform\": 'translate(18px, 0px)'\n  }, {\n    \"textposX\": b.data.pX + 10,\n    \"dotposX\": b.data.pX,\n    \"dotColor\": color.blue1,\n    \"posXTransform\": 'translate(0px, 0px)'\n  }];\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setDone(1),\n    onSwipedRight: () => setDone(0),\n    preventDefaultTouchmoveEvent: true\n  });\n\n  const label = /*#__PURE__*/_jsxDEV(\"text\", {\n    className: 'plot-text',\n    className: 'plot-animation',\n    x: b.data.pX + 10,\n    y: b.data.pY + 1,\n    style: {\n      textTransform: 'capitalize',\n      filter: 'url(#blur)'\n    },\n    fill: `${statesIng[done].dotColor}`,\n    textAnchor: 'start',\n    fontSize: dim.i.font.size,\n    fontWeight: dim.i.font.weight,\n    alignmentBaseline: 'middle',\n    filter: 'url(#blur)',\n    children: b.data.ingredient\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  const dot = /*#__PURE__*/_jsxDEV(\"circle\", {\n    className: 'plot-animation',\n    r: 4,\n    cx: b.data.pX,\n    cy: b.data.pY,\n    fill: `${statesIng[done].dotColor}`\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  const swipe = /*#__PURE__*/_jsxDEV(\"rect\", {\n    x: b.data.pX - 20,\n    y: b.data.pY - dim.i.font.size / 2 - 2,\n    width: 100,\n    height: dim.i.font.size + 4,\n    fill: 'transparent'\n  }, 'ingredient' + b + j, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"g\", { ...handlers,\n    className: 'plot-animation' // onClick={ () => setFocus(1-focus) }\n    ,\n    style: {\n      transform: `${statesIng[done].posXTransform}`\n    },\n    children: [label, dot, swipe]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientNode, \"aEeK+Z5/MC7aZgvFnlP462wp40A=\", false, function () {\n  return [useSwipeable];\n});\n\n_c = IngredientNode;\nexport default IngredientNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientNode\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js"],"names":["React","useState","useEffect","useRef","select","max","sum","hierarchy","linkHorizontal","easeSin","easeCubicIn","easeCubicOut","transition","useSwipeable","IngredientNode","root","color","dim","a","b","j","done","setDone","statesIng","data","pX","blue2","blue1","handlers","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","label","pY","textTransform","filter","dotColor","i","font","size","weight","ingredient","dot","swipe","transform","posXTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\nimport '../../../css/plot.css'\n\n\nconst IngredientNode = ({ root, color, dim, a, b, j }) => {\n\n\n\n  const [done, setDone] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX + 20,\n      \"dotColor\": color.blue2,\n      \"posXTransform\": 'translate(18px, 0px)'\n    },\n    {\n      \"textposX\": b.data.pX + 10,\n      \"dotposX\": b.data.pX,\n      \"dotColor\": color.blue1,\n      \"posXTransform\": 'translate(0px, 0px)'\n    }\n  ]\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setDone(1),\n    onSwipedRight: () => setDone(0),\n    preventDefaultTouchmoveEvent: true\n\n  });\n\n\n  const label = (\n    <text\n      className={'plot-text'}\n      className={'plot-animation'}\n      key={'ingredient' + b + j}\n      x={ b.data.pX + 10 }\n      y={ b.data.pY + 1 }\n      style={{textTransform:'capitalize', filter: 'url(#blur)'}}\n      fill={`${statesIng[done].dotColor}`}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      fontWeight={dim.i.font.weight}\n      alignmentBaseline={'middle'}\n      filter={'url(#blur)'}\n      >\n      {/* { b.data.stepOrder} */}\n\n      { b.data.ingredient}\n\n    </text>\n\n  )\n  const dot = (\n    <circle\n      className={'plot-animation'}\n\n      key={'ingredient' + b + j}\n      r={4}\n      cx={ b.data.pX }\n      cy={ b.data.pY }\n      fill={`${statesIng[done].dotColor}`}\n      >\n    </circle>\n\n  )\n  const swipe = (\n    <rect\n      key={'ingredient' + b + j}\n      x={ b.data.pX - 20 }\n      y={ b.data.pY - dim.i.font.size/2 - 2}\n      width={ 100 }\n      height={ dim.i.font.size + 4}\n      fill={ 'transparent' }\n      >\n    </rect>\n  )\n\n\n\n  return (\n    <g\n      {...handlers}\n      className={'plot-animation'}\n      // onClick={ () => setFocus(1-focus) }\n      style={{transform: `${ statesIng[done].posXTransform }`}}\n      >\n      {label}\n      {dot}\n      {swipe}\n\n    </g>\n\n  );\n};\n\nexport default IngredientNode;\n"]},"metadata":{},"sourceType":"module"}