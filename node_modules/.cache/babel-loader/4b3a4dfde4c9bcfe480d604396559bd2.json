{"ast":null,"code":"var t = require(\"react\");\n\nfunction e(t, e) {\n  return function (n) {\n    var r = function (t) {\n      if (t) return t;\n      var e = document.querySelector(\"link[rel=canonical]\");\n      return e ? e.href : window.location.href;\n    }(n.url),\n        i = n.title || document.title;\n\n    navigator.share({\n      text: n.text,\n      title: i,\n      url: r\n    }).then(t).catch(e);\n  };\n}\n\nmodule.exports = function (n, r) {\n  void 0 === n && (n = function () {}), void 0 === r && (r = function () {});\n  var i = t.useState(!0),\n      o = i[0],\n      u = i[1],\n      a = t.useState(!1),\n      c = a[0],\n      f = a[1];\n  return t.useEffect(function () {\n    navigator.share ? f(!0) : f(!1), u(!1);\n  }, [n, r]), {\n    loading: o,\n    isSupported: c,\n    share: e(n, r)\n  };\n};","map":{"version":3,"sources":["../src/share-content.ts"],"names":[],"mappings":"gBAKA,O","sourcesContent":["import getUrl from \"./get-url\";\n\n/**\n * Trigger native share popup\n */\nfunction shareContent(onSuccess: () => void, onError: () => void) {\n  return function (config: Partial<IShareConfig>) {\n    const url = getUrl(config.url);\n    const title = config.title || document.title;\n    const text = config.text;\n    navigator\n      .share({ text, title, url })\n      .then(onSuccess)\n      .catch(onError);\n  };\n}\n\nexport default shareContent;"]},"metadata":{},"sourceType":"script"}