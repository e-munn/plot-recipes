{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  const canvasWidth = width - 2 * dim.main.padding;\n  const canvasHeight = height - 2 * dim.main.padding; //\n  // var root2 = hierarchy(recipe);\n  // console.log(root2)\n\n  var root = hierarchy(recipe.recipe[0]);\n  const testTree = tree().size([300, 600])(root);\n\n  const desc = a => a.descendants(); // root.each((d, i) => { d.order = i })\n\n\n  root.count();\n  console.log(root);\n  root.each(d => {\n    d.vesselSibs = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n  root.each(function (d, i) {\n    if (d.depth == 0) {\n      d.pHeight = 40;\n    } else if ('vessel' in d.data) {\n      // d.pHeight = (d.children.filter(a => !(\"vessel\" in a.data)).length) * 20\n      d.pHeight = d.children.length * 10;\n    }\n  });\n\n  const nodePosY = a => {\n    return a.posY + dim.ingredient.nodeHeight * .5 + a.data.order * (dim.ingredient.strokeWidth + dim.ingredient.nodeHeight + 2 * dim.ingredient.nodeMargin) + a.parent.data.preactions.length * 2 * (dim.vessel.action.radius + dim.vessel.action.margin) + dim.vessel.shape.label;\n  };\n\n  root.each(function (d) {\n    if (d.depth == 0) {\n      d.posY = 1000;\n      d.posX = 100;\n    } else if ('vessel' in d.data) {\n      var posYAdd = [];\n      var descend = desc(d);\n      descend.shift();\n      descend.forEach(a => 'vessel' in a.data ? posYAdd.push(a.pHeight) : null);\n      d.vesselSibs.forEach(b => d.data.vorder > b.data.vorder ? posYAdd.push(b.value * 30) : null);\n      d.posY = sum(posYAdd);\n      d.posX = 10;\n    } else if ('ingredient' in d.data) {\n      d.posY = d.parent.posY;\n      d.posX = d.parent.posX;\n    }\n  }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var allVessels = root.descendants().filter(d => 'vessel' in d.data); // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = [];\n  allVessels.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessels, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this));\n    const ingredientNodes = [];\n    a.children.forEach((b, j) => {\n      'ingredient' in b.data ? ingredientNodes.push( /*#__PURE__*/_jsxDEV(IngredientNode, {\n        color: color,\n        dim: dim,\n        a: a,\n        b: b,\n        j: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)) : console.log('');\n    });\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [ingredientNodes, vessel]\n    }, void 0, true));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    transform: `translate(${0}, ${100})`,\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","each","tree","scaleLinear","Vessels","IngredientNode","Plot","recipe","width","height","color","dim","canvasWidth","main","padding","canvasHeight","root","testTree","size","desc","a","descendants","count","console","log","d","vesselSibs","parent","children","filter","data","i","depth","pHeight","length","nodePosY","posY","ingredient","nodeHeight","order","strokeWidth","nodeMargin","preactions","vessel","action","radius","margin","shape","label","posX","posYAdd","descend","shift","forEach","push","b","vorder","value","allVessels","flows","ingredientNodes","j"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\n\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  const canvasWidth = width - 2*dim.main.padding;\n  const canvasHeight = height - 2*dim.main.padding;\n  //\n  // var root2 = hierarchy(recipe);\n  // console.log(root2)\n\n\n  var root = hierarchy(recipe.recipe[0]);\n\n  const testTree = tree().size([300, 600])(root)\n\n\n\n  const desc = (a) => a.descendants()\n  // root.each((d, i) => { d.order = i })\n\n  root.count()\n  console.log(root)\n  root.each(d => { d.vesselSibs = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n\n\n  root.each(\n    function(d, i){\n      if (d.depth == 0){\n        d.pHeight = 40\n      }\n      else if ('vessel' in d.data){\n        // d.pHeight = (d.children.filter(a => !(\"vessel\" in a.data)).length) * 20\n        d.pHeight = d.children.length*10\n\n      }\n    }\n  )\n\n  const nodePosY = (a) => {\n\n    return a.posY + (dim.ingredient.nodeHeight*.5) + ((a.data.order) * ((dim.ingredient.strokeWidth) + dim.ingredient.nodeHeight + (2*dim.ingredient.nodeMargin)))  + \n    (a.parent.data.preactions.length * 2 * (dim.vessel.action.radius + dim.vessel.action.margin)) +\n    (dim.vessel.shape.label)\n  }\n\n  root.each(function(d){\n    if (d.depth == 0){\n      d.posY = 1000\n      d.posX = 100\n\n    }\n    else if ('vessel' in d.data) {\n      var posYAdd = []\n      var descend = desc(d)\n      descend.shift()\n      descend.forEach(a => ('vessel' in a.data) ? posYAdd.push(a.pHeight) : null)\n      d.vesselSibs.forEach(b => (d.data.vorder > b.data.vorder) ? posYAdd.push(b.value*30) : null)\n      d.posY = sum(posYAdd)\n      d.posX = 10\n    } else if ('ingredient' in d.data) {\n      d.posY = d.parent.posY\n      d.posX = d.parent.posX\n    }\n  })\n\n\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var allVessels = root.descendants().filter(d =>'vessel' in d.data)\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = []\n\n  allVessels.forEach((a,i) => {\n\n    const vessel = []\n    vessel.push(\n      <Vessels\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    const ingredientNodes = []\n\n    a.children.forEach((b,j) => {\n      ('ingredient' in b.data) ?\n        ingredientNodes.push(\n          <IngredientNode\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n          />\n        ) : console.log('')\n      }\n    )\n\n\n\n    flows.push(\n      <>\n        {ingredientNodes}\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g\n        transform={`translate(${0}, ${100})`}\n        >\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}