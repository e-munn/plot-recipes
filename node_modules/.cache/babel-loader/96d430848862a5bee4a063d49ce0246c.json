{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/src/components/lists/ingredientList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { scaleOrdinal } from 'd3';\nimport dim from '../../media/theme/dim.json';\nimport color from '../../media/theme/colors.json';\nimport '../../css/page.css';\n\nconst IngredientList = ({\n  ingredientList,\n  svgHeight\n}) => {\n  _s();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const listDisplay = [];\n  ingredientList.forEach((d, i) => {\n    listDisplay.push( /*#__PURE__*/_jsxDEV(\"text\", {\n      className: 'plot-animation-fill plot-text weight-2',\n      x: 40,\n      y: 12 + i * 20,\n      fill: color.blue2,\n      textAnchor: 'start',\n      fontSize: dim.i.font.size,\n      alignmentBaseline: 'middle',\n      children: [d.data.ingredient, /*#__PURE__*/_jsxDEV(\"tspan\", {\n        className: 'plot-text weight-3',\n        alignmentBaseline: 'middle',\n        fontSize: dim.i.font.amountSize,\n        fill: color.blue2,\n        children: ' - ' + d.data.ing_amt + ' ' + d.data.ing_unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this));\n  });\n  const dot = [];\n  ingredientList.forEach((d, i) => {\n    dot.push( /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: 20,\n      cy: 10 + i * 20,\n      r: dim.i.radius,\n      fill: color.blue2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this));\n  });\n  const [open, setOpen] = useState(0);\n  const [display, setDisplay] = useState(0);\n  const map = scaleOrdinal().domain([0, 1]).range(['none', 'block']);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'head',\n      onClick: () => {\n        setDisplay(1 - display);\n        setTimeout(() => {\n          setOpen(1 - open);\n        }, 300);\n      },\n      children: \"INGREDIENTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: windowWidth,\n      display: map(display),\n      height: open * svgHeight,\n      children: [dot, listDisplay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IngredientList, \"IID0msZ6rcAwytiVMUpMuCodwyU=\");\n\n_c = IngredientList;\nexport default IngredientList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientList\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/src/components/lists/ingredientList.js"],"names":["React","useRef","useState","useEffect","scaleOrdinal","dim","color","IngredientList","ingredientList","svgHeight","windowWidth","setWindowWidth","window","innerWidth","listDisplay","forEach","d","i","push","blue2","font","size","data","ingredient","amountSize","ing_amt","ing_unit","dot","radius","open","setOpen","display","setDisplay","map","domain","range","setTimeout"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { scaleOrdinal } from 'd3'\nimport dim from '../../media/theme/dim.json';\nimport color from '../../media/theme/colors.json';\nimport '../../css/page.css';\n\n\nconst IngredientList = ({ ingredientList, svgHeight }) => {\n\n\nconst [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\nconst listDisplay = [];\n\ningredientList.forEach((d,i) => {\n  listDisplay.push(\n    <text\n      className={'plot-animation-fill plot-text weight-2'}\n      x={ 40 }\n      y={ 12 + i * 20 }\n      fill={color.blue2}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      alignmentBaseline={'middle'}\n      >\n      { d.data.ingredient }\n      <tspan\n        className={'plot-text weight-3'}\n        alignmentBaseline={'middle'}\n        fontSize={dim.i.font.amountSize}\n        fill={color.blue2}\n        >\n        {' - ' + d.data.ing_amt + ' ' + d.data.ing_unit}\n      </tspan>\n    </text>\n  )\n})\n\nconst dot = [];\n\ningredientList.forEach((d,i) => {\n  dot.push(\n    <circle\n      cx={ 20 }\n      cy={ 10 + i * 20 }\n      r={ dim.i.radius }\n      fill={ color.blue2 }\n      >\n    </circle>\n  )\n})\n\n\n  const [open, setOpen] = useState(0);\n\n  const [display, setDisplay] = useState(0);\n\n  const map = scaleOrdinal()\n    .domain([0, 1])\n    .range(['none', 'block'])\n\n  return (\n    <>\n      <div\n        className={'head'}\n        onClick={ () => {\n          setDisplay( 1-display )\n          setTimeout( () => {\n            setOpen( 1 - open )\n          }, 300)\n        } }\n        >\n        INGREDIENTS\n      </div>\n\n      <svg width={windowWidth}  display={ map(display) } height={ open * svgHeight }>\n\n        { dot }\n        { listDisplay }\n\n      </svg>\n      <hr/>\n    </>\n  );\n};\n\nexport default IngredientList;\n"]},"metadata":{},"sourceType":"module"}