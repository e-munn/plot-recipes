{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  const canvasWidth = width - 2 * dim.main.padding;\n  const canvasHeight = height - 2 * dim.main.padding; //\n  // var root2 = hierarchy(recipe);\n  // console.log(root2)\n\n  var root = hierarchy(recipe.recipe[0]);\n\n  const desc = a => a.descendants();\n\n  root = root.each(d => {\n    d.vesselSibs = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n  root = root.each((d, i) => {\n    d.order = i;\n  });\n  root.each(function (d, i) {\n    if (d.depth == 0) {\n      console.log(i);\n      d.pHeight = 40;\n    } else if ('vessel' in d.data) {\n      console.log(i);\n      d.pHeight = d.children.filter(a => !(\"vessel\" in a.data)).length * 20;\n    }\n  });\n  root.each(function (d) {\n    if (d.depth == 0) {\n      d.posY = 1000;\n      d.posX = 100;\n    } else if ('vessel' in d.data) {\n      var posYAdd = [20];\n      var descend = desc(d);\n      descend.shift();\n      descend.forEach(a => 'vessel' in a.data ? posYAdd.push(a.pHeight) : null);\n      d.vesselSibs.forEach(b => b.order > d.order ? posYAdd.push(b.pHeight) : null);\n      posYAdd.push(posYAdd.length * dim.vessel.shape.marginHeight);\n      d.posY = sum(posYAdd);\n      d.posX = dim.vessel.shape.width * .5 + (posYAdd.length - 1) * (dim.vessel.shape.width + dim.vessel.shape.marginWidth * 2);\n    }\n  });\n  var test = tree(root).size([300, 600]);\n  console.log(test); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var allVessels = root.descendants().filter(d => 'vessel' in d.data); // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = [];\n  allVessels.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessels, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this));\n    const tests = [];\n    tests.push( /*#__PURE__*/_jsxDEV(\"circle\", {\n      x: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this));\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vessel\n    }, void 0, false));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","each","tree","scaleLinear","Vessels","Plot","recipe","width","height","color","dim","canvasWidth","main","padding","canvasHeight","root","desc","a","descendants","d","vesselSibs","parent","children","filter","data","i","order","depth","console","log","pHeight","length","posY","posX","posYAdd","descend","shift","forEach","push","b","vessel","shape","marginHeight","marginWidth","test","size","allVessels","flows","tests"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  const canvasWidth = width - 2*dim.main.padding;\n  const canvasHeight = height - 2*dim.main.padding;\n  //\n  // var root2 = hierarchy(recipe);\n  // console.log(root2)\n\n\n  var root = hierarchy(recipe.recipe[0]);\n\n\n  const desc = (a) => a.descendants()\n\n  root = root.each(d => { d.vesselSibs = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n  root = root.each((d, i) => { d.order = i })\n\n\n  root.each(\n    function(d, i){\n      if (d.depth == 0){\n        console.log(i)\n        d.pHeight = 40\n      }\n      else if ('vessel' in d.data){\n        console.log(i)\n        d.pHeight = (d.children.filter(a => !(\"vessel\" in a.data)).length) * 20\n      }\n    }\n  )\n\n\n\n  root.each(function(d){\n    if (d.depth == 0){\n      d.posY = 1000\n      d.posX = 100\n\n    }\n    else if ('vessel' in d.data) {\n      var posYAdd = [20]\n      var descend = desc(d)\n      descend.shift()\n      descend.forEach(a => ('vessel' in a.data) ? posYAdd.push(a.pHeight) : null)\n      d.vesselSibs.forEach(b => (b.order > d.order) ? posYAdd.push(b.pHeight) : null)\n      posYAdd.push((posYAdd.length)*(dim.vessel.shape.marginHeight))\n      d.posY = sum(posYAdd)\n      d.posX = (dim.vessel.shape.width*.5) + ((posYAdd.length-1) * (dim.vessel.shape.width + (dim.vessel.shape.marginWidth*2)))\n    }\n  })\n\n  var test = tree(root).size([300, 600])\n\n  console.log(test)\n\n\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var allVessels = root.descendants().filter(d =>'vessel' in d.data)\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = []\n\n  allVessels.forEach((a,i) => {\n    const vessel = []\n    vessel.push(\n      <Vessels\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    const tests = []\n    tests.push(\n      <circle\n        x={a}\n        i={i}\n        dim={dim}\n        color={color}\n      >\n    </circle>\n    )\n\n    flows.push(\n      <>\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g>\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}