{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/vessels/vessels.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { select, linkVertical } from 'd3';\n\nconst Vessel = ({\n  a,\n  i,\n  dim,\n  color,\n  setFocusG\n}) => {\n  _s();\n\n  const focusRef = useRef();\n  var labelText = a.data.vessel.split(' ');\n  var labelSplit = [];\n  var vesselLabel = [];\n  labelText.forEach((b, j) => {\n    labelSplit.push( /*#__PURE__*/_jsxDEV(\"text\", {\n      alignmentBaseline: 'middle',\n      x: a.posX,\n      y: a.posY + dim.vessel.shape.label * .5 + j * dim.vessel.shape.textHeight + dim.vessel.shape.textHeight / 2,\n      children: b\n    }, a + b + j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  });\n  vesselLabel.push( /*#__PURE__*/_jsxDEV(\"g\", {\n    letterSpacing: 1,\n    style: {\n      textTransform: 'capitalize',\n      textAnchor: 'middle'\n    },\n    fontWeight: 500,\n    fill: `${color.green2}`,\n    fontSize: dim.vessel.shape.textSize,\n    children: labelSplit\n  }, 'b' + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n\n  const vesselShape = /*#__PURE__*/_jsxDEV(\"rect\", {\n    className: 'vesselShape',\n    width: dim.vessel.shape.width,\n    height: a.posHeight,\n    x: a.posX,\n    y: a.posY,\n    transform: `translate(${dim.vessel.shape.width * -.5}, ${0})`,\n    fill: `${color.background}`,\n    stroke: `${color.green1}`,\n    strokeWidth: dim.vessel.shape.stroke,\n    rx: dim.vessel.shape.width * .5\n  }, 'c' + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  const vesselLabelBack = /*#__PURE__*/_jsxDEV(\"rect\", {\n    x: a.posX,\n    y: a.posY + dim.vessel.shape.label * .5 - 5,\n    fill: color.background,\n    width: dim.vessel.shape.width + dim.vessel.shape.stroke + 4,\n    height: labelText.length * dim.vessel.shape.textHeight - dim.vessel.shape.textHeight * .5 + 15,\n    transform: `translate(${dim.vessel.shape.width * -.5 - dim.vessel.shape.stroke * .5 - 2}, ${0})`\n  }, 'd' + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n\n  var vesselTransfer = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  if (a.data.finalaction[0] == 'transfer') {\n    vesselTransfer = /*#__PURE__*/_jsxDEV(\"path\", {\n      stroke: `${color.transfer}`,\n      strokeWidth: 5,\n      fill: 'none',\n      strokeDasharray: '5 5',\n      d: linkVertical()({\n        source: [a.posX, a.posY + a.posHeight],\n        target: [a.posX + dim.vessel.shape.width + dim.vessel.shape.marginWidth * 2, a.posY + a.posHeight + dim.vessel.shape.marginHeight]\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this);\n  } else {\n    vesselTransfer = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: vesselShape\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Vessel, \"gzGuMUYpB5kJ/Pn56lwTC2PPJ2A=\");\n\n_c = Vessel;\nexport default Vessel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vessel\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/vessels/vessels.js"],"names":["React","useRef","select","linkVertical","Vessel","a","i","dim","color","setFocusG","focusRef","labelText","data","vessel","split","labelSplit","vesselLabel","forEach","b","j","push","posX","posY","shape","label","textHeight","textTransform","textAnchor","green2","textSize","vesselShape","width","posHeight","background","green1","stroke","vesselLabelBack","length","vesselTransfer","finalaction","transfer","source","target","marginWidth","marginHeight"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\n\nimport { select, linkVertical } from 'd3';\n\n\nconst Vessel = ({ a, i, dim, color, setFocusG }) => {\n\n  const focusRef = useRef();\n  var labelText = a.data.vessel.split(' ');\n  var labelSplit = []\n  var vesselLabel = []\n  labelText.forEach((b, j) => {\n    labelSplit.push(\n      <text\n        key={a + b + j}\n        alignmentBaseline={'middle'}\n        x={ a.posX }\n        y={ a.posY + dim.vessel.shape.label*.5 + (j*dim.vessel.shape.textHeight) + (dim.vessel.shape.textHeight/2)}\n        >\n        {b}\n      </text>\n    )\n  })\n  vesselLabel.push(\n    <g\n      key={'b' + i}\n      letterSpacing={1}\n      style={{ textTransform: 'capitalize', textAnchor: 'middle'}}\n      fontWeight={500}\n      fill={`${ color.green2 }`}\n      fontSize={dim.vessel.shape.textSize}\n      >\n      {labelSplit}\n    </g>\n  )\n  const vesselShape = (\n    <rect\n      className={'vesselShape'}\n      key={'c' + i}\n      width={ dim.vessel.shape.width }\n      height={ a.posHeight }\n      x={ a.posX }\n      y={ a.posY }\n      transform={`translate(${dim.vessel.shape.width*-.5}, ${0})`}\n      fill={ `${color.background}` }\n      stroke={  `${color.green1}` }\n      strokeWidth={ dim.vessel.shape.stroke }\n      rx={ dim.vessel.shape.width * .5 }\n      >\n    </rect>\n  )\n  const vesselLabelBack = (\n    <rect\n      key={ 'd' + i }\n      x={ a.posX }\n      y={ a.posY + (dim.vessel.shape.label * .5) - 5 }\n      fill={color.background}\n      width={dim.vessel.shape.width + (dim.vessel.shape.stroke) + 4}\n      height={labelText.length * dim.vessel.shape.textHeight - dim.vessel.shape.textHeight*.5 + 15}\n      transform={`translate(${(dim.vessel.shape.width*-.5)-(dim.vessel.shape.stroke*.5)-2}, ${0})`}\n      >\n    </rect>\n  )\n\n\n  var vesselTransfer = (<></>)\n\n  if(a.data.finalaction[0] == 'transfer'){\n    vesselTransfer =\n      (<path\n        stroke={ `${color.transfer}` }\n        strokeWidth={5}\n        fill={'none'}\n        strokeDasharray={'5 5'}\n        d={\n            linkVertical()({\n              source: [a.posX, a.posY + a.posHeight],\n              target: [a.posX + dim.vessel.shape.width + (dim.vessel.shape.marginWidth*2), a.posY + a.posHeight + dim.vessel.shape.marginHeight]\n            })\n          }\n        >\n        </path>)\n  } else {\n    vesselTransfer = (<></>)\n  }\n\n\n\n\n  return (\n      <g>\n        {vesselShape}\n      </g>\n  );\n};\n\nexport default Vessel;\n"]},"metadata":{},"sourceType":"module"}