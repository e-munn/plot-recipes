{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createVariance } from '../../function/statistics/variance.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'variance';\nvar dependencies = ['typed', 'add', 'subtract', 'multiply', 'divide', 'apply', 'isNaN'];\n/**\n * Attach a transform function to math.var\n * Adds a property transform containing the transform function.\n *\n * This transform changed the `dim` parameter of function var\n * from one-based to zero based\n */\n\nexport var createVarianceTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    subtract,\n    multiply,\n    divide,\n    apply,\n    isNaN\n  } = _ref;\n  var variance = createVariance({\n    typed,\n    add,\n    subtract,\n    multiply,\n    divide,\n    apply,\n    isNaN\n  });\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return variance.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/node_modules/mathjs/lib/esm/expression/transform/variance.transform.js"],"names":["factory","errorTransform","createVariance","lastDimToZeroBase","name","dependencies","createVarianceTransform","_ref","typed","add","subtract","multiply","divide","apply","isNaN","variance","any","args","err","isTransformFunction"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,IAAIC,IAAI,GAAG,UAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,UAAjB,EAA6B,UAA7B,EAAyC,QAAzC,EAAmD,OAAnD,EAA4D,OAA5D,CAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,uBAAuB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAsBE,IAAD,IAAU;AACxF,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA,GAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,MALE;AAMFC,IAAAA,KANE;AAOFC,IAAAA;AAPE,MAQAP,IARJ;AASA,MAAIQ,QAAQ,GAAGb,cAAc,CAAC;AAC5BM,IAAAA,KAD4B;AAE5BC,IAAAA,GAF4B;AAG5BC,IAAAA,QAH4B;AAI5BC,IAAAA,QAJ4B;AAK5BC,IAAAA,MAL4B;AAM5BC,IAAAA,KAN4B;AAO5BC,IAAAA;AAP4B,GAAD,CAA7B;AASA,SAAON,KAAK,CAACJ,IAAD,EAAO;AACjB,cAAU,SAASY,GAAT,CAAaC,IAAb,EAAmB;AAC3BA,MAAAA,IAAI,GAAGd,iBAAiB,CAACc,IAAD,CAAxB;;AAEA,UAAI;AACF,eAAOF,QAAQ,CAACF,KAAT,CAAe,IAAf,EAAqBI,IAArB,CAAP;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,cAAMjB,cAAc,CAACiB,GAAD,CAApB;AACD;AACF;AATgB,GAAP,CAAZ;AAWD,CA9B0D,EA8BxD;AACDC,EAAAA,mBAAmB,EAAE;AADpB,CA9BwD,CAApD","sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createVariance } from '../../function/statistics/variance.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'variance';\nvar dependencies = ['typed', 'add', 'subtract', 'multiply', 'divide', 'apply', 'isNaN'];\n/**\n * Attach a transform function to math.var\n * Adds a property transform containing the transform function.\n *\n * This transform changed the `dim` parameter of function var\n * from one-based to zero based\n */\n\nexport var createVarianceTransform = /* #__PURE__ */factory(name, dependencies, (_ref) => {\n  var {\n    typed,\n    add,\n    subtract,\n    multiply,\n    divide,\n    apply,\n    isNaN\n  } = _ref;\n  var variance = createVariance({\n    typed,\n    add,\n    subtract,\n    multiply,\n    divide,\n    apply,\n    isNaN\n  });\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return variance.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"]},"metadata":{},"sourceType":"module"}