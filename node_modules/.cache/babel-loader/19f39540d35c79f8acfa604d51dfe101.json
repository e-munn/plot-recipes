{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\n\nconst IngredientNode = ({\n  root,\n  color,\n  dim,\n  a,\n  b,\n  j\n}) => {\n  _s();\n\n  const [focus, setFocus] = useState(0);\n  const focusRef = useRef();\n  const on = {\n    \"posX\": b.data.pX + 12\n  };\n  const off = {\n    \"posX\": b.data.pX + 30\n  };\n  var focusState = off;\n  useEffect(() => {\n    console.log(focus);\n\n    if (focus == 1) {\n      focusState = on;\n    } else if (focus == 0) {\n      focusState = off;\n    }\n\n    const label = /*#__PURE__*/_jsxDEV(\"text\", {\n      className: 'plot-text',\n      x: focusState.posX,\n      y: b.data.pY + 1,\n      style: {\n        textTransform: 'capitalize'\n      },\n      fill: `${color.blue2}`,\n      textAnchor: 'start',\n      fontSize: dim.i.font.size,\n      fontWeight: dim.i.font.weight,\n      alignmentBaseline: 'middle',\n      children: b.data.ingredient\n    }, 'ingredient' + b + j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this);\n\n    const dot = /*#__PURE__*/_jsxDEV(\"circle\", {\n      r: 4,\n      cx: b.data.pX,\n      cy: b.data.pY,\n      fill: `${color.blue1}`\n    }, 'ingredient' + b + j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    // ref={ focusRef }\n    onClick: () => setFocus(1 - focus),\n    children: [label, dot]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientNode, \"oIK+yppMcll80QCr8NTv205DzgI=\");\n\n_c = IngredientNode;\nexport default IngredientNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientNode\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js"],"names":["React","useState","useEffect","useRef","select","max","sum","hierarchy","linkHorizontal","easeSin","easeCubicIn","easeCubicOut","transition","IngredientNode","root","color","dim","a","b","j","focus","setFocus","focusRef","on","data","pX","off","focusState","console","log","label","posX","pY","textTransform","blue2","i","font","size","weight","ingredient","dot","blue1"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA4BC,SAA5B,EAAuCC,cAAvC,EAAuDC,OAAvD,EAAgEC,WAAhE,EAA6EC,YAA7E,EAA2FC,UAA3F,QAA6G,IAA7G;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,GAAf;AAAoBC,EAAAA,CAApB;AAAuBC,EAAAA,CAAvB;AAA0BC,EAAAA;AAA1B,CAAD,KAAmC;AAAA;;AAExD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMqB,QAAQ,GAAGnB,MAAM,EAAvB;AAEA,QAAMoB,EAAE,GAAG;AACT,YAAQL,CAAC,CAACM,IAAF,CAAOC,EAAP,GAAY;AADX,GAAX;AAIA,QAAMC,GAAG,GAAG;AACV,YAAQR,CAAC,CAACM,IAAF,CAAOC,EAAP,GAAY;AADV,GAAZ;AAKA,MAAIE,UAAU,GAAGD,GAAjB;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;;AACA,QAAGA,KAAK,IAAI,CAAZ,EAAc;AACZO,MAAAA,UAAU,GAACJ,EAAX;AACD,KAFD,MAEO,IAAIH,KAAK,IAAI,CAAb,EAAe;AACpBO,MAAAA,UAAU,GAACD,GAAX;AACD;;AAGH,UAAMI,KAAK,gBACT;AACE,MAAA,SAAS,EAAE,WADb;AAGE,MAAA,CAAC,EAAGH,UAAU,CAACI,IAHjB;AAIE,MAAA,CAAC,EAAGb,CAAC,CAACM,IAAF,CAAOQ,EAAP,GAAY,CAJlB;AAKE,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAC;AAAf,OALT;AAME,MAAA,IAAI,EAAG,GAAElB,KAAK,CAACmB,KAAM,EANvB;AAOE,MAAA,UAAU,EAAE,OAPd;AAQE,MAAA,QAAQ,EAAElB,GAAG,CAACmB,CAAJ,CAAMC,IAAN,CAAWC,IARvB;AASE,MAAA,UAAU,EAAErB,GAAG,CAACmB,CAAJ,CAAMC,IAAN,CAAWE,MATzB;AAUE,MAAA,iBAAiB,EAAE,QAVrB;AAAA,gBAcIpB,CAAC,CAACM,IAAF,CAAOe;AAdX,OAEO,eAAerB,CAAf,GAAmBC,CAF1B;AAAA;AAAA;AAAA;AAAA,YADF;;AAoBA,UAAMqB,GAAG,gBACP;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,EAAE,EAAGtB,CAAC,CAACM,IAAF,CAAOC,EAHd;AAIE,MAAA,EAAE,EAAGP,CAAC,CAACM,IAAF,CAAOQ,EAJd;AAKE,MAAA,IAAI,EAAG,GAAEjB,KAAK,CAAC0B,KAAM;AALvB,OACO,eAAevB,CAAf,GAAmBC,CAD1B;AAAA;AAAA;AAAA;AAAA,YADF;AAYC,GAzCQ,CAAT;AA4CA,sBACE;AACE;AACA,IAAA,OAAO,EAAG,MAAME,QAAQ,CAAC,IAAED,KAAH,CAF1B;AAAA,eAIGU,KAJH,EAKGU,GALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvED;;GAAM3B,c;;KAAAA,c;AAyEN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\n\n\nconst IngredientNode = ({ root, color, dim, a, b, j }) => {\n\n  const [focus, setFocus] = useState(0);\n\n  const focusRef = useRef();\n\n  const on = {\n    \"posX\": b.data.pX + 12\n  }\n\n  const off = {\n    \"posX\": b.data.pX + 30\n  }\n\n\n  var focusState = off\n\n  useEffect(() => {\n    console.log(focus)\n    if(focus == 1){\n      focusState=on\n    } else if (focus == 0){\n      focusState=off\n    }\n\n\n  const label = (\n    <text\n      className={'plot-text'}\n      key={'ingredient' + b + j}\n      x={ focusState.posX }\n      y={ b.data.pY + 1}\n      style={{textTransform:'capitalize'}}\n      fill={`${color.blue2}`}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      fontWeight={dim.i.font.weight}\n      alignmentBaseline={'middle'}\n      >\n      {/* { b.data.stepOrder} */}\n\n      { b.data.ingredient}\n\n    </text>\n\n  )\n  const dot = (\n    <circle\n      key={'ingredient' + b + j}\n      r={4}\n      cx={ b.data.pX }\n      cy={ b.data.pY }\n      fill={`${color.blue1}`}\n      >\n    </circle>\n\n  )\n\n  });\n\n\n  return (\n    <g\n      // ref={ focusRef }\n      onClick={ () => setFocus(1-focus) }\n      >\n      {label}\n      {dot}\n    </g>\n\n  );\n};\n\nexport default IngredientNode;\n"]},"metadata":{},"sourceType":"module"}