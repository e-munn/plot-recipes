{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\n\nconst IngredientNode = ({\n  root,\n  color,\n  dim,\n  nodePosX,\n  nodePosY,\n  a,\n  b,\n  j,\n  focusG,\n  setFocusG\n}) => {\n  _s();\n\n  const focusRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      className: 'name',\n      x: nodePosX(b) + dim.ingredient.nodeWidth,\n      y: nodePosY(b),\n      style: {\n        textTransform: 'capitalize'\n      },\n      fontWeight: 500,\n      fill: `${color.blue2}`,\n      textAnchor: 'start',\n      fontSize: dim.ingredient.textSize,\n      alignmentBaseline: 'bottom',\n      children: b.data.ingredient\n    }, 'ingredient' + b + j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      className: 'amount',\n      x: nodePosX(b) + dim.ingredient.nodeWidth,\n      y: nodePosY(b) + dim.ingredient.amountOffset,\n      fill: `${color.blue2}`,\n      textAnchor: 'start',\n      fontWeight: 300,\n      fontSize: dim.ingredient.amountSize,\n      alignmentBaseline: 'middle',\n      children: b.data.amount\n    }, 'amount' + b + j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      id: 'curve' + j,\n      stroke: b.data.actions.length !== 0 ? `${color.orange1}` : `${color.gray1}`,\n      strokeWidth: dim.ingredient.nodeStroke,\n      fill: 'none' // strokeLinecap={'round'}\n      ,\n      d: linkHorizontal()({\n        source: [nodePosX(b) - dim.ingredient.nodeWidth * .5 - 1, nodePosY(b)],\n        target: [b.parent.posX + dim.vessel.shape.width * .5 + 1, nodePosY(b) + 30]\n      })\n    }, j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      width: dim.ingredient.nodeWidth,\n      height: dim.ingredient.nodeHeight,\n      x: nodePosX(b),\n      y: nodePosY(b),\n      fill: 'transparent',\n      stroke: `${color.blue1}`,\n      strokeWidth: dim.ingredient.strokeWidth,\n      transform: `translate(${-.5 * dim.ingredient.nodeWidth}, ${-.5 * dim.ingredient.nodeHeight})`,\n      rx: dim.ingredient.radius\n    }, 'node' + b + j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IngredientNode, \"gzGuMUYpB5kJ/Pn56lwTC2PPJ2A=\");\n\n_c = IngredientNode;\nexport default IngredientNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientNode\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/ingredients/ingredientNode.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","easeSin","easeCubicIn","easeCubicOut","transition","IngredientNode","root","color","dim","nodePosX","nodePosY","a","b","j","focusG","setFocusG","focusRef","ingredient","nodeWidth","textTransform","blue2","textSize","data","amountOffset","amountSize","amount","actions","length","orange1","gray1","nodeStroke","source","target","parent","posX","vessel","shape","width","nodeHeight","blue1","strokeWidth","radius"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\n\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\n\n\nconst IngredientNode = ({ root, color, dim, nodePosX, nodePosY, a, b, j, focusG, setFocusG }) => {\n\n  const focusRef = useRef();\n\n  return (\n    <g\n      >\n      <text\n        className={'name'}\n        key={'ingredient' + b + j}\n        x={ nodePosX(b) + dim.ingredient.nodeWidth }\n        y={ nodePosY(b) }\n        style={{textTransform:'capitalize'}}\n        fontWeight={500}\n        fill={`${color.blue2}`}\n        textAnchor={'start'}\n        fontSize={dim.ingredient.textSize}\n        alignmentBaseline={'bottom'}\n        >\n        { b.data.ingredient}\n      </text>\n      <text\n        className={'amount'}\n        key={'amount' + b + j}\n        x={ nodePosX(b) + dim.ingredient.nodeWidth }\n        y={ nodePosY(b) + dim.ingredient.amountOffset}\n        fill={`${color.blue2}`}\n        textAnchor={'start'}\n        fontWeight={300}\n        fontSize={ dim.ingredient.amountSize }\n        alignmentBaseline={'middle'}\n        >\n        {b.data.amount}\n      </text>\n      <path\n        key={j}\n        id={'curve' + j}\n        stroke={ b.data.actions.length !== 0 ? `${ color.orange1 }` : `${ color.gray1 }`}\n        strokeWidth={dim.ingredient.nodeStroke}\n        fill={'none'}\n        // strokeLinecap={'round'}\n        d={\n          linkHorizontal()({\n            source: [nodePosX(b) - (dim.ingredient.nodeWidth*.5) - 1, nodePosY(b)],\n            target: [b.parent.posX + dim.vessel.shape.width*.5 + 1, nodePosY(b) + 30]\n          })\n          }\n        >\n      </path>\n      <rect\n        key={'node' + b + j}\n        width={dim.ingredient.nodeWidth}\n        height={dim.ingredient.nodeHeight}\n        x={ nodePosX(b) }\n        y={ nodePosY(b) }\n        fill={ 'transparent' }\n        stroke={  `${color.blue1}` }\n        strokeWidth={dim.ingredient.strokeWidth}\n        transform={`translate(${-.5 * dim.ingredient.nodeWidth}, ${-.5 * dim.ingredient.nodeHeight})`}\n        rx={dim.ingredient.radius}\n        >\n      </rect>\n\n    </g>\n\n  );\n};\n\nexport default IngredientNode;\n"]},"metadata":{},"sourceType":"module"}