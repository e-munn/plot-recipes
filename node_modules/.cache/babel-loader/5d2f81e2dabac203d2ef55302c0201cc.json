{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  // const canvasWidth = width - 2*dim.m.padding;\n  // const canvasHeight = height - 2*dim.m.padding;\n  var root = hierarchy(recipe.recipe[0]);\n  const testTree = tree().size([300, 600])(root);\n\n  const desc = a => a.descendants();\n\n  root.each((d, i) => {\n    d.order = i;\n  });\n  var iorderCount = 0;\n  root.eachAfter(function (d) {\n    if ('vessel' in d.data) {\n      iorderCount = 0;\n    } else {\n      d.data.iorder = iorderCount;\n      iorderCount += 1;\n    }\n  });\n  root.count();\n  root.each(d => {\n    d.vesselSibs = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n  root.each(function (d, i) {\n    if (d.depth == 0) {\n      d.pHeight = 40;\n    } else if ('vessel' in d.data) {\n      d.numTasks = d.children.filter(a => !(\"vessel\" in a.data)).length;\n      d.numShove = d.parent.children.filter(a => \"vessel\" in a.data).filter(a => d.data.vorder > a.data.vorder).length;\n    }\n  });\n  var allVessels = root.descendants().filter(d => 'vessel' in d.data);\n  root.each(function (d) {\n    if (d.depth == 0) {\n      d.posY = 1000;\n      d.posX = 10;\n    } else if ('vessel' in d.data) {\n      d.posX = d.parent.posX + d.numShove * dim.v.shove;\n      var posYAdd = [];\n      allVessels.forEach(a => d.data.vorder > a.data.vorder ? posYAdd.push(dim.v.marginBottom + (a.numTasks + 1) * dim.m.taskH) : null);\n      d.posY = sum(posYAdd);\n    } else {\n      d.posY = d.parent.posY + (d.data.iorder + 1) * dim.m.taskH;\n      d.posX = d.parent.posX;\n    }\n  }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = [];\n  allVessels.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessel, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this));\n    const ingredientNodes = [];\n    a.children.forEach((b, j) => {\n      'ingredient' in b.data ? ingredientNodes.push( /*#__PURE__*/_jsxDEV(IngredientNode, {\n        color: color,\n        dim: dim,\n        a: a,\n        b: b,\n        j: j\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)) : console.log('');\n    });\n    const actionNodes = [];\n    a.children.forEach((b, j) => {\n      if ('action' in b.data) {\n        actionNodes.push( /*#__PURE__*/_jsxDEV(Action, {\n          color: color,\n          dim: dim,\n          a: a,\n          b: b,\n          j: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this));\n      }\n    });\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vessel\n    }, void 0, false));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    transform: `translate(${0}, ${50})`,\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","each","tree","scaleLinear","Vessel","IngredientNode","Action","Plot","recipe","width","height","color","dim","root","testTree","size","desc","a","descendants","d","i","order","iorderCount","eachAfter","data","iorder","count","vesselSibs","parent","children","filter","depth","pHeight","numTasks","length","numShove","vorder","allVessels","posY","posX","v","shove","posYAdd","forEach","push","marginBottom","m","taskH","flows","vessel","ingredientNodes","b","j","console","log","actionNodes"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, each, tree } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  // const canvasWidth = width - 2*dim.m.padding;\n  // const canvasHeight = height - 2*dim.m.padding;\n\n  var root = hierarchy(recipe.recipe[0]);\n\n  const testTree = tree().size([300, 600])(root)\n\n  const desc = (a) => a.descendants()\n  root.each((d, i) => { d.order = i })\n\n  var iorderCount = 0\n  root.eachAfter(\n    function(d){\n      if ('vessel' in d.data) {\n        iorderCount = 0\n      } else {\n        d.data.iorder = iorderCount\n        iorderCount += 1\n      }\n    }\n  )\n\n  root.count()\n  root.each(d => { d.vesselSibs = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n  root.each(\n    function(d, i){\n      if (d.depth == 0){\n        d.pHeight = 40\n      }\n      else if ('vessel' in d.data){\n        d.numTasks = d.children.filter(a => !(\"vessel\" in a.data)).length\n        d.numShove = d.parent.children.filter(a => (\"vessel\" in a.data)).filter(a => (d.data.vorder > a.data.vorder)).length\n      }\n    }\n  )\n\n  var allVessels = root.descendants().filter(d =>'vessel' in d.data)\n\n\n  root.each(function(d){\n    if (d.depth == 0){\n      d.posY = 1000\n      d.posX = 10\n    }\n    else if ('vessel' in d.data) {\n      d.posX = d.parent.posX + (d.numShove * dim.v.shove)\n      var posYAdd = []\n      allVessels.forEach(a => (d.data.vorder > a.data.vorder) ? posYAdd.push(dim.v.marginBottom + ((a.numTasks+1) * dim.m.taskH) ) : null)\n      d.posY = sum(posYAdd)\n    } else {\n      d.posY = d.parent.posY + ((d.data.iorder + 1) * dim.m.taskH)\n      d.posX = d.parent.posX\n    }\n  })\n\n\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // descends = descends.filter(d => (d.depth !== 0))\n\n  var flows = []\n\n  allVessels.forEach((a,i) => {\n\n    const vessel = []\n    vessel.push(\n      <Vessel\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    const ingredientNodes = []\n\n    a.children.forEach((b,j) => {\n      ('ingredient' in b.data) ?\n        ingredientNodes.push(\n          <IngredientNode\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n          />\n        ) : console.log('')\n      }\n    )\n\n    const actionNodes = []\n\n    a.children.forEach((b,j) => {\n        if ('action' in b.data) {\n          actionNodes.push(\n            <Action\n              color={color}\n              dim={dim}\n              a={a}\n              b={b}\n              j={j}\n            />\n          )\n        }\n      }\n    )\n\n    flows.push(\n      <>\n        {/* {ingredientNodes} */}\n        {/* {actionNodes} */}\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g\n        transform={`translate(${0}, ${50})`}\n        >\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}