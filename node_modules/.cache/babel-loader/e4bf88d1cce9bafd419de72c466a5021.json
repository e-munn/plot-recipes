{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js\";\nimport React, { useRef } from 'react';\nimport { select, max, sum, hierarchy, linkHorizontal } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\nconst Plot = ({\n  recipe,\n  width,\n  height,\n  color,\n  dim\n}) => {\n  const canvasWidth = width - 2 * dim.main.padding;\n  const canvasHeight = height - 2 * dim.main.padding;\n  var root = hierarchy(recipe);\n\n  const desc = a => a.descendants();\n\n  root = root.each(d => {\n    d.vesselSiblings = d.parent ? d.parent.children.filter(a => \"vessel\" in a.data) : 'none';\n  });\n\n  const splits = a => {\n    var sp = a.split(' ');\n    return sp.length;\n  };\n\n  root = root.each(d => d.depth == 1 ? d.posHeight = dim.serve.height : 'vessel' in d.data ? d.posHeight = 100 : null);\n\n  const nodePosX = a => {\n    return a.posX + (dim.ingredient.marginLeft + a.data.order * dim.ingredient.offset);\n  };\n\n  const nodePosY = a => {\n    var labels = a.parent.data.vessel.split(' ');\n    var labelLength = labels.length;\n    return a.posY;\n  };\n\n  root = root.each(function (d) {\n    if (d.depth == 1) {\n      var posYAdd = [];\n      var descend = desc(d);\n      descend.shift();\n      descend.forEach(a => 'vessel' in d.data ? posYAdd.push(a.posHeight) : null);\n      d.posY = sum(posYAdd);\n    } else if ('vessel' in d.data) {\n      var posYAdd = [];\n      var descend = desc(d);\n      descend.shift();\n      descend.forEach(a => 'vessel' in a.data ? posYAdd.push(a.posHeight) : null);\n      d.vesselSiblings.forEach(b => b.data.order < d.data.order ? posYAdd.push(b.posHeight) : null);\n      posYAdd.push(posYAdd.length * dim.vessel.shape.marginHeight);\n      d.posY = sum(posYAdd);\n      d.posX = dim.vessel.shape.width * .5 + (posYAdd.length - 1) * (dim.vessel.shape.width + dim.vessel.shape.marginWidth * 2);\n    } else if ('ingredient' in d.data) {\n      d.posY = d.parent.posY;\n      d.posX = d.parent.posX;\n    }\n  }); //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  var descends = root.descendants().filter(d => 'vessel' in d.data).sort((a, b) => a.data.order - b.data.order);\n  descends = descends.filter(d => d.depth !== 1);\n  var flows = [];\n  descends.forEach((a, i) => {\n    const vessel = [];\n    vessel.push( /*#__PURE__*/_jsxDEV(Vessels, {\n      a: a,\n      i: i,\n      dim: dim,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this));\n    flows.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vessel\n    }, void 0, false));\n  });\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: flows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Plot;\nexport default Plot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"sources":["/Users/elimunn/Desktop/plot-recipes/site/src/components/plot/plot.js"],"names":["React","useRef","select","max","sum","hierarchy","linkHorizontal","scaleLinear","Vessels","Plot","recipe","width","height","color","dim","canvasWidth","main","padding","canvasHeight","root","desc","a","descendants","each","d","vesselSiblings","parent","children","filter","data","splits","sp","split","length","depth","posHeight","serve","nodePosX","posX","ingredient","marginLeft","order","offset","nodePosY","labels","vessel","labelLength","posY","posYAdd","descend","shift","forEach","push","b","shape","marginHeight","marginWidth","descends","sort","flows","i"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal } from 'd3';\nimport { scaleLinear } from 'd3-scale';\nimport Vessels from './vessels/vessels.js';\n\n\n\nconst Plot = ({recipe, width, height, color, dim}) => {\n\n  const canvasWidth = width - 2*dim.main.padding;\n  const canvasHeight = height - 2*dim.main.padding;\n\n\n  var root = hierarchy(recipe);\n\n  const desc = (a) => a.descendants()\n\n  root = root.each(d => { d.vesselSiblings = (d.parent ? d.parent.children.filter(a => (\"vessel\" in a.data)) : 'none' )})\n\n  const splits = (a) => {\n    var sp = a.split(' ')\n    return sp.length\n  }\n\n  root = root.each(d => (d.depth == 1) ? d.posHeight = dim.serve.height :\n  ('vessel' in d.data) ?\n    d.posHeight = 100\n  : null)\n\n\n  const nodePosX = (a) => {\n    return a.posX + (dim.ingredient.marginLeft + a.data.order * dim.ingredient.offset)\n  }\n\n  const nodePosY = (a) => {\n    var labels = a.parent.data.vessel.split(' ');\n    var labelLength = labels.length\n    return a.posY\n  }\n\n\n  root = root.each(function(d){\n    if (d.depth == 1){\n      var posYAdd = []\n      var descend = desc(d)\n      descend.shift()\n      descend.forEach(a => ('vessel' in d.data) ? posYAdd.push(a.posHeight) : null)\n      d.posY = sum(posYAdd)\n    }\n    else if ('vessel' in d.data) {\n      var posYAdd = []\n      var descend = desc(d)\n      descend.shift()\n      descend.forEach(a => ('vessel' in a.data) ? posYAdd.push(a.posHeight) : null)\n      d.vesselSiblings.forEach(b => (b.data.order < d.data.order) ? posYAdd.push(b.posHeight) : null)\n      posYAdd.push((posYAdd.length)*(dim.vessel.shape.marginHeight))\n      d.posY = sum(posYAdd)\n      d.posX = (dim.vessel.shape.width*.5) + ((posYAdd.length-1) * (dim.vessel.shape.width + (dim.vessel.shape.marginWidth*2)))\n    } else if ('ingredient' in d.data) {\n      d.posY = d.parent.posY\n      d.posX = d.parent.posX\n    }\n  })\n\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  var descends = root.descendants().filter(d =>'vessel' in d.data).sort((a, b) => a.data.order - b.data.order )\n  descends = descends.filter(d => (d.depth !== 1))\n\n\n\n  var flows = []\n\n  descends.forEach((a,i) => {\n    const vessel = []\n    vessel.push(\n      <Vessels\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    flows.push(\n      <>\n        {vessel}\n      </>\n    )\n  })\n\n\n  return (\n      <g>\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}