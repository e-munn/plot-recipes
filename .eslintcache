[{"/Users/elimunn/Desktop/plot-recipes/src/index.js":"1","/Users/elimunn/Desktop/plot-recipes/src/App.js":"2","/Users/elimunn/Desktop/plot-recipes/src/reportWebVitals.js":"3","/Users/elimunn/Desktop/plot-recipes/src/components/home.js":"4","/Users/elimunn/Desktop/plot-recipes/src/components/plot/plotMaster.js":"5","/Users/elimunn/Desktop/plot-recipes/src/components/card.js":"6","/Users/elimunn/Desktop/plot-recipes/src/components/plot/clean.js":"7","/Users/elimunn/Desktop/plot-recipes/src/components/plot/plot.js":"8","/Users/elimunn/Desktop/plot-recipes/src/components/plot/vessels/vessels.js":"9","/Users/elimunn/Desktop/plot-recipes/src/components/plot/actions/actions.js":"10","/Users/elimunn/Desktop/plot-recipes/src/components/plot/ingredients/ingredientNode.js":"11","/Users/elimunn/Desktop/plot-recipes/src/components/plot/plate/plate.js":"12"},{"size":478,"mtime":1614317892163,"results":"13","hashOfConfig":"14"},{"size":705,"mtime":1614315435460,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1614102428788,"results":"16","hashOfConfig":"14"},{"size":872,"mtime":1614374133813,"results":"17","hashOfConfig":"14"},{"size":1175,"mtime":1614557326087,"results":"18","hashOfConfig":"14"},{"size":1263,"mtime":1614468273448,"results":"19","hashOfConfig":"14"},{"size":3160,"mtime":1614438738507,"results":"20","hashOfConfig":"14"},{"size":5340,"mtime":1614741896486,"results":"21","hashOfConfig":"14"},{"size":2091,"mtime":1614742557244,"results":"22","hashOfConfig":"14"},{"size":2701,"mtime":1614560713226,"results":"23","hashOfConfig":"14"},{"size":3307,"mtime":1614730359443,"results":"24","hashOfConfig":"14"},{"size":979,"mtime":1614740546698,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1j4ou34",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/elimunn/Desktop/plot-recipes/src/index.js",[],["58","59"],"/Users/elimunn/Desktop/plot-recipes/src/App.js",["60"],"import React from \"react\";\nimport './App.css';\nimport PlotMaster from './components/plot/plotMaster.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/home.js';\nimport recipe_master from './media/recipes/recipe_master.json';\n\n\n\nconst App = props => {\n\n  const recipes = recipe_master.map(d => (\n      <Route path={ '/' + d.path}>\n        <PlotMaster\n          recipe={d}\n        />\n      </Route>\n    )\n  )\n\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path={ '/'}>\n            <Home/>\n          </Route>\n          {recipes}\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/elimunn/Desktop/plot-recipes/src/reportWebVitals.js",[],"/Users/elimunn/Desktop/plot-recipes/src/components/home.js",["61","62","63"],"import React, { useState } from \"react\";\n\nimport {\n BrowserRouter as Router,\n Link\n} from \"react-router-dom\";\nimport recipe_master from '../media/recipes/recipe_master.json';\nimport Card from './card.js';\nimport '../css/cards.css'\n\nconst Home = () => {\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n  // const pathify = (a) => {\n  //   a = a.toLowerCase();\n  //   a = a.replaceAll(' ', '-')\n  //   a = a.replaceAll('-', '-')\n  //   return a\n  // }\n\n  return (\n    <>\n      <div\n        className={'cardbox'}\n        >\n        {\n          recipe_master.map((d, i) =>\n                <Link\n                  to={'/' + d.path}\n                  >\n                    <Card\n                      d={d}\n                      i={i}\n                    />\n\n                </Link>\n            )\n          }\n      </div>\n    </>\n\n  )\n}\n\nexport default Home\n","/Users/elimunn/Desktop/plot-recipes/src/components/plot/plotMaster.js",["64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { useState, useEffect, useRef } from \"react\";\nimport '../../App.css';\nimport Plot from './plot.js';\nimport { select, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport arrowup from '../../media/ui-symbols/arrowup.svg';\nimport arrowdown from '../../media/ui-symbols/arrowdown.svg';\nimport cleanRecipe from './clean.js';\n\n\nconst PlotMaster = ({ recipe }) => {\n\n  var recipeAndHeight = cleanRecipe(recipe)\n  recipe = recipeAndHeight[0]\n  var svgHeight = recipeAndHeight[1] + 300\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight)\n\n\n\n\n  return (\n    <div>\n      <svg width={windowWidth} height={svgHeight}>\n        {/* <g>\n          <image\n            href={arrowup}\n            width={50}\n            x={windowWidth - 100}\n            y={0}\n\n            >\n          </image>\n          <image\n            href={arrowdown}\n            width={50}\n            x={windowWidth - 100}\n            y={100}\n            >\n          </image>\n        </g> */}\n        <Plot\n          recipe={recipe}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default PlotMaster;\n","/Users/elimunn/Desktop/plot-recipes/src/components/card.js",["76","77","78","79","80","81"],"import React, { useState } from \"react\";\nimport { scaleOrdinal } from 'd3'\n\nimport '../css/cards.css'\n\nimport creamy from '../media/images/creamy-white-bean-soup-with-spicy-paprika-oil.jpg'\nimport hearty from '../media/images/hearty-whole-wheat-pasta-with-brussels-sprouts-cheese-and-potato.jpg'\nimport sweet from '../media/images/sweet-potatoes-with-cilantro-chiles-sauce.jpg'\n\n\nconst Card = ({d, i}) => {\n\n  const imageMap = scaleOrdinal()\n    .domain(['creamy-white-bean-soup-with-spicy-paprika-oil', 'hearty-whole-wheat-pasta-with-brussels-sprouts-cheese-and-potato', 'sweet-potatoes-with-cilantro-chiles-sauce'])\n    .range([creamy,hearty,sweet])\n\n  console.log(d)\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight)\n\n  var url = '../media/images/' + d.path + '.jpg'\n  // var url = '../media/images/creamy-white-bean-soup-with-spicy-paprika-oil.jpg'\n\n\n  return (\n    <div\n      className={'card'}\n      style={{\n        // backgroundImage: `url(${imageMap(d.path)})`\n      }}\n      >\n      <div className={'card-cover'}>\n          <div\n          className={'card-title'}\n          >\n            {d.name}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","/Users/elimunn/Desktop/plot-recipes/src/components/plot/clean.js",["82","83","84","85","86","87","88"],"import React, { useState } from \"react\";\nimport { min, sum, hierarchy } from 'd3';\nimport dim from '../../media/theme/dim.json';\n\nexport default function cleanRecipe(recipe){\n\n  var root = hierarchy(recipe.recipe[0]);\n  root.each(\n    function(d, i){\n      if (d.depth == 0){\n      }\n      else if ('vessel' in d.data){\n        d.actions = d.children.filter(a => (\"action\" in a.data)).map(b => b.data.action_amt)\n        d.numIng = d.children.filter(a => (\"ingredient\" in a.data)).length\n        d.numShove = d.parent.children.filter(a => (\"vessel\" in a.data)).filter(a => (d.data.vorder > a.data.vorder)).length\n      }\n    }\n  )\n\n  var pY = 0\n  var pH = 0\n  var pYMax = 0\n  root.each(\n    function(d){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          pY += pH\n          d.data.pH = pH\n          d.data.pY = pY\n        } else {\n          pH = dim.v.padding1 + dim.v.padding2\n          pH += (sum(d.actions) * dim.a.amtScale) + ((d.numIng + d.actions.length) * dim.i.height)\n          pY = d.parent.data.pY + dim.v.gap\n          pY += pH\n          d.data.pY = pY\n          d.data.pH = pH\n          if ((pY) > pYMax){\n            pYMax = pY\n          }\n        }\n      }\n    }\n  )\n\n  pY = 0\n  pH = 0\n  var taskCount = 0\n  root.each(\n    function(d, i){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          pY = pYMax\n          pY -= pH\n          d.data.pH = pH\n          d.data.pY = pYMax\n        } else {\n\n          pH = dim.v.padding1 + dim.v.padding2\n          pH += (sum(d.actions) * dim.a.amtScale) + ((d.numIng + d.actions.length) * dim.i.height)\n          pY = d.parent.data.pY - dim.v.gap\n          pY -= pH\n          d.data.pY = pY\n          d.data.pH = pH\n\n        }\n      }\n    }\n  )\n\n  pY = 0\n  pH = 0\n  var taskCount = 0\n  root.eachAfter(\n    function(d, i){\n      if ('vessel' in d.data) {\n        taskCount = 0\n       }\n      else if ('action' in d.data) {\n        d.data.stepOrder=i\n        taskCount += dim.i.height\n        pY = d.parent.data.pY + dim.v.padding1\n        d.data.pY = pY + taskCount\n        taskCount += d.data.action_amt * dim.a.amtScale\n      } else if ('ingredient' in d.data) {\n        d.data.stepOrder=i\n        pY = d.parent.data.pY + dim.v.padding1\n        taskCount += dim.i.height\n        d.data.pY = pY + taskCount\n      }\n    }\n  )\n\n  const getLeafY = (a) => {\n    var leaves = a.leaves()\n    leaves = leaves.map(b => b.data.pY)\n    return min(leaves)\n  }\n\n  var pX = dim.m.margin.left\n  root.each(\n    function(d, i){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          d.data.pX = pX\n        } else {\n          d.data.stepOrder=i\n\n          pX = d.parent.data.pX\n          var vesselSibs = d.parent.children.filter(a => (\"vessel\" in a.data))\n          var numLess = vesselSibs.filter(b => (getLeafY(b) < getLeafY(d)) ).length\n          pX += numLess * dim.v.shove\n          d.data.pX = pX\n        }\n      } else {\n        if ('action' in d.data){\n          pX = d.parent.data.pX\n          d.data.pX = pX\n        } else if ('ingredient' in d.data){\n          pX = d.parent.data.pX\n          d.data.pX = pX\n        }\n      }\n    })\n\n    return [root, pYMax]\n\n};\n","/Users/elimunn/Desktop/plot-recipes/src/components/plot/plot.js",["89","90","91","92","93","94","95","96","97","98","99","100","101"],"/Users/elimunn/Desktop/plot-recipes/src/components/plot/vessels/vessels.js",["102","103"],"/Users/elimunn/Desktop/plot-recipes/src/components/plot/actions/actions.js",["104","105","106","107","108","109","110","111","112","113","114"],"import React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\n\nimport '../../../css/plot.css'\n\n\nconst Action = ({ root, color, dim, a, b, j, focus, setFocus}) => {\n\n  const [done, setDone] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX - dim.a.width/2 + 20,\n      \"dotColor\": color.orange2,\n      \"posXTransform\": 'translate(18px, 0px)'\n    },\n    {\n      \"textposX\": b.data.pX + 10,\n      \"dotposX\":  b.data.pX - dim.a.width/2,\n      \"dotColor\": color.orange1,\n      \"posXTransform\": 'translate(0px, 0px)'\n    }\n  ]\n\n  const focusRef = useRef();\n\n  const label = (\n    <text\n      className={'plot-animation-fill plot-text weight-2'}\n      key={'action' + b + j}\n      x={ b.data.pX + 10 }\n      y={ b.data.pY + 5 }\n      fill={`${statesIng[done].dotColor}`}\n      textAnchor={'start'}\n      fontSize={dim.a.font.size}\n      fontWeight={dim.a.font.weight}\n      alignmentBaseline={'middle'}\n\n      // ref={ focusRef }\n      // onClick={ () => setFocus([focusRef.current, b]) }\n      >\n      {/* { b.data.stepOrder} */}\n      { b.data.action}\n\n    </text>\n  )\n\n  const aHeight = b.data.action_amt * dim.a.amtScale\n\n  const shape = (\n    <rect\n      className={'plot-animation-fill'}\n      key={'ashape' + b + j}\n      x={ b.data.pX - dim.a.width/2 }\n      y={ b.data.pY - dim.a.width/2 }\n      width={ dim.a.width }\n      height={ aHeight + dim.a.width }\n      fill={`${statesIng[done].dotColor}`}\n      rx={dim.a.width/2}\n      >\n    </rect>\n  )\n\n  // const dot = (\n  //   <circle\n  //     className={'name'}\n  //     key={'ingredient' + b + j}\n  //     r={4}\n  //     cx={ b.data.pX + 20}\n  //     cy={ b.data.pY }\n  //     fill={`${color.orange3}`}\n  //     >\n  //   </circle>\n  //\n  // )\n\n\n  const swipe = (\n    <rect\n      key={'aswipe' + a + b + j}\n      x={ b.data.pX - 20 }\n      y={ b.data.pY - dim.i.font.size/2 - 2}\n      width={ 110 }\n      height={ aHeight + dim.a.width + 4}\n      fill={ 'transparent' }\n      // fill={ 'orange' }\n      // opacity={ .3 }\n      ref={ focusRef }\n      onClick={ () => setFocus([focusRef.current, b]) }\n      >\n    </rect>\n  )\n\n\n\n\n    const handlers = useSwipeable({\n      onSwipedLeft: () => setDone(1),\n      onSwipedRight: () => setDone(0),\n    });\n\n  return (\n    <g\n      className={'plot-animation-move'}\n      className={'action'}\n      style={{transform: `${ statesIng[done].posXTransform }`}}\n      {...handlers}\n\n      >\n      {shape}\n      {label}\n      {swipe}\n\n      {/* {dot} */}\n\n    </g>\n\n  );\n};\n\nexport default Action;\n","/Users/elimunn/Desktop/plot-recipes/src/components/plot/ingredients/ingredientNode.js",["115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\nimport '../../../css/plot.css'\n\n\n\nconst IngredientNode = ({ root, color, dim, a, b, j, focus, setFocus }) => {\n\n\n  const [done, setDone] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX + 20,\n      \"dotColor\": color.blue2,\n      \"posXTransform\": 'translate(18px, 0px)'\n    },\n    {\n      \"textposX\": b.data.pX + 10,\n      \"dotposX\": b.data.pX,\n      \"dotColor\": color.blue1,\n      \"posXTransform\": 'translate(0px, 0px)'\n    }\n  ]\n\n\n  var texzt = b.data.ingredient + '<tspan>' + b.data.ing_amt + '</tspan>'\n  const label = (\n    <text\n      className={'plot-animation-fill plot-text weight-2'}\n      key={'ilabel' + a + b + j}\n      x={ b.data.pX + 10 }\n      y={ b.data.pY + 1 }\n      // style={{filter:'url(#blur)'}}\n      fill={`${statesIng[done].dotColor}`}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      alignmentBaseline={'middle'}\n      >\n      {/* { b.data.stepOrder} */}\n\n      { b.data.ingredient}\n      <tspan\n        className={'plot-text weight-3'}\n        alignmentBaseline={'middle'}\n        fontSize={dim.i.font.amountSize}\n        fill={`${statesIng[done].dotColor}`}\n        >\n        {' - ' + b.data.ing_amt + ' ' + b.data.ing_unit}\n      </tspan>\n\n\n    </text>\n  )\n\n\n\n  // var length = label.textLength\n  //\n  //   const labelAmt = (\n  //     <text\n  //       className={'plot-text'}\n  //       className={'plot-animation-fill'}\n  //       key={'ilabel' + a + b + j}\n  //       x={ b.data.pX + 10 }\n  //       y={ b.data.pY + dim.i.font.size }\n  //       // style={{textTransform:'capitalize'}}\n  //       // style={{filter:'url(#blur)'}}\n  //       fill={`${statesIng[done].dotColor}`}\n  //       textAnchor={'start'}\n  //       fontSize={dim.i.font.amountSize}\n  //       fontWeight={dim.i.font.weight}\n  //       alignmentBaseline={'middle'}\n  //       >\n  //       {b.data.ing_amt + ' <tspan> ' + b.data.ing_amt + ' </tspan> ' }\n  //     </text>\n  //   )\n\n  const dot = (\n    <circle\n      className={'plot-animation-fill'}\n      key={'idot' + a + b + j}\n      r={dim.i.radius }\n      cx={ b.data.pX }\n      cy={ b.data.pY }\n      fill={`${statesIng[done].dotColor}`}\n      // fill={'none'}\n\n      // stroke={`${statesIng[done].dotColor}`}\n      // strokeWidth={2}\n\n\n      >\n    </circle>\n\n  )\n  const focusRef = useRef();\n\n  const swipe = (\n    <rect\n      key={'iswipe' + a + b + j}\n      x={ b.data.pX - 20 }\n      y={ b.data.pY - dim.i.font.size/2 - 5}\n      width={ 110 }\n      height={ dim.i.font.size + 10}\n      fill={ 'transparent' }\n      // fill={ 'blue' }\n      // opacity={ .3 }\n      ref={ focusRef }\n      onClick={ () => setFocus([focusRef.current, b]) }\n      >\n    </rect>\n  )\n\n\n\n\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setDone(1),\n    onSwipedRight: () => setDone(0)\n  });\n\n\n  return (\n    <g\n      className={'plot-animation-move'}\n      className={'ingredient'}\n      style={{transform: `${ statesIng[done].posXTransform }`}}\n      {...handlers}\n      >\n      {label}\n      {dot}\n      {swipe}\n\n    </g>\n\n  );\n};\n\nexport default IngredientNode;\n","/Users/elimunn/Desktop/plot-recipes/src/components/plot/plate/plate.js",["127","128","129","130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":8,"column":3,"nodeType":"137","messageId":"138","endLine":8,"endColumn":7},{"ruleId":"135","severity":1,"message":"139","line":4,"column":19,"nodeType":"137","messageId":"138","endLine":4,"endColumn":25},{"ruleId":"135","severity":1,"message":"140","line":13,"column":10,"nodeType":"137","messageId":"138","endLine":13,"endColumn":21},{"ruleId":"135","severity":1,"message":"141","line":13,"column":23,"nodeType":"137","messageId":"138","endLine":13,"endColumn":37},{"ruleId":"135","severity":1,"message":"142","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"143","line":1,"column":38,"nodeType":"137","messageId":"138","endLine":1,"endColumn":44},{"ruleId":"135","severity":1,"message":"144","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":16},{"ruleId":"135","severity":1,"message":"145","line":4,"column":18,"nodeType":"137","messageId":"138","endLine":4,"endColumn":25},{"ruleId":"135","severity":1,"message":"146","line":4,"column":27,"nodeType":"137","messageId":"138","endLine":4,"endColumn":38},{"ruleId":"135","severity":1,"message":"147","line":4,"column":40,"nodeType":"137","messageId":"138","endLine":4,"endColumn":52},{"ruleId":"135","severity":1,"message":"148","line":4,"column":54,"nodeType":"137","messageId":"138","endLine":4,"endColumn":64},{"ruleId":"135","severity":1,"message":"149","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":15},{"ruleId":"135","severity":1,"message":"150","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":17},{"ruleId":"135","severity":1,"message":"141","line":16,"column":23,"nodeType":"137","messageId":"138","endLine":16,"endColumn":37},{"ruleId":"135","severity":1,"message":"151","line":17,"column":10,"nodeType":"137","messageId":"138","endLine":17,"endColumn":22},{"ruleId":"135","severity":1,"message":"152","line":17,"column":24,"nodeType":"137","messageId":"138","endLine":17,"endColumn":39},{"ruleId":"135","severity":1,"message":"153","line":13,"column":9,"nodeType":"137","messageId":"138","endLine":13,"endColumn":17},{"ruleId":"135","severity":1,"message":"140","line":19,"column":10,"nodeType":"137","messageId":"138","endLine":19,"endColumn":21},{"ruleId":"135","severity":1,"message":"141","line":19,"column":23,"nodeType":"137","messageId":"138","endLine":19,"endColumn":37},{"ruleId":"135","severity":1,"message":"151","line":20,"column":10,"nodeType":"137","messageId":"138","endLine":20,"endColumn":22},{"ruleId":"135","severity":1,"message":"152","line":20,"column":24,"nodeType":"137","messageId":"138","endLine":20,"endColumn":39},{"ruleId":"135","severity":1,"message":"154","line":22,"column":7,"nodeType":"137","messageId":"138","endLine":22,"endColumn":10},{"ruleId":"135","severity":1,"message":"155","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"135","severity":1,"message":"156","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":10,"column":19,"nodeType":"159","messageId":"160","endLine":10,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":26,"column":21,"nodeType":"159","messageId":"160","endLine":26,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":51,"column":21,"nodeType":"159","messageId":"160","endLine":51,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":72,"column":7,"nodeType":"137","messageId":"163","endLine":72,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":103,"column":21,"nodeType":"159","messageId":"160","endLine":103,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":20,"column":16,"nodeType":"159","messageId":"160","endLine":20,"endColumn":18},{"ruleId":"135","severity":1,"message":"164","line":25,"column":13,"nodeType":"137","messageId":"138","endLine":25,"endColumn":15},{"ruleId":"135","severity":1,"message":"165","line":28,"column":13,"nodeType":"137","messageId":"138","endLine":28,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":41,"column":30,"nodeType":"159","messageId":"160","endLine":41,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":48,"column":37,"nodeType":"159","messageId":"160","endLine":48,"endColumn":39},{"ruleId":"161","severity":1,"message":"166","line":49,"column":15,"nodeType":"137","messageId":"163","endLine":49,"endColumn":17},{"ruleId":"161","severity":1,"message":"167","line":50,"column":15,"nodeType":"137","messageId":"163","endLine":50,"endColumn":17},{"ruleId":"161","severity":1,"message":"168","line":51,"column":15,"nodeType":"137","messageId":"163","endLine":51,"endColumn":19},{"ruleId":"161","severity":1,"message":"169","line":52,"column":15,"nodeType":"137","messageId":"163","endLine":52,"endColumn":19},{"ruleId":"135","severity":1,"message":"170","line":80,"column":27,"nodeType":"137","messageId":"138","endLine":80,"endColumn":35},{"ruleId":"135","severity":1,"message":"171","line":92,"column":23,"nodeType":"137","messageId":"138","endLine":92,"endColumn":27},{"ruleId":"135","severity":1,"message":"172","line":96,"column":13,"nodeType":"137","messageId":"138","endLine":96,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":116,"column":33,"nodeType":"159","messageId":"160","endLine":116,"endColumn":35},{"ruleId":"135","severity":1,"message":"143","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":23},{"ruleId":"135","severity":1,"message":"144","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"142","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"144","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"173","line":2,"column":18,"nodeType":"137","messageId":"138","endLine":2,"endColumn":21},{"ruleId":"135","severity":1,"message":"174","line":2,"column":23,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"175","line":2,"column":29,"nodeType":"137","messageId":"138","endLine":2,"endColumn":38},{"ruleId":"135","severity":1,"message":"176","line":2,"column":40,"nodeType":"137","messageId":"138","endLine":2,"endColumn":54},{"ruleId":"135","severity":1,"message":"145","line":2,"column":56,"nodeType":"137","messageId":"138","endLine":2,"endColumn":63},{"ruleId":"135","severity":1,"message":"146","line":2,"column":65,"nodeType":"137","messageId":"138","endLine":2,"endColumn":76},{"ruleId":"135","severity":1,"message":"147","line":2,"column":78,"nodeType":"137","messageId":"138","endLine":2,"endColumn":90},{"ruleId":"135","severity":1,"message":"148","line":2,"column":92,"nodeType":"137","messageId":"138","endLine":2,"endColumn":102},{"ruleId":"177","severity":1,"message":"178","line":107,"column":7,"nodeType":"179","endLine":107,"endColumn":27},{"ruleId":"135","severity":1,"message":"142","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"144","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},{"ruleId":"135","severity":1,"message":"173","line":2,"column":18,"nodeType":"137","messageId":"138","endLine":2,"endColumn":21},{"ruleId":"135","severity":1,"message":"174","line":2,"column":23,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"175","line":2,"column":29,"nodeType":"137","messageId":"138","endLine":2,"endColumn":38},{"ruleId":"135","severity":1,"message":"176","line":2,"column":40,"nodeType":"137","messageId":"138","endLine":2,"endColumn":54},{"ruleId":"135","severity":1,"message":"145","line":2,"column":56,"nodeType":"137","messageId":"138","endLine":2,"endColumn":63},{"ruleId":"135","severity":1,"message":"146","line":2,"column":65,"nodeType":"137","messageId":"138","endLine":2,"endColumn":76},{"ruleId":"135","severity":1,"message":"147","line":2,"column":78,"nodeType":"137","messageId":"138","endLine":2,"endColumn":90},{"ruleId":"135","severity":1,"message":"148","line":2,"column":92,"nodeType":"137","messageId":"138","endLine":2,"endColumn":102},{"ruleId":"135","severity":1,"message":"180","line":29,"column":7,"nodeType":"137","messageId":"138","endLine":29,"endColumn":12},{"ruleId":"177","severity":1,"message":"178","line":130,"column":7,"nodeType":"179","endLine":130,"endColumn":31},{"ruleId":"135","severity":1,"message":"156","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"142","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"143","line":1,"column":38,"nodeType":"137","messageId":"138","endLine":1,"endColumn":44},{"ruleId":"135","severity":1,"message":"181","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":22},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'windowWidth' is assigned a value but never used.","'setWindowWidth' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'select' is defined but never used.","'easeSin' is defined but never used.","'easeCubicIn' is defined but never used.","'easeCubicOut' is defined but never used.","'transition' is defined but never used.","'arrowup' is defined but never used.","'arrowdown' is defined but never used.","'windowHeight' is assigned a value but never used.","'setWindowHeight' is assigned a value but never used.","'imageMap' is assigned a value but never used.","'url' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'taskCount' is already defined.","redeclared","'t1' is assigned a value but never used.","'t2' is assigned a value but never used.","'cX' is already defined.","'cY' is already defined.","'curX' is already defined.","'curY' is already defined.","'svgWidth' is assigned a value but never used.","'svgT' is assigned a value but never used.","'clickoff' is assigned a value but never used.","'max' is defined but never used.","'sum' is defined but never used.","'hierarchy' is defined but never used.","'linkHorizontal' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'texzt' is assigned a value but never used.","'useSwipeable' is defined but never used.","no-global-assign","no-unsafe-negation"]