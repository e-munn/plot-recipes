[{"/Users/elimunn/Desktop/plot-recipes/src/index.js":"1","/Users/elimunn/Desktop/plot-recipes/src/App.js":"2","/Users/elimunn/Desktop/plot-recipes/src/reportWebVitals.js":"3","/Users/elimunn/Desktop/plot-recipes/src/components/home.js":"4","/Users/elimunn/Desktop/plot-recipes/src/components/card.js":"5","/Users/elimunn/Desktop/plot-recipes/src/components/pageMaster.js":"6","/Users/elimunn/Desktop/plot-recipes/src/components/scrolltotop.js":"7","/Users/elimunn/Desktop/plot-recipes/src/components/3lists/ingredientList.js":"8","/Users/elimunn/Desktop/plot-recipes/src/components/3lists/listize.js":"9","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plotMaster.js":"10","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plotize.js":"11","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plot.js":"12","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/vessels/vessels.js":"13","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/ingredients/ingredientNode.js":"14","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/actions/actions.js":"15","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plate/plate.js":"16","/Users/elimunn/Desktop/plot-recipes/src/aws-exports.js":"17","/Users/elimunn/Desktop/plot-recipes/src/components/1header/header.js":"18"},{"size":479,"mtime":1615051438842,"results":"19","hashOfConfig":"20"},{"size":1105,"mtime":1615173100541,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1614102428788,"results":"22","hashOfConfig":"20"},{"size":659,"mtime":1615160897320,"results":"23","hashOfConfig":"20"},{"size":1279,"mtime":1615131455571,"results":"24","hashOfConfig":"20"},{"size":1187,"mtime":1615178749182,"results":"25","hashOfConfig":"20"},{"size":246,"mtime":1614963473074,"results":"26","hashOfConfig":"20"},{"size":2122,"mtime":1615178741967,"results":"27","hashOfConfig":"20"},{"size":382,"mtime":1614804987229,"results":"28","hashOfConfig":"20"},{"size":1140,"mtime":1615178694367,"results":"29","hashOfConfig":"20"},{"size":3274,"mtime":1614981952340,"results":"30","hashOfConfig":"20"},{"size":5334,"mtime":1614983906328,"results":"31","hashOfConfig":"20"},{"size":2154,"mtime":1614973725253,"results":"32","hashOfConfig":"20"},{"size":3392,"mtime":1615003321044,"results":"33","hashOfConfig":"20"},{"size":2923,"mtime":1614817411936,"results":"34","hashOfConfig":"20"},{"size":979,"mtime":1614740546698,"results":"35","hashOfConfig":"20"},{"size":213,"mtime":1615155453677,"results":"36","hashOfConfig":"20"},{"size":1967,"mtime":1615178690864,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"6leyyy",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/elimunn/Desktop/plot-recipes/src/index.js",[],["85","86"],"/Users/elimunn/Desktop/plot-recipes/src/App.js",["87","88","89"],"/Users/elimunn/Desktop/plot-recipes/src/reportWebVitals.js",[],"/Users/elimunn/Desktop/plot-recipes/src/components/home.js",["90","91","92"],"import React, { useState, useEffect } from \"react\";\n\nimport {\n BrowserRouter as Router,\n Link\n} from \"react-router-dom\";\nimport recipe_master from '../media/recipes/recipe_master.json';\nimport Card from './card.js';\nimport '../css/cards.css';\n\n\nconst Home = () => {\n\n\n\n  return (\n    <>\n      <div\n        className={'cardbox'}\n        >\n          {recipe_master.map((d, i) =>\n                <Link\n                  to={'/' + d.path}\n                  >\n                    <Card\n                      d={d}\n                      i={i}\n                    />\n                </Link>\n            )\n          }\n      </div>\n    </>\n\n  )\n}\n\nexport default Home\n","/Users/elimunn/Desktop/plot-recipes/src/components/card.js",["93","94","95","96"],"import React, { useState } from \"react\";\nimport { scaleOrdinal } from 'd3'\nimport '../css/cards.css'\n\nimport creamy from '../media/images/creamy-white-bean-soup-with-spicy-paprika-oil.png'\nimport hearty from '../media/images/hearty-whole-wheat-pasta-with-brussels-sprouts-cheese-and-potato.png'\nimport sweet from '../media/images/sweet-potatoes-with-cilantro-chiles-sauce.png'\nimport tourte from '../media/images/tourte-aux-pommes-de-terre.png'\n\n\nconst Card = ({d, i}) => {\n\n\n  const imageMap = scaleOrdinal()\n    .domain(['creamy-white-bean-soup-with-spicy-paprika-oil', 'hearty-whole-wheat-pasta-with-brussels-sprouts-cheese-and-potato', 'sweet-potatoes-with-cilantro-chiles-sauce', 'tourte-aux-pommes-de-terre'])\n    .range([creamy,hearty,sweet, tourte])\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight)\n\n  return (\n    <div\n      className={'card-holder'}\n      >\n    <div\n      className={'card'}\n      style={{\n        backgroundImage: `url(${( imageMap(d.path) )})`\n      }}\n      >\n      <div className={'card-cover'}>\n          <div\n          className={ 'card-title' }\n          >\n            {d.name}\n        </div>\n      </div>\n    </div>\n  </div>\n\n  )\n}\n\nexport default Card\n","/Users/elimunn/Desktop/plot-recipes/src/components/pageMaster.js",["97","98","99"],"/Users/elimunn/Desktop/plot-recipes/src/components/scrolltotop.js",[],"/Users/elimunn/Desktop/plot-recipes/src/components/3lists/ingredientList.js",["100","101","102"],"/Users/elimunn/Desktop/plot-recipes/src/components/3lists/listize.js",["103","104","105","106","107"],"import React, {useState} from \"react\";\nimport {min, sum, hierarchy} from 'd3';\nimport dim from '../../media/theme/dim.json';\n\nexport default function listize(recipe) {\n\n  var all = hierarchy(recipe.recipe[0]);\n\n  const list = [];\n\n  all.each(d => {\n    if ('ingredient' in d.data) {\n      list.push(d)\n    }\n  })\n\n  var listHeight = list.length*20\n\n  return [list, listHeight ]\n\n};\n","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plotMaster.js",["108","109","110","111","112","113","114","115","116","117"],"/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plotize.js",["118","119","120","121","122","123","124","125"],"import React, { useState } from \"react\";\nimport { min, sum, hierarchy } from 'd3';\nimport dim from '../../media/theme/dim.json';\n\nexport default function plotize(recipe){\n\n  var root = hierarchy(recipe.recipe[0]);\n  root.each(\n    function(d, i){\n        if (d.depth == 0){\n      }\n      else if ('vessel' in d.data){\n        d.actions = d.children.filter(a => (\"action\" in a.data)).map(b => b.data.action_amt)\n        d.numIng = d.children.filter(a => (\"ingredient\" in a.data)).length\n        d.numShove = d.parent.children.filter(a => (\"vessel\" in a.data)).filter(a => (d.data.vorder > a.data.vorder)).length\n      }\n    }\n  )\n\n  var pY = 0\n  var pH = 0\n  var pYMax = 0\n  root.each(\n    function(d){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          pY += pH\n          d.data.pH = pH\n          d.data.pY = pY\n        } else {\n          pH = dim.v.padding1 + dim.v.padding2\n          pH += (sum(d.actions) * dim.a.amtScale) + ((d.numIng + d.actions.length) * dim.i.height)\n          pY = d.parent.data.pY + dim.v.gap\n          pY += pH\n          d.data.pY = pY\n          d.data.pH = pH\n          if ((pY) > pYMax){\n            pYMax = pY\n          }\n        }\n      }\n    }\n  )\n\n  pY = 0\n  pH = 0\n  var taskCount = 0\n  root.each(\n    function(d, i){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          pY = pYMax\n          pY -= pH\n          d.data.pH = pH\n          d.data.pY = pYMax\n        } else {\n\n          pH = dim.v.padding1 + dim.v.padding2\n          pH += (sum(d.actions) * dim.a.amtScale) + ((d.numIng + d.actions.length) * dim.i.height)\n          pY = d.parent.data.pY - dim.v.gap\n          pY -= pH\n          d.data.pY = pY\n          d.data.pH = pH\n\n        }\n      }\n    }\n  )\n\n  pY = 0\n  pH = 0\n  var taskCount = 0\n  root.eachAfter(\n    function(d, i){\n      if ('vessel' in d.data) {\n        taskCount = 0\n       }\n      else if ('action' in d.data) {\n        d.data.stepOrder=i\n        taskCount += dim.i.height\n        pY = d.parent.data.pY + dim.v.padding1\n        d.data.pY = pY + taskCount\n        taskCount += d.data.action_amt * dim.a.amtScale\n      } else if ('ingredient' in d.data) {\n        d.data.stepOrder=i\n        pY = d.parent.data.pY + dim.v.padding1\n        taskCount += dim.i.height\n        d.data.pY = pY + taskCount\n      }\n    }\n  )\n\n  const getLeafY = (a) => {\n    var leaves = a.leaves()\n    leaves = leaves.map(b => b.data.pY)\n    return min(leaves)\n  }\n\n  var preheat = null\n\n  var pX = dim.m.margin.left\n  root.each(\n    function(d, i){\n      if ('vessel' in d.data) {\n        if (d.depth == 0) {\n          d.data.pX = pX\n        } else {\n          d.data.stepOrder=i\n\n          pX = d.parent.data.pX\n          var vesselSibs = d.parent.children.filter(a => (\"vessel\" in a.data))\n          var numLess = vesselSibs.filter(b => (getLeafY(b) < getLeafY(d)) ).length\n          pX += numLess * dim.v.shove\n          d.data.pX = pX\n        }\n      } else {\n        if ('action' in d.data){\n          pX = d.parent.data.pX\n          d.data.pX = pX\n          if(d.data.action == 'bake'){\n            preheat = d.data.temp\n          }\n        } else if ('ingredient' in d.data){\n          pX = d.parent.data.pX\n          d.data.pX = pX\n        }\n      }\n    })\n\n    return [root, pYMax, preheat]\n\n};\n","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plot.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { useRef, useState, useEffect } from 'react';\nimport { select, ascending, transition, easeCubicIn, easeCubicOut } from 'd3';\n\nimport Vessel from './vessels/vessels.js';\nimport IngredientNode from './ingredients/ingredientNode.js';\nimport Action from './actions/actions.js';\nimport Plate from './plate/plate.js';\n\nimport color from '../../media/theme/colors.json';\nimport dim from '../../media/theme/dim.json';\n\nconst Plot = ({ recipe, preheat }) => {\n\n  const [focus, setFocus] = useState(false);\n  const prevFocus = useRef(false);\n\n  useEffect(() => {\n\n    if(!(focus == false)){\n\n        var cur = select(focus[0].parentElement)\n        var all = select(focus[0].parentElement.parentElement).selectAll('g')\n\n        var t1 = transition()\n          .duration(180)\n          .ease(easeCubicOut)\n        var t2 = transition()\n          .duration(1000)\n          .ease(easeCubicIn)\n\n        all\n          // .attr('filter', 'url(#blur)')\n          .attr('opacity', .5)\n\n        cur\n          .attr('filter', 'none')\n          .attr('opacity', 1)\n\n        var textColor\n        if(cur.attr('class') == 'ingredient'){\n          var cX = cur.select('circle').attr('cx')\n          var cY = cur.select('circle').attr('cy')\n          var curX = +cX + 10\n          var curY = +cY\n          textColor = color.blue2\n\n        } else if(cur.attr('class') == 'action'){\n          var cX = cur.select('rect').attr('x')\n          var cY = cur.select('rect').attr('y')\n          var curX = +cX + 10 + dim.i.radius\n          var curY = +cY + 8\n          textColor = color.orange2\n\n        }\n\n        cur.select('.existing')\n          .attr('visibility', 'hidden')\n\n\n\n        var amt = cur.append('text')\n          .classed('focus', 1)\n          .classed('plot-text', 1)\n          .classed('weight-2', 1)\n          .attr('x', curX)\n          .attr('y', curY)\n          .attr('fill', textColor)\n          .attr('font-size', dim.i.font.detailSize)\n          .attr('alignment-baseline', 'middle')\n          .text( focus[1].data.detail )\n\n        var svgWidth = focus[0].parentElement.parentElement.parentElement\n        svgWidth = select(svgWidth).attr('width')\n        var svgHeight = focus[0].parentElement.parentElement.parentElement\n        svgHeight = select(svgHeight).attr('height')\n\n\n        console.log(cur)\n\n\n        var clickOn = focus[0].parentElement\n\n        var svgT = clickOn.parentElement.parentElement\n\n        svgT = select(svgT)\n\n        clickOn = select(clickOn)\n\n        var clickoff = clickOn.append('rect')\n          .classed('focus', 1)\n          .attr('x', -dim.m.margin.left/2)\n          .attr('y', 0)\n          .attr('width', '100vw')\n          .attr('height', +svgHeight)\n          .attr('fill', 'transparent')\n          .attr('opacity', 1)\n          .on('click', () => {\n            cur.selectAll('.focus').remove()\n            all\n              .attr('filter', 'none')\n              .attr('opacity', 1)\n          })\n\n        clickOn.lower()\n\n        amt.raise()\n\n        if (!(prevFocus.current == false)){\n          var prev = prevFocus.current\n          prev = prev[0]\n          prev = prev.parentElement\n          prev = select(prev)\n          prev.select('.existing').attr('visibility', 'visible')\n\n          var rem = prev.selectAll('.focus')\n          rem.remove()\n        }\n        prevFocus.current = focus\n\n      }\n    }, [focus])\n\n\n\n\n\n  var root = recipe\n\n\n  var plate=[(\n    <Plate\n      root={root}\n    />\n  )]\n\n\n  var allVessels = root.descendants().filter(d => ('vessel' in d.data)).filter(d => (d.depth !== 0)).sort((a,b) => {return ascending(a.data.stepOrder, b.data.stepOrder)} )\n\n  var flows = []\n\n  allVessels.forEach((a,i) => {\n\n    const vessel = []\n    vessel.push(\n      <Vessel\n        a={a}\n        i={i}\n        dim={dim}\n        color={color}\n      />\n    )\n\n    const ingredientNodes = []\n\n    a.children.forEach((b,j) => {\n      if ('ingredient' in b.data) {\n        ingredientNodes.push(\n          <IngredientNode\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n            focus={focus}\n            setFocus={setFocus}\n          />)\n        }\n      })\n\n    const actionNodes = []\n\n    a.children.forEach((b,j) => {\n      if ('action' in b.data) {\n        actionNodes.push(\n          <Action\n            color={color}\n            dim={dim}\n            a={a}\n            b={b}\n            j={j}\n            focus={focus}\n            setFocus={setFocus}\n          />)\n        }\n      })\n\n    const preheatImage = []\n\n    if(preheat !== null){\n\n\n    }\n\n\n\n    flows.push(\n      <>\n        {vessel}\n        {actionNodes}\n        {ingredientNodes}\n        {plate}\n      </>\n    )\n  })\n\n  return (\n      <g\n        transform={`translate(${0}, ${40})`}\n        >\n        <defs>\n          <filter id=\"blur\" x=\"-0.08\" y=\"0\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"1\" />\n            <feOffset dx=\"0\" dy=\"0\" />\n          </filter>\n          <filter id=\"shadow\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\n            <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\".1\" dy=\".1\" />\n            <feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\".1\" />\n            <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n          </filter>\n        </defs>\n        {flows}\n      </g>\n  );\n};\n\nexport default Plot;\n","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/vessels/vessels.js",["140","141"],"import React, { useRef } from 'react';\n\nimport { select, linkVertical } from 'd3';\nimport '../../../css/plot.css'\n\n\nconst Vessel = ({ a, i, dim, color }) => {\n\n\n\n  const shape = (\n    <rect\n      className={'vesselShape'}\n      key={'vshape' + i}\n      width={ dim.v.s.width }\n      height={ a.data.pH }\n      x={ a.data.pX }\n      y={ a.data.pY }\n      transform={`translate(${dim.v.s.width*-.5}, ${0})`}\n      fill={ `${color.background}` }\n      stroke={  `${color.green1}` }\n      strokeWidth={ dim.v.s.stroke }\n      rx={ dim.v.s.width * .5 }\n      >\n    </rect>\n  )\n\n\n  const label = (\n    <text\n      className={'plot-text weight-1'}\n      key={'l' + i}\n      x={ a.data.pX - 4 }\n      y={ a.data.pY + 5 }\n      fill={ `${color.green2}` }\n      fontSize={dim.v.font.size}\n      letterSpacing={dim.v.font.spacing}\n      alignmentBaseline={'hanging'}\n      >\n        {/* {a.data.stepOrder} */}\n        {a.data.vessel}\n    </text>\n  )\n\n\n  const labelBack = (\n    <rect\n      key={'lb' + i}\n      x={ a.data.pX - 2 }\n      y={ a.data.pY + 2 }\n      width={ 12 }\n      height={ dim.v.font.size + 4 }\n      fill={ `${color.background}` }\n      stroke={ 'none' }\n      >\n        {a.data.vessel}\n    </rect>\n  )\n\n  const transfer = (\n    <path\n      key={'path' + i}\n      id={'path' + i}\n\n      stroke={ `${color.transfer}` }\n      strokeWidth={3}\n      fill={'none'}\n      strokeDasharray={'5 5'}\n      d={\n        linkVertical()({\n          source: [a.data.pX, a.data.pY + a.data.pH],\n          target: [a.parent.data.pX, a.parent.data.pY]\n        })\n        }\n      >\n    </path>\n  )\n\n  const transferText = (\n    <text\n      key={'textPath' + i}\n      className={'plot-text weight-2'}\n      fill={'black'}\n      textAnchor={'middle'}\n      style={{transform : 'translate(4px, 0px)', textTransform : 'none'}}\n      >\n        <textPath\n          href={'#path'+i}\n          startOffset={'50%'}\n          >\n          {a.data.transfer}\n        </textPath>\n    </text>\n  )\n\n\n\n  return (\n      <g>\n        {transfer}\n        {transferText}\n        {shape}\n        {labelBack}\n        {label}\n        {/* {dot} */}\n      </g>\n  );\n};\n\nexport default Vessel;\n","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/ingredients/ingredientNode.js",["142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, { useState, useEffect, useRef } from 'react';\nimport { select, selectAll, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\n// import 'fraction.js';\n\nimport '../../../css/plot.css'\n\n\nconst IngredientNode = ({ root, color, dim, a, b, j, focus, setFocus }) => {\n\n\n  const [done, setDone] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX + 20,\n      \"dotColor\": color.blue2,\n      \"posXTransform\": 'translate(18px, 0px)'\n    },\n    {\n      \"textposX\": b.data.pX + 10,\n      \"dotposX\": b.data.pX,\n      \"dotColor\": color.blue1,\n      \"posXTransform\": 'translate(0px, 0px)'\n    }\n  ]\n\n\n  const clean = (a, b) => {\n    var c = '';\n    if (a == null) {\n      a = ''\n    }\n    if (b == null){\n      b = ''\n    }\n\n    if ( (a == null) && (b == null) ) {\n    } else {\n      c = ' - ' + a + ' ' + b\n    }\n    return c\n  }\n\n  var texzt = b.data.ingredient + '<tspan>' + b.data.ing_amt + '</tspan>'\n  const label = (\n    <text\n      className={'plot-animation-fill plot-text weight-2 existing'}\n      key={'ilabel' + a + b + j}\n      x={ b.data.pX + 10 }\n      y={ b.data.pY + 1 }\n      // style={{filter:'url(#blur)'}}\n      fill={`${statesIng[done].dotColor}`}\n      textAnchor={'start'}\n      fontSize={dim.i.font.size}\n      alignmentBaseline={'middle'}\n      >\n      { b.data.ingredient}\n      <tspan\n        className={'plot-text weight-3'}\n        alignmentBaseline={'middle'}\n        fontSize={dim.i.font.amountSize}\n        fill={`${statesIng[done].dotColor}`}\n        >\n\n        { clean(b.data.ing_amt, b.data.ing_unit) }\n\n\n      </tspan>\n    </text>\n  )\n\n\n\n\n\n  // var length = label.textLength\n  //\n  //   const labelAmt = (\n  //     <text\n  //       className={'plot-text'}\n  //       className={'plot-animation-fill'}\n  //       key={'ilabel' + a + b + j}\n  //       x={ b.data.pX + 10 }\n  //       y={ b.data.pY + dim.i.font.size }\n  //       // style={{textTransform:'capitalize'}}\n  //       // style={{filter:'url(#blur)'}}\n  //       fill={`${statesIng[done].dotColor}`}\n  //       textAnchor={'start'}\n  //       fontSize={dim.i.font.amountSize}\n  //       fontWeight={dim.i.font.weight}\n  //       alignmentBaseline={'middle'}\n  //       >\n  //       {b.data.ing_amt + ' <tspan> ' + b.data.ing_amt + ' </tspan> ' }\n  //     </text>\n  //   )\n\n  const dot = (\n    <circle\n      className={'plot-animation-fill'}\n      key={'idot' + a + b + j}\n      r={ dim.i.radius }\n      cx={ b.data.pX }\n      cy={ b.data.pY }\n      fill={`${statesIng[done].dotColor}`}\n      >\n    </circle>\n\n  )\n  const focusRef = useRef();\n\n  const swipe = (\n    <rect\n      key={'iswipe' + a + b + j}\n      x={ b.data.pX - 20 }\n      y={ b.data.pY - dim.i.font.size/2 - 2}\n      width={ 110 }\n      height={ dim.i.font.size + 6}\n      fill={ 'transparent' }\n      ref={ focusRef }\n      onClick={ () => setFocus([focusRef.current, b]) }\n      >\n    </rect>\n  )\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => setDone(1),\n    onSwipedRight: () => setDone(0)\n  });\n\n  return (\n    <g\n      className={'plot-animation-move'}\n      className={'ingredient'}\n      style={{transform: `${ statesIng[done].posXTransform }`}}\n      {...handlers}\n      >\n      {label}\n      {dot}\n      {swipe}\n\n    </g>\n\n  );\n};\n\nexport default IngredientNode;\n","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/actions/actions.js",["155","156","157","158","159","160","161","162","163","164","165"],"import React, { useState, useEffect, useRef } from 'react';\nimport { select, max, sum,  hierarchy, linkHorizontal, easeSin, easeCubicIn, easeCubicOut, transition } from 'd3';\nimport { useSwipeable } from 'react-swipeable';\n\nimport '../../../css/plot.css'\n\n\nconst Action = ({ root, color, dim, a, b, j, focus, setFocus}) => {\n\n  const [done, setDone] = useState(0);\n\n  const statesIng = [\n    {\n      \"textposX\": b.data.pX + 30,\n      \"dotposX\": b.data.pX - dim.a.width/2 + 20,\n      \"dotColor\": color.orange2,\n      \"posXTransform\": 'translate(18px, 0px)'\n    },\n    {\n      \"textposX\": b.data.pX + 10,\n      \"dotposX\":  b.data.pX - dim.a.width/2,\n      \"dotColor\": color.orange1,\n      \"posXTransform\": 'translate(0px, 0px)'\n    }\n  ]\n\n  const focusRef = useRef();\n\n  const label = (\n    <text\n      className={'plot-animation-fill plot-text weight-2'}\n      key={'action' + b + j}\n      x={ b.data.pX + 10 }\n      y={ b.data.pY + 5 }\n      fill={`${statesIng[done].dotColor}`}\n      textAnchor={'start'}\n      fontSize={dim.a.font.size}\n      fontWeight={dim.a.font.weight}\n      alignmentBaseline={'middle'}\n      ref={ focusRef }\n      onClick={ () => setFocus([focusRef.current, b]) }\n      >\n      {/* { b.data.stepOrder} */}\n      { b.data.action}\n\n    </text>\n  )\n\n  const aHeight = b.data.action_amt * dim.a.amtScale\n\n  const shape = (\n    <rect\n      className={'plot-animation-fill'}\n      key={'ashape' + b + j}\n      x={ b.data.pX - dim.a.width/2 }\n      y={ b.data.pY - dim.a.width/2 }\n      width={ dim.a.width }\n      height={ aHeight + dim.a.width }\n      fill={`${statesIng[done].dotColor}`}\n      rx={dim.a.width/2}\n      >\n    </rect>\n  )\n\n  // const dot = (\n  //   <circle\n  //     className={'name'}\n  //     key={'ingredient' + b + j}\n  //     r={4}\n  //     cx={ b.data.pX + 20}\n  //     cy={ b.data.pY }\n  //     fill={`${color.orange3}`}\n  //     >\n  //   </circle>\n  //\n  // )\n\n\n  const swipe = (\n    <rect\n      key={'aswipe' + a + b + j}\n      x={ b.data.pX - 20 }\n      y={ b.data.pY - dim.i.font.size/2 - 2}\n      width={ 90 }\n      height={ aHeight + dim.a.width + 4}\n      fill={ 'transparent' }\n      // fill={ 'orange' }\n      // opacity={ .3 }\n\n      >\n    </rect>\n  )\n\n  const tap = (\n    <rect\n      key={'aswipe' + a + b + j}\n      x={ b.data.pX - 20 }\n      y={ b.data.pY - dim.i.font.size/2 - 2}\n      width={ 90 }\n      height={ dim.i.font.size + 10}\n\n      fill={ 'transparent' }\n      // fill={ 'orange' }\n      // opacity={ .3 }\n\n      >\n    </rect>\n  )\n\n\n\n\n    const handlers = useSwipeable({\n      onSwipedLeft: () => setDone(1),\n      onSwipedRight: () => setDone(0),\n    });\n\n  return (\n    <g\n      className={'plot-animation-move'}\n      className={'action'}\n      style={{transform: `${ statesIng[done].posXTransform }`}}\n      {...handlers}\n\n      >\n      {shape}\n      {label}\n      {swipe}\n      {tap}\n\n\n\n      {/* {dot} */}\n\n    </g>\n\n  );\n};\n\nexport default Action;\n","/Users/elimunn/Desktop/plot-recipes/src/components/2plot/plate/plate.js",["166","167","168","169"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport '../../../css/plot.css'\nimport color from '../../../media/theme/colors.json';\nimport dim from '../../../media/theme/dim.json';\n\nimport platesvg from '../../../media/symbols/plate.svg';\n\n\nconst Plate = ({ root }) => {\n\n\n  const plate = (\n    <image\n      // className={'plot-animation-fill'}\n      key={'plate'}\n      href={ platesvg }\n      width={dim.p.d}\n      height={dim.p.d}\n      x={ root.data.pX - dim.p.d/2}\n      y={ root.data.pY - dim.p.d/2}\n      fill={color.green1}\n      >\n    </image>\n\n  )\n\n  const serve = (\n    <text\n      // className={'plot-animation-fill'}\n      key={'platetext'}\n      x={ root.data.pX + dim.p.d/2 + 5}\n      y={ root.data.pY + 2}\n      alignmentBaseline={'middle'}\n\n      fill={color.green2}\n      >\n        {'Serve'}\n    </text>\n\n  )\n\n\n  return (\n    <g>\n      {plate}\n      {serve}\n\n    </g>\n\n  );\n};\n\nexport default Plate;\n","/Users/elimunn/Desktop/plot-recipes/src/aws-exports.js",[],["170","171"],"/Users/elimunn/Desktop/plot-recipes/src/components/1header/header.js",["172","173","174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"184","line":8,"column":3,"nodeType":"182","messageId":"183","endLine":8,"endColumn":7},{"ruleId":"180","severity":1,"message":"185","line":23,"column":18,"nodeType":"182","messageId":"183","endLine":23,"endColumn":27},{"ruleId":"180","severity":1,"message":"186","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":4,"column":19,"nodeType":"182","messageId":"183","endLine":4,"endColumn":25},{"ruleId":"180","severity":1,"message":"188","line":18,"column":10,"nodeType":"182","messageId":"183","endLine":18,"endColumn":21},{"ruleId":"180","severity":1,"message":"189","line":18,"column":23,"nodeType":"182","messageId":"183","endLine":18,"endColumn":37},{"ruleId":"180","severity":1,"message":"190","line":19,"column":10,"nodeType":"182","messageId":"183","endLine":19,"endColumn":22},{"ruleId":"180","severity":1,"message":"191","line":19,"column":24,"nodeType":"182","messageId":"183","endLine":19,"endColumn":39},{"ruleId":"180","severity":1,"message":"186","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"192","line":1,"column":38,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":1,"column":35,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"189","line":12,"column":21,"nodeType":"182","messageId":"183","endLine":12,"endColumn":35},{"ruleId":"180","severity":1,"message":"193","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"180","severity":1,"message":"186","line":1,"column":16,"nodeType":"182","messageId":"183","endLine":1,"endColumn":24},{"ruleId":"180","severity":1,"message":"194","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":12},{"ruleId":"180","severity":1,"message":"195","line":2,"column":14,"nodeType":"182","messageId":"183","endLine":2,"endColumn":17},{"ruleId":"180","severity":1,"message":"196","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":11},{"ruleId":"180","severity":1,"message":"181","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"192","line":1,"column":38,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"197","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"198","line":3,"column":18,"nodeType":"182","messageId":"183","endLine":3,"endColumn":25},{"ruleId":"180","severity":1,"message":"199","line":3,"column":27,"nodeType":"182","messageId":"183","endLine":3,"endColumn":38},{"ruleId":"180","severity":1,"message":"200","line":3,"column":40,"nodeType":"182","messageId":"183","endLine":3,"endColumn":52},{"ruleId":"180","severity":1,"message":"201","line":3,"column":54,"nodeType":"182","messageId":"183","endLine":3,"endColumn":64},{"ruleId":"180","severity":1,"message":"202","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":15},{"ruleId":"180","severity":1,"message":"203","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":17},{"ruleId":"180","severity":1,"message":"189","line":10,"column":23,"nodeType":"182","messageId":"183","endLine":10,"endColumn":37},{"ruleId":"180","severity":1,"message":"193","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"180","severity":1,"message":"186","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":10,"column":21,"nodeType":"206","messageId":"207","endLine":10,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":26,"column":21,"nodeType":"206","messageId":"207","endLine":26,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":51,"column":21,"nodeType":"206","messageId":"207","endLine":51,"endColumn":23},{"ruleId":"208","severity":1,"message":"209","line":72,"column":7,"nodeType":"182","messageId":"210","endLine":72,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":105,"column":21,"nodeType":"206","messageId":"207","endLine":105,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":120,"column":28,"nodeType":"206","messageId":"207","endLine":120,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":19,"column":16,"nodeType":"206","messageId":"207","endLine":19,"endColumn":18},{"ruleId":"180","severity":1,"message":"211","line":24,"column":13,"nodeType":"182","messageId":"183","endLine":24,"endColumn":15},{"ruleId":"180","severity":1,"message":"212","line":27,"column":13,"nodeType":"182","messageId":"183","endLine":27,"endColumn":15},{"ruleId":"204","severity":1,"message":"205","line":40,"column":30,"nodeType":"206","messageId":"207","endLine":40,"endColumn":32},{"ruleId":"204","severity":1,"message":"205","line":47,"column":37,"nodeType":"206","messageId":"207","endLine":47,"endColumn":39},{"ruleId":"208","severity":1,"message":"213","line":48,"column":15,"nodeType":"182","messageId":"210","endLine":48,"endColumn":17},{"ruleId":"208","severity":1,"message":"214","line":49,"column":15,"nodeType":"182","messageId":"210","endLine":49,"endColumn":17},{"ruleId":"208","severity":1,"message":"215","line":50,"column":15,"nodeType":"182","messageId":"210","endLine":50,"endColumn":19},{"ruleId":"208","severity":1,"message":"216","line":51,"column":15,"nodeType":"182","messageId":"210","endLine":51,"endColumn":19},{"ruleId":"180","severity":1,"message":"217","line":73,"column":27,"nodeType":"182","messageId":"183","endLine":73,"endColumn":35},{"ruleId":"180","severity":1,"message":"218","line":85,"column":23,"nodeType":"182","messageId":"183","endLine":85,"endColumn":27},{"ruleId":"180","severity":1,"message":"219","line":89,"column":13,"nodeType":"182","messageId":"183","endLine":89,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":108,"column":33,"nodeType":"206","messageId":"207","endLine":108,"endColumn":35},{"ruleId":"180","severity":1,"message":"220","line":187,"column":11,"nodeType":"182","messageId":"183","endLine":187,"endColumn":23},{"ruleId":"180","severity":1,"message":"192","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":23},{"ruleId":"180","severity":1,"message":"197","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"197","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"221","line":2,"column":18,"nodeType":"182","messageId":"183","endLine":2,"endColumn":27},{"ruleId":"180","severity":1,"message":"222","line":2,"column":29,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"195","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":37},{"ruleId":"180","severity":1,"message":"223","line":2,"column":40,"nodeType":"182","messageId":"183","endLine":2,"endColumn":49},{"ruleId":"180","severity":1,"message":"224","line":2,"column":51,"nodeType":"182","messageId":"183","endLine":2,"endColumn":65},{"ruleId":"180","severity":1,"message":"198","line":2,"column":67,"nodeType":"182","messageId":"183","endLine":2,"endColumn":74},{"ruleId":"180","severity":1,"message":"199","line":2,"column":76,"nodeType":"182","messageId":"183","endLine":2,"endColumn":87},{"ruleId":"180","severity":1,"message":"200","line":2,"column":89,"nodeType":"182","messageId":"183","endLine":2,"endColumn":101},{"ruleId":"180","severity":1,"message":"201","line":2,"column":103,"nodeType":"182","messageId":"183","endLine":2,"endColumn":113},{"ruleId":"180","severity":1,"message":"225","line":46,"column":7,"nodeType":"182","messageId":"183","endLine":46,"endColumn":12},{"ruleId":"226","severity":1,"message":"227","line":135,"column":7,"nodeType":"228","endLine":135,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"197","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"222","line":2,"column":18,"nodeType":"182","messageId":"183","endLine":2,"endColumn":21},{"ruleId":"180","severity":1,"message":"195","line":2,"column":23,"nodeType":"182","messageId":"183","endLine":2,"endColumn":26},{"ruleId":"180","severity":1,"message":"223","line":2,"column":29,"nodeType":"182","messageId":"183","endLine":2,"endColumn":38},{"ruleId":"180","severity":1,"message":"224","line":2,"column":40,"nodeType":"182","messageId":"183","endLine":2,"endColumn":54},{"ruleId":"180","severity":1,"message":"198","line":2,"column":56,"nodeType":"182","messageId":"183","endLine":2,"endColumn":63},{"ruleId":"180","severity":1,"message":"199","line":2,"column":65,"nodeType":"182","messageId":"183","endLine":2,"endColumn":76},{"ruleId":"180","severity":1,"message":"200","line":2,"column":78,"nodeType":"182","messageId":"183","endLine":2,"endColumn":90},{"ruleId":"180","severity":1,"message":"201","line":2,"column":92,"nodeType":"182","messageId":"183","endLine":2,"endColumn":102},{"ruleId":"226","severity":1,"message":"227","line":121,"column":7,"nodeType":"228","endLine":121,"endColumn":27},{"ruleId":"180","severity":1,"message":"186","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"192","line":1,"column":38,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"229","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"176","replacedBy":"230"},{"ruleId":"178","replacedBy":"231"},{"ruleId":"180","severity":1,"message":"192","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":23},{"ruleId":"180","severity":1,"message":"186","line":1,"column":25,"nodeType":"182","messageId":"183","endLine":1,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":1,"column":35,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"232","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":13},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setaWidth' is assigned a value but never used.","'useState' is defined but never used.","'Router' is defined but never used.","'windowWidth' is assigned a value but never used.","'setWindowWidth' is assigned a value but never used.","'windowHeight' is assigned a value but never used.","'setWindowHeight' is assigned a value but never used.","'useRef' is defined but never used.","'React' is defined but never used.","'min' is defined but never used.","'sum' is defined but never used.","'dim' is defined but never used.","'select' is defined but never used.","'easeSin' is defined but never used.","'easeCubicIn' is defined but never used.","'easeCubicOut' is defined but never used.","'transition' is defined but never used.","'arrowup' is defined but never used.","'arrowdown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'taskCount' is already defined.","redeclared","'t1' is assigned a value but never used.","'t2' is assigned a value but never used.","'cX' is already defined.","'cY' is already defined.","'curX' is already defined.","'curY' is already defined.","'svgWidth' is assigned a value but never used.","'svgT' is assigned a value but never used.","'clickoff' is assigned a value but never used.","'preheatImage' is assigned a value but never used.","'selectAll' is defined but never used.","'max' is defined but never used.","'hierarchy' is defined but never used.","'linkHorizontal' is defined but never used.","'texzt' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useSwipeable' is defined but never used.",["233"],["234"],"'color' is defined but never used.","no-global-assign","no-unsafe-negation"]